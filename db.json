{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/images/widget.png","path":"images/widget.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b34796abda73359982d6f477bf0f75c4ee8afc02","modified":1685418766650},{"_id":"source/_posts/.DS_Store","hash":"997e9a218b569195d2a40ad1d4de93344a5300b9","modified":1685418766651},{"_id":"source/_posts/SSR攻击实例.md","hash":"ac0fb48ea55c94fa79e1768443f20e1400123db9","modified":1685418766651},{"_id":"source/_posts/alibaba.md","hash":"51516a62a10dfc93446a798c8dfa2d4f9379a529","modified":1685418766651},{"_id":"source/_posts/highcharts.md","hash":"d5139a208912fb614664813f698c0bb0d0443a2f","modified":1685418766652},{"_id":"source/_posts/hexo搭建.md","hash":"999436ff44c396d1c4ff0d36b97e93d45562a690","modified":1685418766652},{"_id":"source/_posts/fis3学习笔记.md","hash":"08b8513d4da47a3abbf34fd2752d13751fe36348","modified":1685418766651},{"_id":"source/_posts/js面试题.md","hash":"3b60de840918645ec59d858a2e79a1c45545bcb0","modified":1685418766652},{"_id":"source/_posts/kaigong.md","hash":"d7121ea9ec58a5c0176b98588b479ed2b2c766de","modified":1685418766653},{"_id":"source/_posts/certify.md","hash":"1a843659282de49c20538812367c4740fcc2ed7e","modified":1685419837212},{"_id":"source/_posts/node-blog.md","hash":"127d01a98d34a57c3914d360db5bd50d697aef3a","modified":1685418766653},{"_id":"source/_posts/npm相关.md","hash":"7e92a24d5ff5bd5c82b98031c3449350c0367933","modified":1685418766654},{"_id":"source/_posts/youwan.md","hash":"7c24e1e741332e1c8e012daa8c5e57c44c080d35","modified":1685418766654},{"_id":"source/_posts/widget学习笔记.md","hash":"851012f52171d072f71a78e896b3bff3a2ee07cb","modified":1685418766654},{"_id":"source/_posts/开源vue项目合集.md","hash":"6e1fe1571dfdfab9af342e367ee0b421c383c4f3","modified":1685418766655},{"_id":"source/_posts/kaiyuan.md","hash":"88093a4361052852e39388f322c6bbe654ebf68c","modified":1685418766653},{"_id":"source/_posts/前端面试常见集合.md","hash":"ce82d6481363ebd743501e5ab42d78ca171502e3","modified":1685418766655},{"_id":"source/images/widget.png","hash":"8ba0d3578a02ab096d0ded970b0271cd5fb1d04d","modified":1685418766659},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1685419537432},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1685419537432},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1685419537432},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1685419537435},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1685419537435},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1685419537435},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1685419537435},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1685419537435},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1685419537455},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1685419537436},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1685419537433},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1685419537434},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1685419537433},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1685419537440},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1685419537434},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1685419537434},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1685419537434},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1685419537434},{"_id":"themes/next/_config.yml","hash":"2438c86c29357800ca20f2fb14cde3c7fffa303a","modified":1685421093404},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1685419537434},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1685419537434},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1685419537434},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1685419537435},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1685419537436},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1685419537436},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1685419537436},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1685419537437},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1685419537437},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1685419537437},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1685419537437},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1685419537437},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1685419537437},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1685419537454},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1685419537454},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1685419537454},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1685419537443},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1685419537454},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1685419537454},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1685419537455},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1685419537440},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1685419537440},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1685419537440},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1685419537440},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1685419537440},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1685419537441},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1685419537441},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1685419537441},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1685419537441},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1685419537441},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1685419537442},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1685419537442},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1685419537442},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1685419537442},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1685419537442},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1685419537442},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1685419537442},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1685419537443},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1685419537443},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1685419537443},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1685419537460},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1685419537443},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1685419537443},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1685419537433},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1685419537433},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1685419537433},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1685419537434},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1685419537437},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1685419537438},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1685419537438},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1685419537438},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1685419537438},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1685419537438},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1685419537438},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1685419537439},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1685419537439},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1685419537439},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1685419537439},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1685419537439},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1685419537440},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1685419537443},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1685419537444},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1685419537448},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1685419537449},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1685419537444},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1685419537449},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1685419537450},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1685419537452},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1685419537452},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1685419537450},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1685419537450},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1685419537452},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1685419537444},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1685419537446},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1685419537455},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1685419537458},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1685419537444},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1685419537459},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1685419537459},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1685419537459},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1685419537458},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1685419537459},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1685419537459},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1685419537459},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1685419537460},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1685419537460},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1685419537460},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1685419537448},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1685419537446},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1685419537461},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1685419537461},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1685419537461},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1685419537461},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1685419537462},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1685419537462},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1685419537462},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1685419537462},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1685419537463},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1685419537487},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1685419537479},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1685419537488},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1685419537494},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1685419537489},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1685419537488},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1685419537488},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1685419537489},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1685419537489},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1685419537489},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1685419537490},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1685419537490},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1685419537490},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1685419537490},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1685419537491},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1685419537491},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1685419537491},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1685419537492},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1685419537492},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1685419537492},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1685419537492},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1685419537449},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1685419537449},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1685419537449},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1685419537449},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1685419537449},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1685419537450},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1685419537450},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1685419537450},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1685419537493},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1685419537450},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1685419537451},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1685419537450},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1685419537451},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1685419537451},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1685419537451},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1685419537451},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1685419537451},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1685419537451},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1685419537452},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1685419537452},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1685419537452},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1685419537452},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1685419537453},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1685419537453},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1685419537453},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1685419537453},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1685419537453},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1685419537453},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1685419537454},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1685419537454},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1685419537454},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1685419537445},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1685419537445},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1685419537445},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1685419537445},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1685419537444},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1685419537445},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1685419537446},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1685419537445},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1685419537446},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1685419537447},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1685419537448},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1685419537448},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1685419537447},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1685419537447},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1685419537447},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1685419537455},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1685419537447},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1685419537456},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1685419537456},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1685419537456},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1685419537447},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1685419537457},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1685419537457},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1685419537457},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1685419537457},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1685419537458},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1685419537458},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1685419537458},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1685419537448},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1685419537486},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1685419537487},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1685419537486},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1685419537486},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1685419537487},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1685419537493},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1685419537493},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1685419537497},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1685419537497},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1685419537474},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1685419537474},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1685419537474},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1685419537476},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1685419537476},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1685419537478},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1685419537476},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1685419537471},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1685419537476},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1685419537471},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1685419537464},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1685419537464},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1685419537463},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1685419537468},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1685419537480},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1685419537480},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1685419537480},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1685419537481},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1685419537481},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1685419537479},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1685419537482},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1685419537482},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1685419537483},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1685419537483},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1685419537483},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1685419537483},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1685419537484},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1685419537484},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1685419537485},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1685419537484},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1685419537485},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1685419537485},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1685419537496},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1685419537475},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1685419537495},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1685419537475},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1685419537475},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1685419537475},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1685419537477},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1685419537477},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1685419537477},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1685419537477},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1685419537478},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1685419537478},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1685419537469},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1685419537478},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1685419537470},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1685419537470},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1685419537470},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1685419537470},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1685419537471},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1685419537471},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1685419537471},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1685419537472},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1685419537472},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1685419537472},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1685419537472},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1685419537473},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1685419537472},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1685419537473},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1685419537473},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1685419537473},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1685419537473},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1685419537464},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1685419537464},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1685419537464},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1685419537465},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1685419537465},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1685419537465},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1685419537465},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1685419537466},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1685419537466},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1685419537466},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1685419537467},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1685419537466},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1685419537467},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1685419537467},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1685419537467},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1685419537467},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1685419537468},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1685419537468},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1685419537468},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1685419537468},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1685419537469},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1685419537469},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1685419537469},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1685419537495},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1685419537497},{"_id":"public/2018/04/11/highcharts/index.html","hash":"724af34bb48f6178dff23e576c576808b5753100","modified":1685974759838},{"_id":"public/2016/06/21/alibaba/index.html","hash":"b4ed6bca547f9fbb1b1f5bcdd9bea6a5625b25a8","modified":1685974759838},{"_id":"public/archives/index.html","hash":"9962d017faeb1905f9936b9db641b9cecd4f4b76","modified":1685974759838},{"_id":"public/archives/2016/index.html","hash":"28e0650d8abb9a4363d0809ca8b691ba41e153cc","modified":1685974759838},{"_id":"public/archives/2017/index.html","hash":"4b46572721889646ed490eff3df4c49429f4a696","modified":1685974759838},{"_id":"public/archives/2016/06/index.html","hash":"8195d9b4424061d428e1929c1bcf69c4402d3580","modified":1685974759838},{"_id":"public/archives/page/2/index.html","hash":"66eabaa0e16a22b1d9baa97f9deabcad92380616","modified":1685974759838},{"_id":"public/archives/2017/01/index.html","hash":"3632230465042531bf623eaf4c81731ed2712ff9","modified":1685974759838},{"_id":"public/archives/2017/02/index.html","hash":"60145e5ae159282bc37a9b37ddc76344d67b13ae","modified":1685974759838},{"_id":"public/archives/2017/03/index.html","hash":"8bc650d5011c8caa2cd7d8ae872ef71d4984656e","modified":1685974759838},{"_id":"public/archives/2017/12/index.html","hash":"5e7fefa4ae84b107ff5bafe9df914f72d43ae61a","modified":1685974759838},{"_id":"public/archives/2018/index.html","hash":"c81ea037d625cd78001e08e6d0dbd41555842069","modified":1685974759838},{"_id":"public/archives/2017/04/index.html","hash":"95892d780a1608dd9545ca23db1183e12ff7fead","modified":1685974759838},{"_id":"public/archives/2018/04/index.html","hash":"77c28e395d1c8f95e570ddb9e6906132a4c224cf","modified":1685974759838},{"_id":"public/archives/2018/03/index.html","hash":"6a21cfc76ea2dc09752aa1e7abc25d504282f96b","modified":1685974759838},{"_id":"public/archives/2023/05/index.html","hash":"ffe10f049e944156d9e8385dc847cbe24522a2cd","modified":1685974759838},{"_id":"public/archives/2023/index.html","hash":"e46d6ea4f5d2d45ebcc40133b4f18b5802a7e81d","modified":1685974759838},{"_id":"public/categories/基础知识/index.html","hash":"7c4359ac0ea02d5f36df156b3f7a616a17f22567","modified":1685974759838},{"_id":"public/categories/进阶/index.html","hash":"a42a183e7b75f81b4841be2d92f708217ad344c5","modified":1685974759838},{"_id":"public/categories/面试/index.html","hash":"b347ead6059e429e55884384d96ac264154a4e86","modified":1685974759838},{"_id":"public/categories/vue/index.html","hash":"74cf3f6accbbffc6e610c8864450cac519abf51b","modified":1685974759838},{"_id":"public/categories/基础知识-面试/index.html","hash":"e5259daf3dfe632010b28f27e7b483b84c2db396","modified":1685974759838},{"_id":"public/categories/玩/index.html","hash":"0350b8733afe7ebd26dfbbecf3171dfdb971b8af","modified":1685974759838},{"_id":"public/tags/js/index.html","hash":"cd1bda2df087a610ee85b43ab9c13f607112cb5f","modified":1685974759838},{"_id":"public/tags/证书/index.html","hash":"f7f75dbce15299825272c9453418b78ac3e9a06a","modified":1685974759838},{"_id":"public/tags/面试/index.html","hash":"12879a224283aee526bbdabd24488d752a0de211","modified":1685974759838},{"_id":"public/tags/js-框架-打包工具/index.html","hash":"06794c092e5ab5301496ce2e96ca64443d13f524","modified":1685974759838},{"_id":"public/tags/vue/index.html","hash":"66f02bac423f5aadb62b685b5d4f04cc65095ef3","modified":1685974759838},{"_id":"public/tags/js-面试/index.html","hash":"0dceff057e9b276e620f482bff88f9cada503e41","modified":1685974759838},{"_id":"public/tags/路上/index.html","hash":"d1e5b395ff427ef3eae192be2b483bdaf8bbc1d0","modified":1685974759838},{"_id":"public/2023/05/05/certify/index.html","hash":"2d9e82089344ecb827a8f11602f00506ef3752fe","modified":1685974759838},{"_id":"public/2018/03/21/开源vue项目合集/index.html","hash":"12258b5315e3e3e3ee5def10ac753dc0f2b9eca8","modified":1685974759838},{"_id":"public/2018/03/21/kaiyuan/index.html","hash":"c0bbd4970d29a3f3637b333611ad8093f56a71d5","modified":1685974759838},{"_id":"public/2017/12/11/前端面试常见集合/index.html","hash":"31a8f28c5f8f37319b4b00b71e5a4ba0d537ca99","modified":1685974759838},{"_id":"public/2017/04/05/node-blog/index.html","hash":"8b276b998268269abd7e1960127ba18ea7f6bdea","modified":1685974759838},{"_id":"public/2017/03/01/npm相关/index.html","hash":"11792e9af156cca736e476e7a0302a152717c398","modified":1685974759838},{"_id":"public/2017/02/26/js面试题/index.html","hash":"2b73ca4779c86d15585276527c08abe3fd357243","modified":1685974759838},{"_id":"public/2017/02/21/youwan/index.html","hash":"6d966af43c5b178b45d51f216a33cd556c96062e","modified":1685974759838},{"_id":"public/2017/02/07/kaigong/index.html","hash":"a65e474e7196ce79fed1067551db05c034e132e8","modified":1685974759838},{"_id":"public/2017/02/06/widget学习笔记/index.html","hash":"f5a9e6d9f91d95b5c4b227398fe65a55aac8ed4f","modified":1685974759838},{"_id":"public/2017/02/05/SSR攻击实例/index.html","hash":"094399abd90b92f6ed1372877846f2f17216aef2","modified":1685974759838},{"_id":"public/2017/01/26/hexo搭建/index.html","hash":"7ec3ac5bf649948e75afd681544755878c3bdd95","modified":1685974759838},{"_id":"public/2017/02/05/fis3学习笔记/index.html","hash":"ba8a36fce1c1ec95adfa3a734ca8cf202e0a3e62","modified":1685974759838},{"_id":"public/index.html","hash":"81f010b3b36232655fe8d56d886d334c5ae0a163","modified":1685974759838},{"_id":"public/page/2/index.html","hash":"7af2221183a9024f7e7882d3fd8ebf9b7c7cefd3","modified":1685974759838},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1685421224105},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1685421224105},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1685421224105},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1685421224105},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1685421224105},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1685421224105},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1685421224105},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1685421224105},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1685421224105},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1685421224105},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1685421224105},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1685421224105},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1685421224105},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1685421224105},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1685421224105},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1685421224105},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1685421224105},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1685421224105},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1685421224105},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1685421224105},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1685421224105},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1685421224105},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1685421224105},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1685421224105},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1685421224105},{"_id":"public/css/main.css","hash":"233600a7307f1d0aec7598c1346fd6f1e54639e8","modified":1685421224105},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1685421224105},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1685421224105},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1685421224105},{"_id":"public/images/widget.png","hash":"8ba0d3578a02ab096d0ded970b0271cd5fb1d04d","modified":1685421224105},{"_id":"source/_posts/考研安排.md","hash":"ceadebe367efcb9a113dd0deb3bc6c0c860b12be","modified":1685974749671},{"_id":"public/archives/2023/06/index.html","hash":"d130bbd8a5f23867fcee11929959b156c09db8a2","modified":1685974759838},{"_id":"public/tags/进阶-路上/index.html","hash":"b2fc6532f4142ee9d4d2ee6e79d1838de9c42af5","modified":1685974759838},{"_id":"public/2023/06/01/考研安排/index.html","hash":"ecfe90115119ee2300c65da6e7013e7b3f5672c9","modified":1685974759838}],"Category":[{"name":"基础知识","_id":"cli9sa41e0002jza532cv6j1p"},{"name":"进阶","_id":"cli9sa41i0007jza5g9f74v4y"},{"name":"面试","_id":"cli9sa41k000ejza56u9k27my"},{"name":"vue","_id":"cli9sa41n000ljza58dpt0xwx"},{"name":"基础知识 面试","_id":"cli9sa41p000ujza5743nhso0"},{"name":"玩","_id":"cli9sa41r0012jza5cocu8pa7"}],"Data":[],"Page":[],"Post":[{"title":"SSR相关那些事情","date":"2017-02-05T15:30:00.000Z","_content":"\n*      SSRF （Server-Side Request Forgrey）：\n     服务器端请求伪造，是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，它将一个发起网络请求的服务当做跳板来攻击其他服务,SSRF的攻击目标一般是内网。当服务端提供了从其他服务器获取数据的功能（例如从指定URL获取网页文本内容、加载指定地址的图片、下载等），但是没有对目标地址做过滤与现实时就会出现SSRF。\n*     SSRF的危害：\n     很多网站提供了从其他服务器上获取数据的能力，该功能被恶意使用，可以利用存在缺陷的web应用作为代理攻击远程和本地的服务器。\n1. 可以扫描内部网络\n2. 可以构造数据攻击内部主机\n*     漏洞挖掘\n其实只要能对外发起网络请求就有可能存在SSRF漏洞。\n1. 从WEB功能上寻找\n    通过URL分享内容\n    文件处理、编码处理、转码等服务\n    在线翻译\n    通过URL地址加载与下载图片\n    图片、文章的收藏\n    设置邮件接收服务器\n2. 从URL关键字寻找\n    share、wap、url、link、src、source、target、u、3g、\n    display、sourceURl、imageURL、domain...\n* 漏洞验证\nhttp://www.douban.com/***/service?image=http://www.baidu.com/img/bd_logo1.png\n1. 右键在新窗口打开图片，若浏览器上URL地址为http://www.baidu.com/img/bd_logo1.png，\n    说明不存在SSRF漏洞。  \n2. firebug看网络连接信息，若没有http://www.baidu.com/img/bd_logo1.png\n    这个图片请求，则证明图片是豆瓣服务端发起的请求，则可能存在SSRF漏洞。\n* 绕过过滤\n有时漏洞利用时会遇到IP限制，可用如下方法绕过：\n* 使用@：http://A.com@10.10.10.10 = 10.10.10.10\n* IP地址转换成十进制、八进制：127.0.0.1 = 2130706433\n* 使用短地址：http://10.10.116.11 = http://t.cn/RwbLKDx\n* 端口绕过：ip后面加一个端口\n* xip.io：10.0.0.1.xip.io = 10.0.0.1\n        www.10.0.0.1.xip.io = 10.0.0.1\n        mysite.10.0.0.1.xip.io = 10.0.0.1\n        foo.bar.10.0.0.1.xip.io = 10.0.0.1\n* 通过js跳转\n* 通用的SSRF实例\n* weblogin配置不当，天生ssrf漏洞\n* discuz x2.5/x3.0/x3.1/x3.2 ssrf漏洞\n* CVE-2016-1897/8 - FFMpeg\n* CVE-2016-3718 - ImageMagick\n* 如何防御\n通常有以下5个思路：\n\n- 过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。\n- 统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。\n- 限制请求的端口为http常用的端口，比如，80,443,8080,8090。\n- 黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。\n- 禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///,gopher://,ftp:// 等引起的问题\n","source":"_posts/SSR攻击实例.md","raw":"---\ntitle: SSR相关那些事情\ndate: 2017-02-05 23:30\ntags: \n- js\ncategories:\n- 基础知识\n---\n\n*      SSRF （Server-Side Request Forgrey）：\n     服务器端请求伪造，是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，它将一个发起网络请求的服务当做跳板来攻击其他服务,SSRF的攻击目标一般是内网。当服务端提供了从其他服务器获取数据的功能（例如从指定URL获取网页文本内容、加载指定地址的图片、下载等），但是没有对目标地址做过滤与现实时就会出现SSRF。\n*     SSRF的危害：\n     很多网站提供了从其他服务器上获取数据的能力，该功能被恶意使用，可以利用存在缺陷的web应用作为代理攻击远程和本地的服务器。\n1. 可以扫描内部网络\n2. 可以构造数据攻击内部主机\n*     漏洞挖掘\n其实只要能对外发起网络请求就有可能存在SSRF漏洞。\n1. 从WEB功能上寻找\n    通过URL分享内容\n    文件处理、编码处理、转码等服务\n    在线翻译\n    通过URL地址加载与下载图片\n    图片、文章的收藏\n    设置邮件接收服务器\n2. 从URL关键字寻找\n    share、wap、url、link、src、source、target、u、3g、\n    display、sourceURl、imageURL、domain...\n* 漏洞验证\nhttp://www.douban.com/***/service?image=http://www.baidu.com/img/bd_logo1.png\n1. 右键在新窗口打开图片，若浏览器上URL地址为http://www.baidu.com/img/bd_logo1.png，\n    说明不存在SSRF漏洞。  \n2. firebug看网络连接信息，若没有http://www.baidu.com/img/bd_logo1.png\n    这个图片请求，则证明图片是豆瓣服务端发起的请求，则可能存在SSRF漏洞。\n* 绕过过滤\n有时漏洞利用时会遇到IP限制，可用如下方法绕过：\n* 使用@：http://A.com@10.10.10.10 = 10.10.10.10\n* IP地址转换成十进制、八进制：127.0.0.1 = 2130706433\n* 使用短地址：http://10.10.116.11 = http://t.cn/RwbLKDx\n* 端口绕过：ip后面加一个端口\n* xip.io：10.0.0.1.xip.io = 10.0.0.1\n        www.10.0.0.1.xip.io = 10.0.0.1\n        mysite.10.0.0.1.xip.io = 10.0.0.1\n        foo.bar.10.0.0.1.xip.io = 10.0.0.1\n* 通过js跳转\n* 通用的SSRF实例\n* weblogin配置不当，天生ssrf漏洞\n* discuz x2.5/x3.0/x3.1/x3.2 ssrf漏洞\n* CVE-2016-1897/8 - FFMpeg\n* CVE-2016-3718 - ImageMagick\n* 如何防御\n通常有以下5个思路：\n\n- 过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。\n- 统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。\n- 限制请求的端口为http常用的端口，比如，80,443,8080,8090。\n- 黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。\n- 禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///,gopher://,ftp:// 等引起的问题\n","slug":"SSR攻击实例","published":1,"updated":"2023-05-30T03:52:46.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa4190000jza56s041mmf","content":"<ul>\n<li><pre><code> SSRF （Server-Side Request Forgrey）：\n</code></pre>\n   服务器端请求伪造，是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，它将一个发起网络请求的服务当做跳板来攻击其他服务,SSRF的攻击目标一般是内网。当服务端提供了从其他服务器获取数据的功能（例如从指定URL获取网页文本内容、加载指定地址的图片、下载等），但是没有对目标地址做过滤与现实时就会出现SSRF。</li>\n<li><pre><code>SSRF的危害：\n</code></pre>\n   很多网站提供了从其他服务器上获取数据的能力，该功能被恶意使用，可以利用存在缺陷的web应用作为代理攻击远程和本地的服务器。</li>\n</ul>\n<ol>\n<li>可以扫描内部网络</li>\n<li>可以构造数据攻击内部主机</li>\n</ol>\n<ul>\n<li><pre><code>漏洞挖掘\n</code></pre>\n</li>\n</ul>\n<p>其实只要能对外发起网络请求就有可能存在SSRF漏洞。</p>\n<ol>\n<li>从WEB功能上寻找<br> 通过URL分享内容<br> 文件处理、编码处理、转码等服务<br> 在线翻译<br> 通过URL地址加载与下载图片<br> 图片、文章的收藏<br> 设置邮件接收服务器</li>\n<li>从URL关键字寻找<br> share、wap、url、link、src、source、target、u、3g、<br> display、sourceURl、imageURL、domain…</li>\n</ol>\n<ul>\n<li>漏洞验证<br><a href=\"http://www.douban.com/***/service?image=http://www.baidu.com/img/bd_logo1.png\">http://www.douban.com/***/service?image=http://www.baidu.com/img/bd_logo1.png</a></li>\n</ul>\n<ol>\n<li>右键在新窗口打开图片，若浏览器上URL地址为<a href=\"http://www.baidu.com/img/bd_logo1.png%EF%BC%8C\">http://www.baidu.com/img/bd_logo1.png，</a><br> 说明不存在SSRF漏洞。  </li>\n<li>firebug看网络连接信息，若没有<a href=\"http://www.baidu.com/img/bd_logo1.png\">http://www.baidu.com/img/bd_logo1.png</a><br> 这个图片请求，则证明图片是豆瓣服务端发起的请求，则可能存在SSRF漏洞。</li>\n</ol>\n<ul>\n<li>绕过过滤<br>有时漏洞利用时会遇到IP限制，可用如下方法绕过：</li>\n<li>使用@：<a href=\"http://A.com@10.10.10.10/\">http://A.com@10.10.10.10</a> &#x3D; 10.10.10.10</li>\n<li>IP地址转换成十进制、八进制：127.0.0.1 &#x3D; 2130706433</li>\n<li>使用短地址：<a href=\"http://10.10.116.11/\">http://10.10.116.11</a> &#x3D; <a href=\"http://t.cn/RwbLKDx\">http://t.cn/RwbLKDx</a></li>\n<li>端口绕过：ip后面加一个端口</li>\n<li>xip.io：10.0.0.1.xip.io &#x3D; 10.0.0.1<br>  <a href=\"http://www.10.0.0.1.xip.io/\">www.10.0.0.1.xip.io</a> &#x3D; 10.0.0.1<br>  mysite.10.0.0.1.xip.io &#x3D; 10.0.0.1<br>  foo.bar.10.0.0.1.xip.io &#x3D; 10.0.0.1</li>\n<li>通过js跳转</li>\n<li>通用的SSRF实例</li>\n<li>weblogin配置不当，天生ssrf漏洞</li>\n<li>discuz x2.5&#x2F;x3.0&#x2F;x3.1&#x2F;x3.2 ssrf漏洞</li>\n<li>CVE-2016-1897&#x2F;8 - FFMpeg</li>\n<li>CVE-2016-3718 - ImageMagick</li>\n<li>如何防御<br>通常有以下5个思路：</li>\n</ul>\n<ul>\n<li>过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</li>\n<li>统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</li>\n<li>限制请求的端口为http常用的端口，比如，80,443,8080,8090。</li>\n<li>黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。</li>\n<li>禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:&#x2F;&#x2F;&#x2F;,gopher:&#x2F;&#x2F;,ftp:&#x2F;&#x2F; 等引起的问题</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><pre><code> SSRF （Server-Side Request Forgrey）：\n</code></pre>\n   服务器端请求伪造，是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，它将一个发起网络请求的服务当做跳板来攻击其他服务,SSRF的攻击目标一般是内网。当服务端提供了从其他服务器获取数据的功能（例如从指定URL获取网页文本内容、加载指定地址的图片、下载等），但是没有对目标地址做过滤与现实时就会出现SSRF。</li>\n<li><pre><code>SSRF的危害：\n</code></pre>\n   很多网站提供了从其他服务器上获取数据的能力，该功能被恶意使用，可以利用存在缺陷的web应用作为代理攻击远程和本地的服务器。</li>\n</ul>\n<ol>\n<li>可以扫描内部网络</li>\n<li>可以构造数据攻击内部主机</li>\n</ol>\n<ul>\n<li><pre><code>漏洞挖掘\n</code></pre>\n</li>\n</ul>\n<p>其实只要能对外发起网络请求就有可能存在SSRF漏洞。</p>\n<ol>\n<li>从WEB功能上寻找<br> 通过URL分享内容<br> 文件处理、编码处理、转码等服务<br> 在线翻译<br> 通过URL地址加载与下载图片<br> 图片、文章的收藏<br> 设置邮件接收服务器</li>\n<li>从URL关键字寻找<br> share、wap、url、link、src、source、target、u、3g、<br> display、sourceURl、imageURL、domain…</li>\n</ol>\n<ul>\n<li>漏洞验证<br><a href=\"http://www.douban.com/***/service?image=http://www.baidu.com/img/bd_logo1.png\">http://www.douban.com/***/service?image=http://www.baidu.com/img/bd_logo1.png</a></li>\n</ul>\n<ol>\n<li>右键在新窗口打开图片，若浏览器上URL地址为<a href=\"http://www.baidu.com/img/bd_logo1.png%EF%BC%8C\">http://www.baidu.com/img/bd_logo1.png，</a><br> 说明不存在SSRF漏洞。  </li>\n<li>firebug看网络连接信息，若没有<a href=\"http://www.baidu.com/img/bd_logo1.png\">http://www.baidu.com/img/bd_logo1.png</a><br> 这个图片请求，则证明图片是豆瓣服务端发起的请求，则可能存在SSRF漏洞。</li>\n</ol>\n<ul>\n<li>绕过过滤<br>有时漏洞利用时会遇到IP限制，可用如下方法绕过：</li>\n<li>使用@：<a href=\"http://A.com@10.10.10.10/\">http://A.com@10.10.10.10</a> &#x3D; 10.10.10.10</li>\n<li>IP地址转换成十进制、八进制：127.0.0.1 &#x3D; 2130706433</li>\n<li>使用短地址：<a href=\"http://10.10.116.11/\">http://10.10.116.11</a> &#x3D; <a href=\"http://t.cn/RwbLKDx\">http://t.cn/RwbLKDx</a></li>\n<li>端口绕过：ip后面加一个端口</li>\n<li>xip.io：10.0.0.1.xip.io &#x3D; 10.0.0.1<br>  <a href=\"http://www.10.0.0.1.xip.io/\">www.10.0.0.1.xip.io</a> &#x3D; 10.0.0.1<br>  mysite.10.0.0.1.xip.io &#x3D; 10.0.0.1<br>  foo.bar.10.0.0.1.xip.io &#x3D; 10.0.0.1</li>\n<li>通过js跳转</li>\n<li>通用的SSRF实例</li>\n<li>weblogin配置不当，天生ssrf漏洞</li>\n<li>discuz x2.5&#x2F;x3.0&#x2F;x3.1&#x2F;x3.2 ssrf漏洞</li>\n<li>CVE-2016-1897&#x2F;8 - FFMpeg</li>\n<li>CVE-2016-3718 - ImageMagick</li>\n<li>如何防御<br>通常有以下5个思路：</li>\n</ul>\n<ul>\n<li>过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</li>\n<li>统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</li>\n<li>限制请求的端口为http常用的端口，比如，80,443,8080,8090。</li>\n<li>黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。</li>\n<li>禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:&#x2F;&#x2F;&#x2F;,gopher:&#x2F;&#x2F;,ftp:&#x2F;&#x2F; 等引起的问题</li>\n</ul>\n"},{"title":"专业证书考证时间顺序","date":"2023-05-05T01:30:00.000Z","_content":"\n# 各大专业证书考试相关（2023年）\n\n### 法律资格证书\n\t\n\n| 报名时间     |     题目类型 |   费用   |  考试时间\n| -------- | :--------| :------ | --------|\n| 6月   |  客观题 + 主观题 |  客观题¥192元/人<br>主观题¥105/人 | 客观题9.16-9.17<br>主观题10.15\n\n\n### 软考高项\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| :------: |\n| 每年5/11月    |   选择+案例分析+论文 | ¥210  | 2023.11.4\n\n考试安排\n\t9:00 - 11:30  综合知识\n\t13:30 - 15:00 案例分析\n\t15:30 - 17:00 论文\n\n\n### 注册会计师\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| :------: |\n|报名-2023.4.6 8:00-4.28 20:00 <br> 交费-2023.6.15日-6.30（早8：00-晚8:00） |  《会计》《审计》《税法》《经济法》《财务成本管理》《公司战略与风险管理》 | 专业 92/科 <br> 综合166/科  | 23年.8.25 - 8.27\n\n#####  2023 考试安排：\n　　\n　　8月25日08:30-11:30\t会计(第一场)\n\n　　8月25日13:00-15:00\t税法(第一场)\n\n　　8月25日17:00-19:00\t经济法(第一场)\n\n　　8月26日08:30-11:00\t审计\n\n　　8月26日08:30-11:00\t财务成本管理（第一场）\n\n　　8月26日13:00-15:30\t财务成本管理（第二场）\n\n　　8月26日17:00-19:00\t公司战略与风险管理\n\n　　8月27日08:30-11:30\t会计（第二场）\n\n　　8月27日13:00-15:00\t税法（第二场）\n\n　　8月27日17:00-19:00\t经济法（第二场）\n\n##### 　 综合阶段考试时间\n\n\n\t\t \n　　8月26日8:30-12:00\t职业能力综合测试（试卷一）\n\n　　8月26日14:00-17:30\t职业能力综合测试（试卷二）\n\n\n### PMP\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------:| :------: |\n| 每年3.5.8.11    |  单多选 |  3900<br>当年补考2500  | 暂未定\n\n证书三年有效，到期后续费150美元+学习证明\n\n\n### 浙大MEM\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| :------: |\n|  9月研招网<br>10月二次确认<br>11月现场确认  |  综合（数学+语文+逻辑）<br> 英语 |  15w/2.5年  | 全国统考 <br> 提前批次录取\n\n\n#### 教师资格证\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| ------ |\n|上半年笔试：3月11日<br>下半年笔试：9月16日    |   综合素质 + 教育知识与能力 | 100-300/科不等  | 上半年面试日期：2023年5月13日-14日<br>下半年面试日期：2023年12月9日-10日\n\n\n\n### 企业人力资源管理\n######  从四级到一级，有先后顺序依赖\n人力资源管理员 （四级）\n助理人力资源管理师 （三级）\n人力资源管理师 （二级）\n高级人力资源管理 （一级）\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------:| :------: |\n| 每年5月，11月    |   选择+简答+计算+案例分+方案设计 | 100-800  | 11月考试\n\n","source":"_posts/certify.md","raw":"---\ntitle: 专业证书考证时间顺序\ndate: 2023-05-05 9:30\ntags: \n- 证书\ncategories:\n- 进阶\n---\n\n# 各大专业证书考试相关（2023年）\n\n### 法律资格证书\n\t\n\n| 报名时间     |     题目类型 |   费用   |  考试时间\n| -------- | :--------| :------ | --------|\n| 6月   |  客观题 + 主观题 |  客观题¥192元/人<br>主观题¥105/人 | 客观题9.16-9.17<br>主观题10.15\n\n\n### 软考高项\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| :------: |\n| 每年5/11月    |   选择+案例分析+论文 | ¥210  | 2023.11.4\n\n考试安排\n\t9:00 - 11:30  综合知识\n\t13:30 - 15:00 案例分析\n\t15:30 - 17:00 论文\n\n\n### 注册会计师\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| :------: |\n|报名-2023.4.6 8:00-4.28 20:00 <br> 交费-2023.6.15日-6.30（早8：00-晚8:00） |  《会计》《审计》《税法》《经济法》《财务成本管理》《公司战略与风险管理》 | 专业 92/科 <br> 综合166/科  | 23年.8.25 - 8.27\n\n#####  2023 考试安排：\n　　\n　　8月25日08:30-11:30\t会计(第一场)\n\n　　8月25日13:00-15:00\t税法(第一场)\n\n　　8月25日17:00-19:00\t经济法(第一场)\n\n　　8月26日08:30-11:00\t审计\n\n　　8月26日08:30-11:00\t财务成本管理（第一场）\n\n　　8月26日13:00-15:30\t财务成本管理（第二场）\n\n　　8月26日17:00-19:00\t公司战略与风险管理\n\n　　8月27日08:30-11:30\t会计（第二场）\n\n　　8月27日13:00-15:00\t税法（第二场）\n\n　　8月27日17:00-19:00\t经济法（第二场）\n\n##### 　 综合阶段考试时间\n\n\n\t\t \n　　8月26日8:30-12:00\t职业能力综合测试（试卷一）\n\n　　8月26日14:00-17:30\t职业能力综合测试（试卷二）\n\n\n### PMP\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------:| :------: |\n| 每年3.5.8.11    |  单多选 |  3900<br>当年补考2500  | 暂未定\n\n证书三年有效，到期后续费150美元+学习证明\n\n\n### 浙大MEM\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| :------: |\n|  9月研招网<br>10月二次确认<br>11月现场确认  |  综合（数学+语文+逻辑）<br> 英语 |  15w/2.5年  | 全国统考 <br> 提前批次录取\n\n\n#### 教师资格证\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------| ------ |\n|上半年笔试：3月11日<br>下半年笔试：9月16日    |   综合素质 + 教育知识与能力 | 100-300/科不等  | 上半年面试日期：2023年5月13日-14日<br>下半年面试日期：2023年12月9日-10日\n\n\n\n### 企业人力资源管理\n######  从四级到一级，有先后顺序依赖\n人力资源管理员 （四级）\n助理人力资源管理师 （三级）\n人力资源管理师 （二级）\n高级人力资源管理 （一级）\n\n| 报名时间     |  题目类型    |   费用   |  考试时间\n| :-------- | --------:| :------: |\n| 每年5月，11月    |   选择+简答+计算+案例分+方案设计 | 100-800  | 11月考试\n\n","slug":"certify","published":1,"updated":"2023-05-30T04:10:37.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41d0001jza5h7rf28ra","content":"<h1 id=\"各大专业证书考试相关（2023年）\"><a href=\"#各大专业证书考试相关（2023年）\" class=\"headerlink\" title=\"各大专业证书考试相关（2023年）\"></a>各大专业证书考试相关（2023年）</h1><h3 id=\"法律资格证书\"><a href=\"#法律资格证书\" class=\"headerlink\" title=\"法律资格证书\"></a>法律资格证书</h3><table>\n<thead>\n<tr>\n<th>报名时间</th>\n<th align=\"left\">题目类型</th>\n<th align=\"left\">费用</th>\n<th>考试时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>6月</td>\n<td align=\"left\">客观题 + 主观题</td>\n<td align=\"left\">客观题¥192元&#x2F;人<br>主观题¥105&#x2F;人</td>\n<td>客观题9.16-9.17<br>主观题10.15</td>\n</tr>\n</tbody></table>\n<h3 id=\"软考高项\"><a href=\"#软考高项\" class=\"headerlink\" title=\"软考高项\"></a>软考高项</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| :——: |<br>| 每年5&#x2F;11月    |   选择+案例分析+论文 | ¥210  | 2023.11.4</p>\n<p>考试安排<br>    9:00 - 11:30  综合知识<br>    13:30 - 15:00 案例分析<br>    15:30 - 17:00 论文</p>\n<h3 id=\"注册会计师\"><a href=\"#注册会计师\" class=\"headerlink\" title=\"注册会计师\"></a>注册会计师</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| :——: |<br>|报名-2023.4.6 8:00-4.28 20:00 <br> 交费-2023.6.15日-6.30（早8：00-晚8:00） |  《会计》《审计》《税法》《经济法》《财务成本管理》《公司战略与风险管理》 | 专业 92&#x2F;科 <br> 综合166&#x2F;科  | 23年.8.25 - 8.27</p>\n<h5 id=\"2023-考试安排：\"><a href=\"#2023-考试安排：\" class=\"headerlink\" title=\"2023 考试安排：\"></a>2023 考试安排：</h5><p>　　<br>　　8月25日08:30-11:30\t会计(第一场)</p>\n<p>　　8月25日13:00-15:00\t税法(第一场)</p>\n<p>　　8月25日17:00-19:00\t经济法(第一场)</p>\n<p>　　8月26日08:30-11:00\t审计</p>\n<p>　　8月26日08:30-11:00\t财务成本管理（第一场）</p>\n<p>　　8月26日13:00-15:30\t财务成本管理（第二场）</p>\n<p>　　8月26日17:00-19:00\t公司战略与风险管理</p>\n<p>　　8月27日08:30-11:30\t会计（第二场）</p>\n<p>　　8月27日13:00-15:00\t税法（第二场）</p>\n<p>　　8月27日17:00-19:00\t经济法（第二场）</p>\n<h5 id=\"综合阶段考试时间\"><a href=\"#综合阶段考试时间\" class=\"headerlink\" title=\"综合阶段考试时间\"></a>综合阶段考试时间</h5><p>　　8月26日8:30-12:00\t职业能力综合测试（试卷一）</p>\n<p>　　8月26日14:00-17:30\t职业能力综合测试（试卷二）</p>\n<h3 id=\"PMP\"><a href=\"#PMP\" class=\"headerlink\" title=\"PMP\"></a>PMP</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–:| :——: |<br>| 每年3.5.8.11    |  单多选 |  3900<br>当年补考2500  | 暂未定</p>\n<p>证书三年有效，到期后续费150美元+学习证明</p>\n<h3 id=\"浙大MEM\"><a href=\"#浙大MEM\" class=\"headerlink\" title=\"浙大MEM\"></a>浙大MEM</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| :——: |<br>|  9月研招网<br>10月二次确认<br>11月现场确认  |  综合（数学+语文+逻辑）<br> 英语 |  15w&#x2F;2.5年  | 全国统考 <br> 提前批次录取</p>\n<h4 id=\"教师资格证\"><a href=\"#教师资格证\" class=\"headerlink\" title=\"教师资格证\"></a>教师资格证</h4><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| —— |<br>|上半年笔试：3月11日<br>下半年笔试：9月16日    |   综合素质 + 教育知识与能力 | 100-300&#x2F;科不等  | 上半年面试日期：2023年5月13日-14日<br>下半年面试日期：2023年12月9日-10日</p>\n<h3 id=\"企业人力资源管理\"><a href=\"#企业人力资源管理\" class=\"headerlink\" title=\"企业人力资源管理\"></a>企业人力资源管理</h3><h6 id=\"从四级到一级，有先后顺序依赖\"><a href=\"#从四级到一级，有先后顺序依赖\" class=\"headerlink\" title=\"从四级到一级，有先后顺序依赖\"></a>从四级到一级，有先后顺序依赖</h6><p>人力资源管理员 （四级）<br>助理人力资源管理师 （三级）<br>人力资源管理师 （二级）<br>高级人力资源管理 （一级）</p>\n<p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–:| :——: |<br>| 每年5月，11月    |   选择+简答+计算+案例分+方案设计 | 100-800  | 11月考试</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"各大专业证书考试相关（2023年）\"><a href=\"#各大专业证书考试相关（2023年）\" class=\"headerlink\" title=\"各大专业证书考试相关（2023年）\"></a>各大专业证书考试相关（2023年）</h1><h3 id=\"法律资格证书\"><a href=\"#法律资格证书\" class=\"headerlink\" title=\"法律资格证书\"></a>法律资格证书</h3><table>\n<thead>\n<tr>\n<th>报名时间</th>\n<th align=\"left\">题目类型</th>\n<th align=\"left\">费用</th>\n<th>考试时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>6月</td>\n<td align=\"left\">客观题 + 主观题</td>\n<td align=\"left\">客观题¥192元&#x2F;人<br>主观题¥105&#x2F;人</td>\n<td>客观题9.16-9.17<br>主观题10.15</td>\n</tr>\n</tbody></table>\n<h3 id=\"软考高项\"><a href=\"#软考高项\" class=\"headerlink\" title=\"软考高项\"></a>软考高项</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| :——: |<br>| 每年5&#x2F;11月    |   选择+案例分析+论文 | ¥210  | 2023.11.4</p>\n<p>考试安排<br>    9:00 - 11:30  综合知识<br>    13:30 - 15:00 案例分析<br>    15:30 - 17:00 论文</p>\n<h3 id=\"注册会计师\"><a href=\"#注册会计师\" class=\"headerlink\" title=\"注册会计师\"></a>注册会计师</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| :——: |<br>|报名-2023.4.6 8:00-4.28 20:00 <br> 交费-2023.6.15日-6.30（早8：00-晚8:00） |  《会计》《审计》《税法》《经济法》《财务成本管理》《公司战略与风险管理》 | 专业 92&#x2F;科 <br> 综合166&#x2F;科  | 23年.8.25 - 8.27</p>\n<h5 id=\"2023-考试安排：\"><a href=\"#2023-考试安排：\" class=\"headerlink\" title=\"2023 考试安排：\"></a>2023 考试安排：</h5><p>　　<br>　　8月25日08:30-11:30\t会计(第一场)</p>\n<p>　　8月25日13:00-15:00\t税法(第一场)</p>\n<p>　　8月25日17:00-19:00\t经济法(第一场)</p>\n<p>　　8月26日08:30-11:00\t审计</p>\n<p>　　8月26日08:30-11:00\t财务成本管理（第一场）</p>\n<p>　　8月26日13:00-15:30\t财务成本管理（第二场）</p>\n<p>　　8月26日17:00-19:00\t公司战略与风险管理</p>\n<p>　　8月27日08:30-11:30\t会计（第二场）</p>\n<p>　　8月27日13:00-15:00\t税法（第二场）</p>\n<p>　　8月27日17:00-19:00\t经济法（第二场）</p>\n<h5 id=\"综合阶段考试时间\"><a href=\"#综合阶段考试时间\" class=\"headerlink\" title=\"综合阶段考试时间\"></a>综合阶段考试时间</h5><p>　　8月26日8:30-12:00\t职业能力综合测试（试卷一）</p>\n<p>　　8月26日14:00-17:30\t职业能力综合测试（试卷二）</p>\n<h3 id=\"PMP\"><a href=\"#PMP\" class=\"headerlink\" title=\"PMP\"></a>PMP</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–:| :——: |<br>| 每年3.5.8.11    |  单多选 |  3900<br>当年补考2500  | 暂未定</p>\n<p>证书三年有效，到期后续费150美元+学习证明</p>\n<h3 id=\"浙大MEM\"><a href=\"#浙大MEM\" class=\"headerlink\" title=\"浙大MEM\"></a>浙大MEM</h3><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| :——: |<br>|  9月研招网<br>10月二次确认<br>11月现场确认  |  综合（数学+语文+逻辑）<br> 英语 |  15w&#x2F;2.5年  | 全国统考 <br> 提前批次录取</p>\n<h4 id=\"教师资格证\"><a href=\"#教师资格证\" class=\"headerlink\" title=\"教师资格证\"></a>教师资格证</h4><p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–| —— |<br>|上半年笔试：3月11日<br>下半年笔试：9月16日    |   综合素质 + 教育知识与能力 | 100-300&#x2F;科不等  | 上半年面试日期：2023年5月13日-14日<br>下半年面试日期：2023年12月9日-10日</p>\n<h3 id=\"企业人力资源管理\"><a href=\"#企业人力资源管理\" class=\"headerlink\" title=\"企业人力资源管理\"></a>企业人力资源管理</h3><h6 id=\"从四级到一级，有先后顺序依赖\"><a href=\"#从四级到一级，有先后顺序依赖\" class=\"headerlink\" title=\"从四级到一级，有先后顺序依赖\"></a>从四级到一级，有先后顺序依赖</h6><p>人力资源管理员 （四级）<br>助理人力资源管理师 （三级）<br>人力资源管理师 （二级）<br>高级人力资源管理 （一级）</p>\n<p>| 报名时间     |  题目类型    |   费用   |  考试时间<br>| :——– | ——–:| :——: |<br>| 每年5月，11月    |   选择+简答+计算+案例分+方案设计 | 100-800  | 11月考试</p>\n"},{"title":"阿里巴巴前端面试","date":"2016-06-21T07:30:02.000Z","_content":"\nalibaba前端面试\n\n前端面试题\n1、对json格式中的某一字段进行排序\neg：var stuJson = [{ name: \"daming\", age: 21, weight: 66, sex:\"boy\" },\n                   { name: \"lisa\", age: 19, weight: 45, sex:\"girl\" },\n                   { name: \"lili\", age: 20, weight: 50, sex:\"boy\"}];\n     //eg:按age升序\n   stuJson.sort(function(a,b){\n                    return a.age - b.age;\n  });\nconsole.log(stuJson);//[ { name: 'lisa', age: 19, weight: 45, sex: 'girl' },\n                     //{ name: 'lili', age: 20, weight: 50, sex: 'boy' },\n                     //{ name: 'daming', age: 21, weight: 66, sex: 'boy' } ]\n2、用一句语句对数组去最小或最大值\neg:var arr = [32,42,12,42,21,23,56,75,3,33,53,23,36];\n   var aMin = Math.min.apply(null,arr);\n   console.log(min);//3\n   var aMax = Math.max.apply(null,arr);//75\n   console.log(aMax);\n3、如何获取冒泡事件的根节点\n4、前端mvc，后端mvc\n5、body里面有个div，将div宽度设成100%，并设置padding为10px，问浏览器会不会有滚动条\n6、页面布局为左边一个200px宽的块，右边有个200px的块，中间的块宽度设成100%，问有哪些实现方法。\n7、在服务器端设置缓存，当访问过一次某个数据后，第二次访问的时候不查询数据库，问怎么实现\n8、事件委托","source":"_posts/alibaba.md","raw":"---\ntitle: 阿里巴巴前端面试\ndate: 2016-06-21 15:30:02\ntags: \n- 面试\ncategories:\n- 面试\n---\n\nalibaba前端面试\n\n前端面试题\n1、对json格式中的某一字段进行排序\neg：var stuJson = [{ name: \"daming\", age: 21, weight: 66, sex:\"boy\" },\n                   { name: \"lisa\", age: 19, weight: 45, sex:\"girl\" },\n                   { name: \"lili\", age: 20, weight: 50, sex:\"boy\"}];\n     //eg:按age升序\n   stuJson.sort(function(a,b){\n                    return a.age - b.age;\n  });\nconsole.log(stuJson);//[ { name: 'lisa', age: 19, weight: 45, sex: 'girl' },\n                     //{ name: 'lili', age: 20, weight: 50, sex: 'boy' },\n                     //{ name: 'daming', age: 21, weight: 66, sex: 'boy' } ]\n2、用一句语句对数组去最小或最大值\neg:var arr = [32,42,12,42,21,23,56,75,3,33,53,23,36];\n   var aMin = Math.min.apply(null,arr);\n   console.log(min);//3\n   var aMax = Math.max.apply(null,arr);//75\n   console.log(aMax);\n3、如何获取冒泡事件的根节点\n4、前端mvc，后端mvc\n5、body里面有个div，将div宽度设成100%，并设置padding为10px，问浏览器会不会有滚动条\n6、页面布局为左边一个200px宽的块，右边有个200px的块，中间的块宽度设成100%，问有哪些实现方法。\n7、在服务器端设置缓存，当访问过一次某个数据后，第二次访问的时候不查询数据库，问怎么实现\n8、事件委托","slug":"alibaba","published":1,"updated":"2023-05-30T03:52:46.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41g0004jza5218u55aa","content":"<p>alibaba前端面试</p>\n<p>前端面试题<br>1、对json格式中的某一字段进行排序<br>eg：var stuJson &#x3D; [{ name: “daming”, age: 21, weight: 66, sex:”boy” },<br>                   { name: “lisa”, age: 19, weight: 45, sex:”girl” },<br>                   { name: “lili”, age: 20, weight: 50, sex:”boy”}];<br>     &#x2F;&#x2F;eg:按age升序<br>   stuJson.sort(function(a,b){<br>                    return a.age - b.age;<br>  });<br>console.log(stuJson);&#x2F;&#x2F;[ { name: ‘lisa’, age: 19, weight: 45, sex: ‘girl’ },<br>                     &#x2F;&#x2F;{ name: ‘lili’, age: 20, weight: 50, sex: ‘boy’ },<br>                     &#x2F;&#x2F;{ name: ‘daming’, age: 21, weight: 66, sex: ‘boy’ } ]<br>2、用一句语句对数组去最小或最大值<br>eg:var arr &#x3D; [32,42,12,42,21,23,56,75,3,33,53,23,36];<br>   var aMin &#x3D; Math.min.apply(null,arr);<br>   console.log(min);&#x2F;&#x2F;3<br>   var aMax &#x3D; Math.max.apply(null,arr);&#x2F;&#x2F;75<br>   console.log(aMax);<br>3、如何获取冒泡事件的根节点<br>4、前端mvc，后端mvc<br>5、body里面有个div，将div宽度设成100%，并设置padding为10px，问浏览器会不会有滚动条<br>6、页面布局为左边一个200px宽的块，右边有个200px的块，中间的块宽度设成100%，问有哪些实现方法。<br>7、在服务器端设置缓存，当访问过一次某个数据后，第二次访问的时候不查询数据库，问怎么实现<br>8、事件委托</p>\n","site":{"data":{}},"excerpt":"","more":"<p>alibaba前端面试</p>\n<p>前端面试题<br>1、对json格式中的某一字段进行排序<br>eg：var stuJson &#x3D; [{ name: “daming”, age: 21, weight: 66, sex:”boy” },<br>                   { name: “lisa”, age: 19, weight: 45, sex:”girl” },<br>                   { name: “lili”, age: 20, weight: 50, sex:”boy”}];<br>     &#x2F;&#x2F;eg:按age升序<br>   stuJson.sort(function(a,b){<br>                    return a.age - b.age;<br>  });<br>console.log(stuJson);&#x2F;&#x2F;[ { name: ‘lisa’, age: 19, weight: 45, sex: ‘girl’ },<br>                     &#x2F;&#x2F;{ name: ‘lili’, age: 20, weight: 50, sex: ‘boy’ },<br>                     &#x2F;&#x2F;{ name: ‘daming’, age: 21, weight: 66, sex: ‘boy’ } ]<br>2、用一句语句对数组去最小或最大值<br>eg:var arr &#x3D; [32,42,12,42,21,23,56,75,3,33,53,23,36];<br>   var aMin &#x3D; Math.min.apply(null,arr);<br>   console.log(min);&#x2F;&#x2F;3<br>   var aMax &#x3D; Math.max.apply(null,arr);&#x2F;&#x2F;75<br>   console.log(aMax);<br>3、如何获取冒泡事件的根节点<br>4、前端mvc，后端mvc<br>5、body里面有个div，将div宽度设成100%，并设置padding为10px，问浏览器会不会有滚动条<br>6、页面布局为左边一个200px宽的块，右边有个200px的块，中间的块宽度设成100%，问有哪些实现方法。<br>7、在服务器端设置缓存，当访问过一次某个数据后，第二次访问的时候不查询数据库，问怎么实现<br>8、事件委托</p>\n"},{"title":"fis3学习笔记","date":"2017-02-05T15:30:00.000Z","_content":"\n一、静态资源映射表\n1. 记录文件依赖、打包、url等信息的表结构，fis2中称之为map.json，但在fis3中默认不产出，对其做了优化。当某个文件包含字符__RESOURCE_MAP__时，就会用表结构数据替换此字符，就不再固定把表结构写入某一个特定文件，方便定制。\n二、模块化开发\n1.     AMD/CMD,以及require.js、sea.js等前端模块化框架，主要给js提供模块化开发的支持，之后也增加了对css、前端模板的支持。这些框架就包含了组件依赖分析、保持加载并保持依赖顺序等功能。\n2.    fis中依赖本身在构建过程中就已经分析完成，并记录在静态资源列表中，那么对于线上运行时，模块化框架就可以省掉依赖分析这个步骤了。同事，js还需要有运行时支持，所以对于不同的前端模块化框架，在js代码中编译分析依赖增加了几种依赖函数的解析：define()   / require('')  / require.aysnc('')   /require.aysnc([ ]).\n3.    考虑到不可能一个框架运用多个模块化框架（因为全都占用相同的全局函数，互斥），所以编译支持这块分成三个插件进行支持： \n    * fis-hook-commonjs\n    * fis-hook-amd\n    * fis-hook-cmd\n    *     在fis-config.js中： fis.hook('commonjs')； \n4.  但这个插件也只是对编译工具的扩展，支持前端模块化框架中的组件与组件之间依赖的函数，以及入口函数来标记生成到静态资源映射表中，另外一个功能时针对某些前端模块化框架的特性自动添加define。但如何把资源加载到页面上，需要额外的fis构建插件或方案支持。\n5. 如纯前端项目，依赖插件fis-postpackager-loader，这是一种基于构建工具的加载组件的方法，构建出的html已经包含了其使用到的组件以及依赖资源的引用：npm install -g fis3-postpackager-loader在配置中添加fis.match（‘::packager’, { postpackager: fis.plugin('loader' , { }) }）.\n6. 为了方便、统一管理组件以及合并时便利，需要把组件统一放到某些文件夹下，并设置此目录下的资源都是组件资源。 fis.match('/widget/**.js' , { isMod : true}); \n7. 工具扩展、目录规范，前后端的前段工程项目都需要，其不同之处就在于静态资源管理这部分。\n    1. 编译工具扩展--根据笔筒前端模块化框架，扩展声明依赖能力\n    2. 静态资源管理--解析静态资源映射表加载页面用到的组件以及组件的依赖\n    3. 目录规范： 设置某个文件夹下资源标记为依赖\n三、资源映射表的模块化设计方案\n四、解决方案封装\n1.      解决一系列特定问题的工具、规范、开发、上线支持的方案，被称之为解决方案。前端一般包括： 研发规范+模块化框架+测试套件+辅助开发工具。fis3就是把这些集成到一个工具中，一个解决方案就是继承自fis3并且支持特定模块化开发、特定模板语言、研发规范的构建工具。\n2. 必要性：规范开发方便开发树立品牌\n3. 解决方案封装： \n    * >准备方案名、构建工具名字、模板语言、模块化框架选择、特定目录规范\n    * >目录规范： static--静态资源、page--页面、widget--组件，fis-config.js--配置文件\n    * >部署规范：template--所有的php模板，static--所有的静态资源\n    * >开发\n五、基于smarty的解决方案\n1.    fis3-smarty集成了fis-plus的目录规范以及处理插件，实现对smarty模板方案的工程构建工具支持。  \n2.    smarty本身就是php，同时提供了若干插件，当真正和后端分离是不需要有后盾支持就能用插件的方式解决静态资源管理这件事。\n3.    原理： 模板依赖某个组件（js。css。模板）不再直接引入，而是添加依赖，这些依赖在fis本地编译的时候会产出依赖树，我们一直都叫它静态资源映射表。\n4.   fis本身是依赖某种js组件化加载规范，\n六、基于PHP的解决方案\n1.     解决问题：安装php-cgi和java，把项目发布到apache等本地安装好的服务器目录下预览调试。支持模块化开发、组件开发、自动分析资源依赖关系、自动把js/css放在底部输出，提升页面渲染能力，收集组件中的内嵌样式或脚本。\n2.     如何做：fis静态资源管理的核心是map表，\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/fis3学习笔记.md","raw":"---\ntitle: fis3学习笔记\ndate: 2017-02-05 23:30\ntags: \n- js | 框架 | 打包工具\ncategories:\n- 基础知识\n---\n\n一、静态资源映射表\n1. 记录文件依赖、打包、url等信息的表结构，fis2中称之为map.json，但在fis3中默认不产出，对其做了优化。当某个文件包含字符__RESOURCE_MAP__时，就会用表结构数据替换此字符，就不再固定把表结构写入某一个特定文件，方便定制。\n二、模块化开发\n1.     AMD/CMD,以及require.js、sea.js等前端模块化框架，主要给js提供模块化开发的支持，之后也增加了对css、前端模板的支持。这些框架就包含了组件依赖分析、保持加载并保持依赖顺序等功能。\n2.    fis中依赖本身在构建过程中就已经分析完成，并记录在静态资源列表中，那么对于线上运行时，模块化框架就可以省掉依赖分析这个步骤了。同事，js还需要有运行时支持，所以对于不同的前端模块化框架，在js代码中编译分析依赖增加了几种依赖函数的解析：define()   / require('')  / require.aysnc('')   /require.aysnc([ ]).\n3.    考虑到不可能一个框架运用多个模块化框架（因为全都占用相同的全局函数，互斥），所以编译支持这块分成三个插件进行支持： \n    * fis-hook-commonjs\n    * fis-hook-amd\n    * fis-hook-cmd\n    *     在fis-config.js中： fis.hook('commonjs')； \n4.  但这个插件也只是对编译工具的扩展，支持前端模块化框架中的组件与组件之间依赖的函数，以及入口函数来标记生成到静态资源映射表中，另外一个功能时针对某些前端模块化框架的特性自动添加define。但如何把资源加载到页面上，需要额外的fis构建插件或方案支持。\n5. 如纯前端项目，依赖插件fis-postpackager-loader，这是一种基于构建工具的加载组件的方法，构建出的html已经包含了其使用到的组件以及依赖资源的引用：npm install -g fis3-postpackager-loader在配置中添加fis.match（‘::packager’, { postpackager: fis.plugin('loader' , { }) }）.\n6. 为了方便、统一管理组件以及合并时便利，需要把组件统一放到某些文件夹下，并设置此目录下的资源都是组件资源。 fis.match('/widget/**.js' , { isMod : true}); \n7. 工具扩展、目录规范，前后端的前段工程项目都需要，其不同之处就在于静态资源管理这部分。\n    1. 编译工具扩展--根据笔筒前端模块化框架，扩展声明依赖能力\n    2. 静态资源管理--解析静态资源映射表加载页面用到的组件以及组件的依赖\n    3. 目录规范： 设置某个文件夹下资源标记为依赖\n三、资源映射表的模块化设计方案\n四、解决方案封装\n1.      解决一系列特定问题的工具、规范、开发、上线支持的方案，被称之为解决方案。前端一般包括： 研发规范+模块化框架+测试套件+辅助开发工具。fis3就是把这些集成到一个工具中，一个解决方案就是继承自fis3并且支持特定模块化开发、特定模板语言、研发规范的构建工具。\n2. 必要性：规范开发方便开发树立品牌\n3. 解决方案封装： \n    * >准备方案名、构建工具名字、模板语言、模块化框架选择、特定目录规范\n    * >目录规范： static--静态资源、page--页面、widget--组件，fis-config.js--配置文件\n    * >部署规范：template--所有的php模板，static--所有的静态资源\n    * >开发\n五、基于smarty的解决方案\n1.    fis3-smarty集成了fis-plus的目录规范以及处理插件，实现对smarty模板方案的工程构建工具支持。  \n2.    smarty本身就是php，同时提供了若干插件，当真正和后端分离是不需要有后盾支持就能用插件的方式解决静态资源管理这件事。\n3.    原理： 模板依赖某个组件（js。css。模板）不再直接引入，而是添加依赖，这些依赖在fis本地编译的时候会产出依赖树，我们一直都叫它静态资源映射表。\n4.   fis本身是依赖某种js组件化加载规范，\n六、基于PHP的解决方案\n1.     解决问题：安装php-cgi和java，把项目发布到apache等本地安装好的服务器目录下预览调试。支持模块化开发、组件开发、自动分析资源依赖关系、自动把js/css放在底部输出，提升页面渲染能力，收集组件中的内嵌样式或脚本。\n2.     如何做：fis静态资源管理的核心是map表，\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"fis3学习笔记","published":1,"updated":"2023-05-30T03:52:46.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41h0005jza57yenau2z","content":"<p>一、静态资源映射表</p>\n<ol>\n<li>记录文件依赖、打包、url等信息的表结构，fis2中称之为map.json，但在fis3中默认不产出，对其做了优化。当某个文件包含字符__RESOURCE_MAP__时，就会用表结构数据替换此字符，就不再固定把表结构写入某一个特定文件，方便定制。<br>二、模块化开发</li>\n<li><pre><code>AMD/CMD,以及require.js、sea.js等前端模块化框架，主要给js提供模块化开发的支持，之后也增加了对css、前端模板的支持。这些框架就包含了组件依赖分析、保持加载并保持依赖顺序等功能。\n</code></pre>\n</li>\n<li>fis中依赖本身在构建过程中就已经分析完成，并记录在静态资源列表中，那么对于线上运行时，模块化框架就可以省掉依赖分析这个步骤了。同事，js还需要有运行时支持，所以对于不同的前端模块化框架，在js代码中编译分析依赖增加了几种依赖函数的解析：define()   &#x2F; require(‘’)  &#x2F; require.aysnc(‘’)   &#x2F;require.aysnc([ ]).</li>\n<li>考虑到不可能一个框架运用多个模块化框架（因为全都占用相同的全局函数，互斥），所以编译支持这块分成三个插件进行支持：</li>\n</ol>\n<pre><code>* fis-hook-commonjs\n* fis-hook-amd\n* fis-hook-cmd\n*     在fis-config.js中： fis.hook(&#39;commonjs&#39;)； \n</code></pre>\n<ol start=\"4\">\n<li>但这个插件也只是对编译工具的扩展，支持前端模块化框架中的组件与组件之间依赖的函数，以及入口函数来标记生成到静态资源映射表中，另外一个功能时针对某些前端模块化框架的特性自动添加define。但如何把资源加载到页面上，需要额外的fis构建插件或方案支持。</li>\n<li>如纯前端项目，依赖插件fis-postpackager-loader，这是一种基于构建工具的加载组件的方法，构建出的html已经包含了其使用到的组件以及依赖资源的引用：npm install -g fis3-postpackager-loader在配置中添加fis.match（‘::packager’, { postpackager: fis.plugin(‘loader’ , { }) }）.</li>\n<li>为了方便、统一管理组件以及合并时便利，需要把组件统一放到某些文件夹下，并设置此目录下的资源都是组件资源。 fis.match(‘&#x2F;widget&#x2F;**.js’ , { isMod : true}); </li>\n<li>工具扩展、目录规范，前后端的前段工程项目都需要，其不同之处就在于静态资源管理这部分。<ol>\n<li>编译工具扩展–根据笔筒前端模块化框架，扩展声明依赖能力</li>\n<li>静态资源管理–解析静态资源映射表加载页面用到的组件以及组件的依赖</li>\n<li>目录规范： 设置某个文件夹下资源标记为依赖<br>三、资源映射表的模块化设计方案<br>四、解决方案封装</li>\n</ol>\n</li>\n<li><pre><code> 解决一系列特定问题的工具、规范、开发、上线支持的方案，被称之为解决方案。前端一般包括： 研发规范+模块化框架+测试套件+辅助开发工具。fis3就是把这些集成到一个工具中，一个解决方案就是继承自fis3并且支持特定模块化开发、特定模板语言、研发规范的构建工具。\n</code></pre>\n</li>\n<li>必要性：规范开发方便开发树立品牌</li>\n<li>解决方案封装： <ul>\n<li><blockquote>\n<p>准备方案名、构建工具名字、模板语言、模块化框架选择、特定目录规范</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>目录规范： static–静态资源、page–页面、widget–组件，fis-config.js–配置文件</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>部署规范：template–所有的php模板，static–所有的静态资源</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>开发<br>五、基于smarty的解决方案</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>fis3-smarty集成了fis-plus的目录规范以及处理插件，实现对smarty模板方案的工程构建工具支持。  </li>\n<li>smarty本身就是php，同时提供了若干插件，当真正和后端分离是不需要有后盾支持就能用插件的方式解决静态资源管理这件事。</li>\n<li>原理： 模板依赖某个组件（js。css。模板）不再直接引入，而是添加依赖，这些依赖在fis本地编译的时候会产出依赖树，我们一直都叫它静态资源映射表。</li>\n<li>fis本身是依赖某种js组件化加载规范，<br>六、基于PHP的解决方案</li>\n<li><pre><code>解决问题：安装php-cgi和java，把项目发布到apache等本地安装好的服务器目录下预览调试。支持模块化开发、组件开发、自动分析资源依赖关系、自动把js/css放在底部输出，提升页面渲染能力，收集组件中的内嵌样式或脚本。\n</code></pre>\n</li>\n<li><pre><code>如何做：fis静态资源管理的核心是map表，\n</code></pre>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>一、静态资源映射表</p>\n<ol>\n<li>记录文件依赖、打包、url等信息的表结构，fis2中称之为map.json，但在fis3中默认不产出，对其做了优化。当某个文件包含字符__RESOURCE_MAP__时，就会用表结构数据替换此字符，就不再固定把表结构写入某一个特定文件，方便定制。<br>二、模块化开发</li>\n<li><pre><code>AMD/CMD,以及require.js、sea.js等前端模块化框架，主要给js提供模块化开发的支持，之后也增加了对css、前端模板的支持。这些框架就包含了组件依赖分析、保持加载并保持依赖顺序等功能。\n</code></pre>\n</li>\n<li>fis中依赖本身在构建过程中就已经分析完成，并记录在静态资源列表中，那么对于线上运行时，模块化框架就可以省掉依赖分析这个步骤了。同事，js还需要有运行时支持，所以对于不同的前端模块化框架，在js代码中编译分析依赖增加了几种依赖函数的解析：define()   &#x2F; require(‘’)  &#x2F; require.aysnc(‘’)   &#x2F;require.aysnc([ ]).</li>\n<li>考虑到不可能一个框架运用多个模块化框架（因为全都占用相同的全局函数，互斥），所以编译支持这块分成三个插件进行支持：</li>\n</ol>\n<pre><code>* fis-hook-commonjs\n* fis-hook-amd\n* fis-hook-cmd\n*     在fis-config.js中： fis.hook(&#39;commonjs&#39;)； \n</code></pre>\n<ol start=\"4\">\n<li>但这个插件也只是对编译工具的扩展，支持前端模块化框架中的组件与组件之间依赖的函数，以及入口函数来标记生成到静态资源映射表中，另外一个功能时针对某些前端模块化框架的特性自动添加define。但如何把资源加载到页面上，需要额外的fis构建插件或方案支持。</li>\n<li>如纯前端项目，依赖插件fis-postpackager-loader，这是一种基于构建工具的加载组件的方法，构建出的html已经包含了其使用到的组件以及依赖资源的引用：npm install -g fis3-postpackager-loader在配置中添加fis.match（‘::packager’, { postpackager: fis.plugin(‘loader’ , { }) }）.</li>\n<li>为了方便、统一管理组件以及合并时便利，需要把组件统一放到某些文件夹下，并设置此目录下的资源都是组件资源。 fis.match(‘&#x2F;widget&#x2F;**.js’ , { isMod : true}); </li>\n<li>工具扩展、目录规范，前后端的前段工程项目都需要，其不同之处就在于静态资源管理这部分。<ol>\n<li>编译工具扩展–根据笔筒前端模块化框架，扩展声明依赖能力</li>\n<li>静态资源管理–解析静态资源映射表加载页面用到的组件以及组件的依赖</li>\n<li>目录规范： 设置某个文件夹下资源标记为依赖<br>三、资源映射表的模块化设计方案<br>四、解决方案封装</li>\n</ol>\n</li>\n<li><pre><code> 解决一系列特定问题的工具、规范、开发、上线支持的方案，被称之为解决方案。前端一般包括： 研发规范+模块化框架+测试套件+辅助开发工具。fis3就是把这些集成到一个工具中，一个解决方案就是继承自fis3并且支持特定模块化开发、特定模板语言、研发规范的构建工具。\n</code></pre>\n</li>\n<li>必要性：规范开发方便开发树立品牌</li>\n<li>解决方案封装： <ul>\n<li><blockquote>\n<p>准备方案名、构建工具名字、模板语言、模块化框架选择、特定目录规范</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>目录规范： static–静态资源、page–页面、widget–组件，fis-config.js–配置文件</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>部署规范：template–所有的php模板，static–所有的静态资源</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>开发<br>五、基于smarty的解决方案</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>fis3-smarty集成了fis-plus的目录规范以及处理插件，实现对smarty模板方案的工程构建工具支持。  </li>\n<li>smarty本身就是php，同时提供了若干插件，当真正和后端分离是不需要有后盾支持就能用插件的方式解决静态资源管理这件事。</li>\n<li>原理： 模板依赖某个组件（js。css。模板）不再直接引入，而是添加依赖，这些依赖在fis本地编译的时候会产出依赖树，我们一直都叫它静态资源映射表。</li>\n<li>fis本身是依赖某种js组件化加载规范，<br>六、基于PHP的解决方案</li>\n<li><pre><code>解决问题：安装php-cgi和java，把项目发布到apache等本地安装好的服务器目录下预览调试。支持模块化开发、组件开发、自动分析资源依赖关系、自动把js/css放在底部输出，提升页面渲染能力，收集组件中的内嵌样式或脚本。\n</code></pre>\n</li>\n<li><pre><code>如何做：fis静态资源管理的核心是map表，\n</code></pre>\n</li>\n</ol>\n"},{"title":"使用hexo搭建个人博客","date":"2017-01-26T08:20:08.000Z","_content":"\n### 使用hexo搭建github pages\n前言：\n@(个人博客)[github-pages|hexo|博客]\n以前使用印象笔记或者博客园来写一些学习笔记，一直都没能上传到自己的个人仓库里，现在开始慢慢将原来所做所学内容放在个人github博客中，温故而知新。\n\n#### github pages的注册\n一. 首先，你得有一个github的账号，这个注册过程就不详细描述了，有账号，然后建立与自己账号名相同的仓库名： yourname/yourname.github.io。\n\n##### 本地安装环境\n二. 本地安装环境（以windows为例）：\n\n1. git安装： 去官网下载git工具，基本上一路next，也可根据自己需要是否安装其他以及快捷方式等等选择，git常用操作git add * --> git commit -m '提交备注’； \n2. node环境： 去[node官网](https://nodejs.org/en/) 下载node，安装node环境。\n    > ![node官网目前显示版本](../images/node.png) 最好使用稳定版本6.x，最新的不一定稳定哈，注意检查环境变量(一般情况下node安装过程中会自动将安装路径添加到环境变量中)，若因不知名原因无，在环境变量的path的值中手动加入node的安装目录。\n3. npm、cnpm： 现在的node包下载之后，已经集成了npm，所以无需再做别的操作，因npm链接国外不稳定，可以设置淘宝镜像cnpm： `$ npm install -g cnpm --registry=https://registry.npm.taobao.org ` \n----详细信息可自行查询[官网链接](https://npm.taobao.org/)。\n4. 使用npm install -g hexo全局安装hexo 或者 npm install hexo --save。\n目前我个人安装环境版本如图：版本\n\n#### SSH的生成\n三. 注意github使用过程中，别忘记生成ssh！\n\n$ git config --global user.name \"jellyhui\"\n$ git config --global user.email xx@example.com\n$ssh-keygen -t rsa -C 'xxx@example.com'\n输入命令回车之后会提示你输入一些东西，不用管。一直回车到底就好了。然后你的c盘下的user中找到 ~/.ssh 文件下就会生成两个文件 id_rsa 和 id_rsa.pub 。然后点击个人头像去个人信息的settings中找到 SSH and GPG keys， title主要是为了方便自己识别是哪台PC，在SSH一栏，复制id_rsa.pub内的内容即可。\n\n#### deploy到repo\n四. 当环境均安装就绪后，就可以尽情使用hexo啦！\n主要过程分为三步：\n1> . 创建github的repository； new repository -不详细说，注意repository的名字必须与用户名一样即可。\n2>. 使用hexo生成pages\n\n    1. hexo init  <文件夹名> : hexo生成文件夹并初始化；\n    2. cd <文件夹> 并且  npm install： 安装所需环境配置；新建完成后，文件夹下的目录如下：\n            .\n            ├── _config.yml---网站的配置文件，可以在其中配置网站的大部分参数\n            ├── package.json ---应用程序的信息\n            ├── scaffolds ---资源文件夹，是用来存放用户资源的地方\n            ├── source ---资源文件夹，是用来存放用户资源的地方\n            |   ├── _drafts\n            |   └── _posts\n            └── themes ---主题文件夹，Hexo会根据主题来生成不同的静态页面\n\n    3. 生成之后，主要配置_config.yml文件，常见配置等说明后续再进一步说明。目前最需要的是 \n        title是博客标题，author为作者名\n     `deploy:\n      type: git \n      repo: git@github.com/yourname:yourname.github.io.git或者https://github.com/yourname/yourname.github.io.git\n      branch: master`\n    4.   在source文件夹下，有_posts文件夹，存放用户自己的md文件，也就是需要上传的文件，需要注意的是，自己的md文件中开头需要用\n\n```\n        ---\n            title: md文件的名字\n            date: 书写时间\n            tags: [mysql,php,redis]---标签的名字s\n            categories: [mysql] ---分类的名字\n        ---\n\n```来表明这篇文章应该所属的分类以及标签【注意：距离最左边不能有空格】。\n5.  >  hexo g ---生成静态页面，生成的内容在public文件夹下\n    >  hexo s ---启动本地服务localhos://127.0.0.1:4000，进行文章预览调试；\n    >  hexo s --debug 命令可以用来调试\n    >  hexo d 推送代码到自己在config.yml中配置的repo上。\n3>. 推送代码：\n\n1. hexo deploy ：推送对象是在_config.yml中配置的repo对象（一般是SSH对象）；\n2. 推送时若提示git not found之类的错误，注意检查是否安装插件： $`npm install hexo-deployer-git --save`；\n3. 打开 yourname.github.io就可以看到在效果啦~~\n4. 后续推送代码时，记得先clone仓库到本地，然后再编辑更新哟~~","source":"_posts/hexo搭建.md","raw":"---\ntitle: 使用hexo搭建个人博客\ndate: 2017-01-26 16:20:08\ntags: \n- js\ncategories:\n- 基础知识\n---\n\n### 使用hexo搭建github pages\n前言：\n@(个人博客)[github-pages|hexo|博客]\n以前使用印象笔记或者博客园来写一些学习笔记，一直都没能上传到自己的个人仓库里，现在开始慢慢将原来所做所学内容放在个人github博客中，温故而知新。\n\n#### github pages的注册\n一. 首先，你得有一个github的账号，这个注册过程就不详细描述了，有账号，然后建立与自己账号名相同的仓库名： yourname/yourname.github.io。\n\n##### 本地安装环境\n二. 本地安装环境（以windows为例）：\n\n1. git安装： 去官网下载git工具，基本上一路next，也可根据自己需要是否安装其他以及快捷方式等等选择，git常用操作git add * --> git commit -m '提交备注’； \n2. node环境： 去[node官网](https://nodejs.org/en/) 下载node，安装node环境。\n    > ![node官网目前显示版本](../images/node.png) 最好使用稳定版本6.x，最新的不一定稳定哈，注意检查环境变量(一般情况下node安装过程中会自动将安装路径添加到环境变量中)，若因不知名原因无，在环境变量的path的值中手动加入node的安装目录。\n3. npm、cnpm： 现在的node包下载之后，已经集成了npm，所以无需再做别的操作，因npm链接国外不稳定，可以设置淘宝镜像cnpm： `$ npm install -g cnpm --registry=https://registry.npm.taobao.org ` \n----详细信息可自行查询[官网链接](https://npm.taobao.org/)。\n4. 使用npm install -g hexo全局安装hexo 或者 npm install hexo --save。\n目前我个人安装环境版本如图：版本\n\n#### SSH的生成\n三. 注意github使用过程中，别忘记生成ssh！\n\n$ git config --global user.name \"jellyhui\"\n$ git config --global user.email xx@example.com\n$ssh-keygen -t rsa -C 'xxx@example.com'\n输入命令回车之后会提示你输入一些东西，不用管。一直回车到底就好了。然后你的c盘下的user中找到 ~/.ssh 文件下就会生成两个文件 id_rsa 和 id_rsa.pub 。然后点击个人头像去个人信息的settings中找到 SSH and GPG keys， title主要是为了方便自己识别是哪台PC，在SSH一栏，复制id_rsa.pub内的内容即可。\n\n#### deploy到repo\n四. 当环境均安装就绪后，就可以尽情使用hexo啦！\n主要过程分为三步：\n1> . 创建github的repository； new repository -不详细说，注意repository的名字必须与用户名一样即可。\n2>. 使用hexo生成pages\n\n    1. hexo init  <文件夹名> : hexo生成文件夹并初始化；\n    2. cd <文件夹> 并且  npm install： 安装所需环境配置；新建完成后，文件夹下的目录如下：\n            .\n            ├── _config.yml---网站的配置文件，可以在其中配置网站的大部分参数\n            ├── package.json ---应用程序的信息\n            ├── scaffolds ---资源文件夹，是用来存放用户资源的地方\n            ├── source ---资源文件夹，是用来存放用户资源的地方\n            |   ├── _drafts\n            |   └── _posts\n            └── themes ---主题文件夹，Hexo会根据主题来生成不同的静态页面\n\n    3. 生成之后，主要配置_config.yml文件，常见配置等说明后续再进一步说明。目前最需要的是 \n        title是博客标题，author为作者名\n     `deploy:\n      type: git \n      repo: git@github.com/yourname:yourname.github.io.git或者https://github.com/yourname/yourname.github.io.git\n      branch: master`\n    4.   在source文件夹下，有_posts文件夹，存放用户自己的md文件，也就是需要上传的文件，需要注意的是，自己的md文件中开头需要用\n\n```\n        ---\n            title: md文件的名字\n            date: 书写时间\n            tags: [mysql,php,redis]---标签的名字s\n            categories: [mysql] ---分类的名字\n        ---\n\n```来表明这篇文章应该所属的分类以及标签【注意：距离最左边不能有空格】。\n5.  >  hexo g ---生成静态页面，生成的内容在public文件夹下\n    >  hexo s ---启动本地服务localhos://127.0.0.1:4000，进行文章预览调试；\n    >  hexo s --debug 命令可以用来调试\n    >  hexo d 推送代码到自己在config.yml中配置的repo上。\n3>. 推送代码：\n\n1. hexo deploy ：推送对象是在_config.yml中配置的repo对象（一般是SSH对象）；\n2. 推送时若提示git not found之类的错误，注意检查是否安装插件： $`npm install hexo-deployer-git --save`；\n3. 打开 yourname.github.io就可以看到在效果啦~~\n4. 后续推送代码时，记得先clone仓库到本地，然后再编辑更新哟~~","slug":"hexo搭建","published":1,"updated":"2023-05-30T03:52:46.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41h0006jza54avt71dx","content":"<h3 id=\"使用hexo搭建github-pages\"><a href=\"#使用hexo搭建github-pages\" class=\"headerlink\" title=\"使用hexo搭建github pages\"></a>使用hexo搭建github pages</h3><p>前言：<br>@(个人博客)[github-pages|hexo|博客]<br>以前使用印象笔记或者博客园来写一些学习笔记，一直都没能上传到自己的个人仓库里，现在开始慢慢将原来所做所学内容放在个人github博客中，温故而知新。</p>\n<h4 id=\"github-pages的注册\"><a href=\"#github-pages的注册\" class=\"headerlink\" title=\"github pages的注册\"></a>github pages的注册</h4><p>一. 首先，你得有一个github的账号，这个注册过程就不详细描述了，有账号，然后建立与自己账号名相同的仓库名： yourname&#x2F;yourname.github.io。</p>\n<h5 id=\"本地安装环境\"><a href=\"#本地安装环境\" class=\"headerlink\" title=\"本地安装环境\"></a>本地安装环境</h5><p>二. 本地安装环境（以windows为例）：</p>\n<ol>\n<li>git安装： 去官网下载git工具，基本上一路next，也可根据自己需要是否安装其他以及快捷方式等等选择，git常用操作git add * –&gt; git commit -m ‘提交备注’； </li>\n<li>node环境： 去<a href=\"https://nodejs.org/en/\">node官网</a> 下载node，安装node环境。<blockquote>\n<p><img src=\"/../images/node.png\" alt=\"node官网目前显示版本\"> 最好使用稳定版本6.x，最新的不一定稳定哈，注意检查环境变量(一般情况下node安装过程中会自动将安装路径添加到环境变量中)，若因不知名原因无，在环境变量的path的值中手动加入node的安装目录。</p>\n</blockquote>\n</li>\n<li>npm、cnpm： 现在的node包下载之后，已经集成了npm，所以无需再做别的操作，因npm链接国外不稳定，可以设置淘宝镜像cnpm： <code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org </code><br>—-详细信息可自行查询<a href=\"https://npm.taobao.org/\">官网链接</a>。</li>\n<li>使用npm install -g hexo全局安装hexo 或者 npm install hexo –save。<br>目前我个人安装环境版本如图：版本</li>\n</ol>\n<h4 id=\"SSH的生成\"><a href=\"#SSH的生成\" class=\"headerlink\" title=\"SSH的生成\"></a>SSH的生成</h4><p>三. 注意github使用过程中，别忘记生成ssh！</p>\n<p>$ git config –global user.name “jellyhui”<br>$ git config –global user.email <a href=\"mailto:&#120;&#120;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;\">&#120;&#120;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a><br>$ssh-keygen -t rsa -C ‘<a href=\"mailto:&#x78;&#120;&#120;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;\">&#x78;&#120;&#120;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;</a>‘<br>输入命令回车之后会提示你输入一些东西，不用管。一直回车到底就好了。然后你的c盘下的user中找到 ~&#x2F;.ssh 文件下就会生成两个文件 id_rsa 和 id_rsa.pub 。然后点击个人头像去个人信息的settings中找到 SSH and GPG keys， title主要是为了方便自己识别是哪台PC，在SSH一栏，复制id_rsa.pub内的内容即可。</p>\n<h4 id=\"deploy到repo\"><a href=\"#deploy到repo\" class=\"headerlink\" title=\"deploy到repo\"></a>deploy到repo</h4><p>四. 当环境均安装就绪后，就可以尽情使用hexo啦！<br>主要过程分为三步：<br>1&gt; . 创建github的repository； new repository -不详细说，注意repository的名字必须与用户名一样即可。<br>2&gt;. 使用hexo生成pages</p>\n<pre><code>1. hexo init  &lt;文件夹名&gt; : hexo生成文件夹并初始化；\n2. cd &lt;文件夹&gt; 并且  npm install： 安装所需环境配置；新建完成后，文件夹下的目录如下：\n        .\n        ├── _config.yml---网站的配置文件，可以在其中配置网站的大部分参数\n        ├── package.json ---应用程序的信息\n        ├── scaffolds ---资源文件夹，是用来存放用户资源的地方\n        ├── source ---资源文件夹，是用来存放用户资源的地方\n        |   ├── _drafts\n        |   └── _posts\n        └── themes ---主题文件夹，Hexo会根据主题来生成不同的静态页面\n\n3. 生成之后，主要配置_config.yml文件，常见配置等说明后续再进一步说明。目前最需要的是 \n    title是博客标题，author为作者名\n `deploy:\n  type: git \n  repo: git@github.com/yourname:yourname.github.io.git或者https://github.com/yourname/yourname.github.io.git\n  branch: master`\n4.   在source文件夹下，有_posts文件夹，存放用户自己的md文件，也就是需要上传的文件，需要注意的是，自己的md文件中开头需要用\n</code></pre>\n<pre><code>        ---\n            title: md文件的名字\n            date: 书写时间\n            tags: [mysql,php,redis]---标签的名字s\n            categories: [mysql] ---分类的名字\n        ---\n\n```来表明这篇文章应该所属的分类以及标签【注意：距离最左边不能有空格】。\n5.  &gt;  hexo g ---生成静态页面，生成的内容在public文件夹下\n    &gt;  hexo s ---启动本地服务localhos://127.0.0.1:4000，进行文章预览调试；\n    &gt;  hexo s --debug 命令可以用来调试\n    &gt;  hexo d 推送代码到自己在config.yml中配置的repo上。\n3&gt;. 推送代码：\n\n1. hexo deploy ：推送对象是在_config.yml中配置的repo对象（一般是SSH对象）；\n2. 推送时若提示git not found之类的错误，注意检查是否安装插件： $`npm install hexo-deployer-git --save`；\n3. 打开 yourname.github.io就可以看到在效果啦~~\n4. 后续推送代码时，记得先clone仓库到本地，然后再编辑更新哟~~\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"使用hexo搭建github-pages\"><a href=\"#使用hexo搭建github-pages\" class=\"headerlink\" title=\"使用hexo搭建github pages\"></a>使用hexo搭建github pages</h3><p>前言：<br>@(个人博客)[github-pages|hexo|博客]<br>以前使用印象笔记或者博客园来写一些学习笔记，一直都没能上传到自己的个人仓库里，现在开始慢慢将原来所做所学内容放在个人github博客中，温故而知新。</p>\n<h4 id=\"github-pages的注册\"><a href=\"#github-pages的注册\" class=\"headerlink\" title=\"github pages的注册\"></a>github pages的注册</h4><p>一. 首先，你得有一个github的账号，这个注册过程就不详细描述了，有账号，然后建立与自己账号名相同的仓库名： yourname&#x2F;yourname.github.io。</p>\n<h5 id=\"本地安装环境\"><a href=\"#本地安装环境\" class=\"headerlink\" title=\"本地安装环境\"></a>本地安装环境</h5><p>二. 本地安装环境（以windows为例）：</p>\n<ol>\n<li>git安装： 去官网下载git工具，基本上一路next，也可根据自己需要是否安装其他以及快捷方式等等选择，git常用操作git add * –&gt; git commit -m ‘提交备注’； </li>\n<li>node环境： 去<a href=\"https://nodejs.org/en/\">node官网</a> 下载node，安装node环境。<blockquote>\n<p><img src=\"/../images/node.png\" alt=\"node官网目前显示版本\"> 最好使用稳定版本6.x，最新的不一定稳定哈，注意检查环境变量(一般情况下node安装过程中会自动将安装路径添加到环境变量中)，若因不知名原因无，在环境变量的path的值中手动加入node的安装目录。</p>\n</blockquote>\n</li>\n<li>npm、cnpm： 现在的node包下载之后，已经集成了npm，所以无需再做别的操作，因npm链接国外不稳定，可以设置淘宝镜像cnpm： <code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org </code><br>—-详细信息可自行查询<a href=\"https://npm.taobao.org/\">官网链接</a>。</li>\n<li>使用npm install -g hexo全局安装hexo 或者 npm install hexo –save。<br>目前我个人安装环境版本如图：版本</li>\n</ol>\n<h4 id=\"SSH的生成\"><a href=\"#SSH的生成\" class=\"headerlink\" title=\"SSH的生成\"></a>SSH的生成</h4><p>三. 注意github使用过程中，别忘记生成ssh！</p>\n<p>$ git config –global user.name “jellyhui”<br>$ git config –global user.email <a href=\"mailto:&#120;&#120;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;\">&#120;&#120;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a><br>$ssh-keygen -t rsa -C ‘<a href=\"mailto:&#x78;&#120;&#120;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;\">&#x78;&#120;&#120;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;</a>‘<br>输入命令回车之后会提示你输入一些东西，不用管。一直回车到底就好了。然后你的c盘下的user中找到 ~&#x2F;.ssh 文件下就会生成两个文件 id_rsa 和 id_rsa.pub 。然后点击个人头像去个人信息的settings中找到 SSH and GPG keys， title主要是为了方便自己识别是哪台PC，在SSH一栏，复制id_rsa.pub内的内容即可。</p>\n<h4 id=\"deploy到repo\"><a href=\"#deploy到repo\" class=\"headerlink\" title=\"deploy到repo\"></a>deploy到repo</h4><p>四. 当环境均安装就绪后，就可以尽情使用hexo啦！<br>主要过程分为三步：<br>1&gt; . 创建github的repository； new repository -不详细说，注意repository的名字必须与用户名一样即可。<br>2&gt;. 使用hexo生成pages</p>\n<pre><code>1. hexo init  &lt;文件夹名&gt; : hexo生成文件夹并初始化；\n2. cd &lt;文件夹&gt; 并且  npm install： 安装所需环境配置；新建完成后，文件夹下的目录如下：\n        .\n        ├── _config.yml---网站的配置文件，可以在其中配置网站的大部分参数\n        ├── package.json ---应用程序的信息\n        ├── scaffolds ---资源文件夹，是用来存放用户资源的地方\n        ├── source ---资源文件夹，是用来存放用户资源的地方\n        |   ├── _drafts\n        |   └── _posts\n        └── themes ---主题文件夹，Hexo会根据主题来生成不同的静态页面\n\n3. 生成之后，主要配置_config.yml文件，常见配置等说明后续再进一步说明。目前最需要的是 \n    title是博客标题，author为作者名\n `deploy:\n  type: git \n  repo: git@github.com/yourname:yourname.github.io.git或者https://github.com/yourname/yourname.github.io.git\n  branch: master`\n4.   在source文件夹下，有_posts文件夹，存放用户自己的md文件，也就是需要上传的文件，需要注意的是，自己的md文件中开头需要用\n</code></pre>\n<pre><code>        ---\n            title: md文件的名字\n            date: 书写时间\n            tags: [mysql,php,redis]---标签的名字s\n            categories: [mysql] ---分类的名字\n        ---\n\n```来表明这篇文章应该所属的分类以及标签【注意：距离最左边不能有空格】。\n5.  &gt;  hexo g ---生成静态页面，生成的内容在public文件夹下\n    &gt;  hexo s ---启动本地服务localhos://127.0.0.1:4000，进行文章预览调试；\n    &gt;  hexo s --debug 命令可以用来调试\n    &gt;  hexo d 推送代码到自己在config.yml中配置的repo上。\n3&gt;. 推送代码：\n\n1. hexo deploy ：推送对象是在_config.yml中配置的repo对象（一般是SSH对象）；\n2. 推送时若提示git not found之类的错误，注意检查是否安装插件： $`npm install hexo-deployer-git --save`；\n3. 打开 yourname.github.io就可以看到在效果啦~~\n4. 后续推送代码时，记得先clone仓库到本地，然后再编辑更新哟~~\n</code></pre>\n"},{"title":"highcharts 一些小点","date":"2018-04-11T11:30:28.000Z","_content":"\n\n1. 关于highcharts： 由纯JavaScript编写的Html5图表库，全部源码开放，个人以及非商业用途可以任意使用及源代码编辑。\n2. highcharts系列软件包含highchairs JS/ highstock JS/ highmaps JS 共三款软件。\n    1. highcharts是纯JavaScript编写的图表库；\n    2. highstock是纯JavaScript编写的股票图标控件，可以开发股票走势或大数据量的时间轴突变，包含多个高级导航组件： 预设置数据时间范围，日期选择器，滚动条，平移，缩放功能。\n    3. highmaps是基于HTML5的优秀地图组件。继承了highcharts简单易用的特性，利用它可以方便快捷的创建用于展现销售/选举结果等其他与地理位置关系密切的交互性地图图表。\n3. 可以在js文件中引入官方提供的cdn服务，也可以从官方下载资源包引入使用，也可以与vue等结合使用，npm安装，在main.js文件中import或者require后，直接使用。具体vue使用操作步骤： \n    1. npm install highcharts -（参数自己看情况选择，-g全局，—save上线后依赖，--save-dev仅在开发时依赖）；\n    2. 在需要的文件中import Highcharts from ‘highcharts’引入， 就可以在mounted时 使用 Highcharts.chart（图表唯一的id名， 图表的option）；\n    3. option可以在上述文件中写入，也可以创建option组件，专门export 需要编辑的option之类。然后在父组件中引用调用。\n4. 注意： highstock是完全包含了highcharts的，所以没必要完全将两个文件都引入；highmaps 可以单独使用也可以通过地图模块来引用，如果只需要 highmaps 功能，那么只需要引入 highmaps.js 即可。\n5. 图表组成：标题 title， 坐标轴axis， 数据列series， 数据提示框tooltip，图例legend， 版权标签credits等。另外还可以包含导出功能按钮exporting， 标识线 plotLines， 标示区域 plotBands，数据标签 dataLabels。\n    1. highcharts实例化中绑定容器的方式有很多种方式： \n        1. 通过构造函数： Highcharts.chart（‘id名字’， { 配置 }）；\n        2. 通过chart.renderTo来指定： Highcharts.chart（  { chart : {  renderTo： ‘id名 ’} }  ）；\n        3. 如果页面已经引入了jquery，还可以用jquery插件的形式调用 $(‘id 名’).highcharts( {  配置} )；\n    2. 设置容器的min- width可以让highcharts自适应宽度\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/highcharts.md","raw":"---\ntitle: highcharts 一些小点\ndate: 2018-04-11 19:30:28\ntags: \n- vue\ncategories:\n- vue\n---\n\n\n1. 关于highcharts： 由纯JavaScript编写的Html5图表库，全部源码开放，个人以及非商业用途可以任意使用及源代码编辑。\n2. highcharts系列软件包含highchairs JS/ highstock JS/ highmaps JS 共三款软件。\n    1. highcharts是纯JavaScript编写的图表库；\n    2. highstock是纯JavaScript编写的股票图标控件，可以开发股票走势或大数据量的时间轴突变，包含多个高级导航组件： 预设置数据时间范围，日期选择器，滚动条，平移，缩放功能。\n    3. highmaps是基于HTML5的优秀地图组件。继承了highcharts简单易用的特性，利用它可以方便快捷的创建用于展现销售/选举结果等其他与地理位置关系密切的交互性地图图表。\n3. 可以在js文件中引入官方提供的cdn服务，也可以从官方下载资源包引入使用，也可以与vue等结合使用，npm安装，在main.js文件中import或者require后，直接使用。具体vue使用操作步骤： \n    1. npm install highcharts -（参数自己看情况选择，-g全局，—save上线后依赖，--save-dev仅在开发时依赖）；\n    2. 在需要的文件中import Highcharts from ‘highcharts’引入， 就可以在mounted时 使用 Highcharts.chart（图表唯一的id名， 图表的option）；\n    3. option可以在上述文件中写入，也可以创建option组件，专门export 需要编辑的option之类。然后在父组件中引用调用。\n4. 注意： highstock是完全包含了highcharts的，所以没必要完全将两个文件都引入；highmaps 可以单独使用也可以通过地图模块来引用，如果只需要 highmaps 功能，那么只需要引入 highmaps.js 即可。\n5. 图表组成：标题 title， 坐标轴axis， 数据列series， 数据提示框tooltip，图例legend， 版权标签credits等。另外还可以包含导出功能按钮exporting， 标识线 plotLines， 标示区域 plotBands，数据标签 dataLabels。\n    1. highcharts实例化中绑定容器的方式有很多种方式： \n        1. 通过构造函数： Highcharts.chart（‘id名字’， { 配置 }）；\n        2. 通过chart.renderTo来指定： Highcharts.chart（  { chart : {  renderTo： ‘id名 ’} }  ）；\n        3. 如果页面已经引入了jquery，还可以用jquery插件的形式调用 $(‘id 名’).highcharts( {  配置} )；\n    2. 设置容器的min- width可以让highcharts自适应宽度\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"highcharts","published":1,"updated":"2023-05-30T03:52:46.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41j000ajza5gkw58v3r","content":"<ol>\n<li>关于highcharts： 由纯JavaScript编写的Html5图表库，全部源码开放，个人以及非商业用途可以任意使用及源代码编辑。</li>\n<li>highcharts系列软件包含highchairs JS&#x2F; highstock JS&#x2F; highmaps JS 共三款软件。<ol>\n<li>highcharts是纯JavaScript编写的图表库；</li>\n<li>highstock是纯JavaScript编写的股票图标控件，可以开发股票走势或大数据量的时间轴突变，包含多个高级导航组件： 预设置数据时间范围，日期选择器，滚动条，平移，缩放功能。</li>\n<li>highmaps是基于HTML5的优秀地图组件。继承了highcharts简单易用的特性，利用它可以方便快捷的创建用于展现销售&#x2F;选举结果等其他与地理位置关系密切的交互性地图图表。</li>\n</ol>\n</li>\n<li>可以在js文件中引入官方提供的cdn服务，也可以从官方下载资源包引入使用，也可以与vue等结合使用，npm安装，在main.js文件中import或者require后，直接使用。具体vue使用操作步骤： <ol>\n<li>npm install highcharts -（参数自己看情况选择，-g全局，—save上线后依赖，–save-dev仅在开发时依赖）；</li>\n<li>在需要的文件中import Highcharts from ‘highcharts’引入， 就可以在mounted时 使用 Highcharts.chart（图表唯一的id名， 图表的option）；</li>\n<li>option可以在上述文件中写入，也可以创建option组件，专门export 需要编辑的option之类。然后在父组件中引用调用。</li>\n</ol>\n</li>\n<li>注意： highstock是完全包含了highcharts的，所以没必要完全将两个文件都引入；highmaps 可以单独使用也可以通过地图模块来引用，如果只需要 highmaps 功能，那么只需要引入 highmaps.js 即可。</li>\n<li>图表组成：标题 title， 坐标轴axis， 数据列series， 数据提示框tooltip，图例legend， 版权标签credits等。另外还可以包含导出功能按钮exporting， 标识线 plotLines， 标示区域 plotBands，数据标签 dataLabels。<ol>\n<li>highcharts实例化中绑定容器的方式有很多种方式： <ol>\n<li>通过构造函数： Highcharts.chart（‘id名字’， { 配置 }）；</li>\n<li>通过chart.renderTo来指定： Highcharts.chart（  { chart : {  renderTo： ‘id名 ’} }  ）；</li>\n<li>如果页面已经引入了jquery，还可以用jquery插件的形式调用 $(‘id 名’).highcharts( {  配置} )；</li>\n</ol>\n</li>\n<li>设置容器的min- width可以让highcharts自适应宽度</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>关于highcharts： 由纯JavaScript编写的Html5图表库，全部源码开放，个人以及非商业用途可以任意使用及源代码编辑。</li>\n<li>highcharts系列软件包含highchairs JS&#x2F; highstock JS&#x2F; highmaps JS 共三款软件。<ol>\n<li>highcharts是纯JavaScript编写的图表库；</li>\n<li>highstock是纯JavaScript编写的股票图标控件，可以开发股票走势或大数据量的时间轴突变，包含多个高级导航组件： 预设置数据时间范围，日期选择器，滚动条，平移，缩放功能。</li>\n<li>highmaps是基于HTML5的优秀地图组件。继承了highcharts简单易用的特性，利用它可以方便快捷的创建用于展现销售&#x2F;选举结果等其他与地理位置关系密切的交互性地图图表。</li>\n</ol>\n</li>\n<li>可以在js文件中引入官方提供的cdn服务，也可以从官方下载资源包引入使用，也可以与vue等结合使用，npm安装，在main.js文件中import或者require后，直接使用。具体vue使用操作步骤： <ol>\n<li>npm install highcharts -（参数自己看情况选择，-g全局，—save上线后依赖，–save-dev仅在开发时依赖）；</li>\n<li>在需要的文件中import Highcharts from ‘highcharts’引入， 就可以在mounted时 使用 Highcharts.chart（图表唯一的id名， 图表的option）；</li>\n<li>option可以在上述文件中写入，也可以创建option组件，专门export 需要编辑的option之类。然后在父组件中引用调用。</li>\n</ol>\n</li>\n<li>注意： highstock是完全包含了highcharts的，所以没必要完全将两个文件都引入；highmaps 可以单独使用也可以通过地图模块来引用，如果只需要 highmaps 功能，那么只需要引入 highmaps.js 即可。</li>\n<li>图表组成：标题 title， 坐标轴axis， 数据列series， 数据提示框tooltip，图例legend， 版权标签credits等。另外还可以包含导出功能按钮exporting， 标识线 plotLines， 标示区域 plotBands，数据标签 dataLabels。<ol>\n<li>highcharts实例化中绑定容器的方式有很多种方式： <ol>\n<li>通过构造函数： Highcharts.chart（‘id名字’， { 配置 }）；</li>\n<li>通过chart.renderTo来指定： Highcharts.chart（  { chart : {  renderTo： ‘id名 ’} }  ）；</li>\n<li>如果页面已经引入了jquery，还可以用jquery插件的形式调用 $(‘id 名’).highcharts( {  配置} )；</li>\n</ol>\n</li>\n<li>设置容器的min- width可以让highcharts自适应宽度</li>\n</ol>\n</li>\n</ol>\n"},{"title":"js面试题","date":"2017-02-26T05:28:29.000Z","_content":"\njavascript\n#### 例子1\n```\nvar scope=”global”,c=5;\nfunction t(){\nconsole.log(scope);\nconsole.log(c);\nvar scope=”local”\nconsole.log(scope);\n}\nt();\n```\n\n结果：\nundefined\n5\nlocal\n#### 例子2\n```\nvar kkk=”global”,c=5;\nfunction t(){\nconsole.log(kkk);\nconsole.log(c);\nvar scope=”local”\nconsole.log(scope);\n}\nt();\n```\n\n结果：\nglobal\n5\nlocal\n\n问题1：将例子1的scope改为例子2的kkk后，结果就不一样。作用域是一样的，scope不是关键字也不是保留字，为何会这样？\n\n#### 例子3：\n```\nvar b = 44;\nalert(delete b); //false\nalert(b); //44\n\nvar name = “ddd”;\nalert(delete name); //true\nalert(name); //出错\n```\n问题2：例子3中将name,改成其他变量名，就会正常了。\n上面3个例子均是在firefox46.0.1得到的结果\n\n解答一\nJS在解析一段代码的时候，会先使用var给声明某个变量，然后才执行代码。在例子一当中，你在函数t声明了scope变量，这时scope变量的作用域在函数范围内。所以你在第一次打印scope时值为undefined，直到赋值为”local”后，scope才有值。\nMDN var描述\n变量声明无论出现在代码的任何位置，都会在任何代码执行之前处理。使用var语句声明的变量的作用域是当前执行位置的上下文：一个函数的内部（声明在函数内）或者全局（声明在函数外）。\n解答二\n使用var声明的变量，默认的configurable属性是false，所以你是无法删除的，而name是window的一个属性，configurable是true。\nMDN delete描述\ndelete 操作符用来删除一个对象的属性。\n在严格模式中，如果属性是一个不可配置（non-configurable）属性，删除时会抛出异常，非严格模式下返回 false。其他情况都返回 true。\n\n```\nvar scope=”global”,c=5;\nfunction t(){\n    console.log(scope);\n    console.log(c);\n    var scope=”local”\n    console.log(scope);\n}\nt();\n```\n相当于\n```\nvar scope=”global”,c=5;\nfunction t(){\n    var scope;//前置，值默认undefined\n    console.log(scope);\n    console.log(c);\n    scope=”local”\n    console.log(scope);\n}\nt();\n```\n问题2类似，只是kkk访问的是父作用域的kkk，值当然是global\n```\nvar b = 44;\nalert(delete b); //false\nalert(b); //44\n\nvar name = “ddd”;\nalert(delete name); //true\nalert(name); //出错\n```\n相当于\n```\nvar b,name;//name将被忽略，因为window本身有name属性，而且configurable为true\nb = 44;\nalert(delete b); //false\nalert(b); //44\n\nname = “ddd”;\nalert(delete name); //true\nalert(name); //出错\n```\n在全局作用域下使用var声明变量，相当于给window对象加属性，并且加的属性的configurable为false，意思就是不能被删除。\n\n","source":"_posts/js面试题.md","raw":"---\ntitle: js面试题\ndate: 2017-02-26 13:28:29\ntags: \n- js 面试\ncategories:\n- 基础知识 面试\n---\n\njavascript\n#### 例子1\n```\nvar scope=”global”,c=5;\nfunction t(){\nconsole.log(scope);\nconsole.log(c);\nvar scope=”local”\nconsole.log(scope);\n}\nt();\n```\n\n结果：\nundefined\n5\nlocal\n#### 例子2\n```\nvar kkk=”global”,c=5;\nfunction t(){\nconsole.log(kkk);\nconsole.log(c);\nvar scope=”local”\nconsole.log(scope);\n}\nt();\n```\n\n结果：\nglobal\n5\nlocal\n\n问题1：将例子1的scope改为例子2的kkk后，结果就不一样。作用域是一样的，scope不是关键字也不是保留字，为何会这样？\n\n#### 例子3：\n```\nvar b = 44;\nalert(delete b); //false\nalert(b); //44\n\nvar name = “ddd”;\nalert(delete name); //true\nalert(name); //出错\n```\n问题2：例子3中将name,改成其他变量名，就会正常了。\n上面3个例子均是在firefox46.0.1得到的结果\n\n解答一\nJS在解析一段代码的时候，会先使用var给声明某个变量，然后才执行代码。在例子一当中，你在函数t声明了scope变量，这时scope变量的作用域在函数范围内。所以你在第一次打印scope时值为undefined，直到赋值为”local”后，scope才有值。\nMDN var描述\n变量声明无论出现在代码的任何位置，都会在任何代码执行之前处理。使用var语句声明的变量的作用域是当前执行位置的上下文：一个函数的内部（声明在函数内）或者全局（声明在函数外）。\n解答二\n使用var声明的变量，默认的configurable属性是false，所以你是无法删除的，而name是window的一个属性，configurable是true。\nMDN delete描述\ndelete 操作符用来删除一个对象的属性。\n在严格模式中，如果属性是一个不可配置（non-configurable）属性，删除时会抛出异常，非严格模式下返回 false。其他情况都返回 true。\n\n```\nvar scope=”global”,c=5;\nfunction t(){\n    console.log(scope);\n    console.log(c);\n    var scope=”local”\n    console.log(scope);\n}\nt();\n```\n相当于\n```\nvar scope=”global”,c=5;\nfunction t(){\n    var scope;//前置，值默认undefined\n    console.log(scope);\n    console.log(c);\n    scope=”local”\n    console.log(scope);\n}\nt();\n```\n问题2类似，只是kkk访问的是父作用域的kkk，值当然是global\n```\nvar b = 44;\nalert(delete b); //false\nalert(b); //44\n\nvar name = “ddd”;\nalert(delete name); //true\nalert(name); //出错\n```\n相当于\n```\nvar b,name;//name将被忽略，因为window本身有name属性，而且configurable为true\nb = 44;\nalert(delete b); //false\nalert(b); //44\n\nname = “ddd”;\nalert(delete name); //true\nalert(name); //出错\n```\n在全局作用域下使用var声明变量，相当于给window对象加属性，并且加的属性的configurable为false，意思就是不能被删除。\n\n","slug":"js面试题","published":1,"updated":"2023-05-30T03:52:46.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41k000cjza5dfschabd","content":"<p>javascript</p>\n<h4 id=\"例子1\"><a href=\"#例子1\" class=\"headerlink\" title=\"例子1\"></a>例子1</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var scope=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">console.log(scope);</span><br><span class=\"line\">console.log(c);</span><br><span class=\"line\">var scope=”local”</span><br><span class=\"line\">console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n\n<p>结果：<br>undefined<br>5<br>local</p>\n<h4 id=\"例子2\"><a href=\"#例子2\" class=\"headerlink\" title=\"例子2\"></a>例子2</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var kkk=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">console.log(kkk);</span><br><span class=\"line\">console.log(c);</span><br><span class=\"line\">var scope=”local”</span><br><span class=\"line\">console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n\n<p>结果：<br>global<br>5<br>local</p>\n<p>问题1：将例子1的scope改为例子2的kkk后，结果就不一样。作用域是一样的，scope不是关键字也不是保留字，为何会这样？</p>\n<h4 id=\"例子3：\"><a href=\"#例子3：\" class=\"headerlink\" title=\"例子3：\"></a>例子3：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b = 44;</span><br><span class=\"line\">alert(delete b); //false</span><br><span class=\"line\">alert(b); //44</span><br><span class=\"line\"></span><br><span class=\"line\">var name = “ddd”;</span><br><span class=\"line\">alert(delete name); //true</span><br><span class=\"line\">alert(name); //出错</span><br></pre></td></tr></table></figure>\n<p>问题2：例子3中将name,改成其他变量名，就会正常了。<br>上面3个例子均是在firefox46.0.1得到的结果</p>\n<p>解答一<br>JS在解析一段代码的时候，会先使用var给声明某个变量，然后才执行代码。在例子一当中，你在函数t声明了scope变量，这时scope变量的作用域在函数范围内。所以你在第一次打印scope时值为undefined，直到赋值为”local”后，scope才有值。<br>MDN var描述<br>变量声明无论出现在代码的任何位置，都会在任何代码执行之前处理。使用var语句声明的变量的作用域是当前执行位置的上下文：一个函数的内部（声明在函数内）或者全局（声明在函数外）。<br>解答二<br>使用var声明的变量，默认的configurable属性是false，所以你是无法删除的，而name是window的一个属性，configurable是true。<br>MDN delete描述<br>delete 操作符用来删除一个对象的属性。<br>在严格模式中，如果属性是一个不可配置（non-configurable）属性，删除时会抛出异常，非严格模式下返回 false。其他情况都返回 true。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var scope=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">    console.log(c);</span><br><span class=\"line\">    var scope=”local”</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n<p>相当于</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var scope=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">    var scope;//前置，值默认undefined</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">    console.log(c);</span><br><span class=\"line\">    scope=”local”</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n<p>问题2类似，只是kkk访问的是父作用域的kkk，值当然是global</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b = 44;</span><br><span class=\"line\">alert(delete b); //false</span><br><span class=\"line\">alert(b); //44</span><br><span class=\"line\"></span><br><span class=\"line\">var name = “ddd”;</span><br><span class=\"line\">alert(delete name); //true</span><br><span class=\"line\">alert(name); //出错</span><br></pre></td></tr></table></figure>\n<p>相当于</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b,name;//name将被忽略，因为window本身有name属性，而且configurable为true</span><br><span class=\"line\">b = 44;</span><br><span class=\"line\">alert(delete b); //false</span><br><span class=\"line\">alert(b); //44</span><br><span class=\"line\"></span><br><span class=\"line\">name = “ddd”;</span><br><span class=\"line\">alert(delete name); //true</span><br><span class=\"line\">alert(name); //出错</span><br></pre></td></tr></table></figure>\n<p>在全局作用域下使用var声明变量，相当于给window对象加属性，并且加的属性的configurable为false，意思就是不能被删除。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>javascript</p>\n<h4 id=\"例子1\"><a href=\"#例子1\" class=\"headerlink\" title=\"例子1\"></a>例子1</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var scope=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">console.log(scope);</span><br><span class=\"line\">console.log(c);</span><br><span class=\"line\">var scope=”local”</span><br><span class=\"line\">console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n\n<p>结果：<br>undefined<br>5<br>local</p>\n<h4 id=\"例子2\"><a href=\"#例子2\" class=\"headerlink\" title=\"例子2\"></a>例子2</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var kkk=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">console.log(kkk);</span><br><span class=\"line\">console.log(c);</span><br><span class=\"line\">var scope=”local”</span><br><span class=\"line\">console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n\n<p>结果：<br>global<br>5<br>local</p>\n<p>问题1：将例子1的scope改为例子2的kkk后，结果就不一样。作用域是一样的，scope不是关键字也不是保留字，为何会这样？</p>\n<h4 id=\"例子3：\"><a href=\"#例子3：\" class=\"headerlink\" title=\"例子3：\"></a>例子3：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b = 44;</span><br><span class=\"line\">alert(delete b); //false</span><br><span class=\"line\">alert(b); //44</span><br><span class=\"line\"></span><br><span class=\"line\">var name = “ddd”;</span><br><span class=\"line\">alert(delete name); //true</span><br><span class=\"line\">alert(name); //出错</span><br></pre></td></tr></table></figure>\n<p>问题2：例子3中将name,改成其他变量名，就会正常了。<br>上面3个例子均是在firefox46.0.1得到的结果</p>\n<p>解答一<br>JS在解析一段代码的时候，会先使用var给声明某个变量，然后才执行代码。在例子一当中，你在函数t声明了scope变量，这时scope变量的作用域在函数范围内。所以你在第一次打印scope时值为undefined，直到赋值为”local”后，scope才有值。<br>MDN var描述<br>变量声明无论出现在代码的任何位置，都会在任何代码执行之前处理。使用var语句声明的变量的作用域是当前执行位置的上下文：一个函数的内部（声明在函数内）或者全局（声明在函数外）。<br>解答二<br>使用var声明的变量，默认的configurable属性是false，所以你是无法删除的，而name是window的一个属性，configurable是true。<br>MDN delete描述<br>delete 操作符用来删除一个对象的属性。<br>在严格模式中，如果属性是一个不可配置（non-configurable）属性，删除时会抛出异常，非严格模式下返回 false。其他情况都返回 true。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var scope=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">    console.log(c);</span><br><span class=\"line\">    var scope=”local”</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n<p>相当于</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var scope=”global”,c=5;</span><br><span class=\"line\">function t()&#123;</span><br><span class=\"line\">    var scope;//前置，值默认undefined</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">    console.log(c);</span><br><span class=\"line\">    scope=”local”</span><br><span class=\"line\">    console.log(scope);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">t();</span><br></pre></td></tr></table></figure>\n<p>问题2类似，只是kkk访问的是父作用域的kkk，值当然是global</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b = 44;</span><br><span class=\"line\">alert(delete b); //false</span><br><span class=\"line\">alert(b); //44</span><br><span class=\"line\"></span><br><span class=\"line\">var name = “ddd”;</span><br><span class=\"line\">alert(delete name); //true</span><br><span class=\"line\">alert(name); //出错</span><br></pre></td></tr></table></figure>\n<p>相当于</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b,name;//name将被忽略，因为window本身有name属性，而且configurable为true</span><br><span class=\"line\">b = 44;</span><br><span class=\"line\">alert(delete b); //false</span><br><span class=\"line\">alert(b); //44</span><br><span class=\"line\"></span><br><span class=\"line\">name = “ddd”;</span><br><span class=\"line\">alert(delete name); //true</span><br><span class=\"line\">alert(name); //出错</span><br></pre></td></tr></table></figure>\n<p>在全局作用域下使用var声明变量，相当于给window对象加属性，并且加的属性的configurable为false，意思就是不能被删除。</p>\n"},{"title":"写在新年开工之际","date":"2017-02-07T03:26:09.000Z","_content":"\n17年已经开始，在此立些flag供17年使用：\n1.   关于事业方面：   \n    * 谁也无法预知明天的事情，今天还在公司兢兢业业，明天公司就可能不存在，经历过这样的事情，所以一定不能再让这种事情发生，因此不管未来公司在哪里，但是对于自己本身而言，要提高技术，学到本事，以后才不会为一口饭而战战兢兢。\n    * 走的是前端这条道路，就得在这条路上坚持，不管是从分析问题的角度还是解决问题的能力方面，都得自己下苦功夫去练习。总监和高工以及导师都说得对：别人再怎么想提拔你，但是你自己本身不愿意宁愿做个废柴，这种事情谁也救不了。因此16年没做到的事情，现在都得狠抓。\n    * 慕课网的vue教学视频共18个小时----一个星期内抽时间看完（截止2月11日）\n    * fis官方网站资料，这两天完成---下个星期开始抽时间看源码。\n    * es6的学习，阮一峰官方网站讲解的已经详细，多多温故而知新。\n2.   关于锻炼身体方面：\n    1. 舞蹈：报班在回龙观附近\n    2. 健身房：上地附近 \n    3. 可以二选一 ： 健身房+吉他；舞蹈+仰卧慢跑\n3.   关于爱情方面：舅老爷交代说：要对他好点，其实我也不知道是老人随口这么一说还是真的看出来我的做法并不够那么照顾他，但那么一说，确实也是应该反省下自己，在这方面可能并没有那么照顾他，很是感激他把我照顾的这么好，想要什么就能给我什么，虽然从小不知道父爱是什么，却从他身上得到了从未有过的安稳。\n4.   关于亲情方面：多跟妈妈打电话，多跟弟弟联系，督促学习，补习。跟爷爷奶奶多联系，老人家年纪那么大了身体不好。\n5.   关于游玩方面：新的一年，脱宅，是主要目标，北京这么大，多出去走走，可以每个月去两个景点。\n6.   关于学习做菜：锅碗瓢盆煎锅平底锅电饭煲砧板啥都买了，就等着学习做菜了。自己百度或者请教老妈，半年后能随手做出一桌好菜来。\n7.   关于修身养性方面：毕竟年龄是一道坎，时间流逝，带走的不仅仅是皮肤的光彩，还带来了对生活的浮躁，还没嫁人，修身养性还是需要的，可以多养养花草，收拾房间，学习书画甚至茶艺。\n8.  关于朋友： 多跟她们联系，毕业之后的联系也是越来越少，但她们会是我的支持和鼓舞的来源，所以需要保持和她们的联系。\n9. 奥黛丽-赫本说过优雅的女人是不生气的，我的新晋女神林志玲也说温柔是最强大的力量。所以，当我学会放弃疲于奔命的生活，试着放松自己慢点儿脚步走路，我发现以往汲汲营营追求的东西竟然可以轻易的获得了。这很好理解的，相信无论是谁都无法喜欢那些个目标明确地刻在在脸上，无论什么时间都一身焦虑地和时间赛跑的姑娘吧~修身养性之于年轻人可不是释怀和淡泊，喜爱自己，试图理解而不是认同他人，学会顺应时机。也就是符合了天时地利人和。\n    1.   饮食合理 拒绝垃圾食品\n    2.   工作的事不拖拉\n    3.   培养真正的兴趣爱好，要深刻\n    4.   创造大于消费，比如唱歌的时间大于听歌的时间 思考的时间大于阅读的时间\n\n ","source":"_posts/kaigong.md","raw":"---\ntitle: 写在新年开工之际\ndate: 2017-02-07 11:26:09\ntags: \n- js\ncategories:\n- 基础知识\n---\n\n17年已经开始，在此立些flag供17年使用：\n1.   关于事业方面：   \n    * 谁也无法预知明天的事情，今天还在公司兢兢业业，明天公司就可能不存在，经历过这样的事情，所以一定不能再让这种事情发生，因此不管未来公司在哪里，但是对于自己本身而言，要提高技术，学到本事，以后才不会为一口饭而战战兢兢。\n    * 走的是前端这条道路，就得在这条路上坚持，不管是从分析问题的角度还是解决问题的能力方面，都得自己下苦功夫去练习。总监和高工以及导师都说得对：别人再怎么想提拔你，但是你自己本身不愿意宁愿做个废柴，这种事情谁也救不了。因此16年没做到的事情，现在都得狠抓。\n    * 慕课网的vue教学视频共18个小时----一个星期内抽时间看完（截止2月11日）\n    * fis官方网站资料，这两天完成---下个星期开始抽时间看源码。\n    * es6的学习，阮一峰官方网站讲解的已经详细，多多温故而知新。\n2.   关于锻炼身体方面：\n    1. 舞蹈：报班在回龙观附近\n    2. 健身房：上地附近 \n    3. 可以二选一 ： 健身房+吉他；舞蹈+仰卧慢跑\n3.   关于爱情方面：舅老爷交代说：要对他好点，其实我也不知道是老人随口这么一说还是真的看出来我的做法并不够那么照顾他，但那么一说，确实也是应该反省下自己，在这方面可能并没有那么照顾他，很是感激他把我照顾的这么好，想要什么就能给我什么，虽然从小不知道父爱是什么，却从他身上得到了从未有过的安稳。\n4.   关于亲情方面：多跟妈妈打电话，多跟弟弟联系，督促学习，补习。跟爷爷奶奶多联系，老人家年纪那么大了身体不好。\n5.   关于游玩方面：新的一年，脱宅，是主要目标，北京这么大，多出去走走，可以每个月去两个景点。\n6.   关于学习做菜：锅碗瓢盆煎锅平底锅电饭煲砧板啥都买了，就等着学习做菜了。自己百度或者请教老妈，半年后能随手做出一桌好菜来。\n7.   关于修身养性方面：毕竟年龄是一道坎，时间流逝，带走的不仅仅是皮肤的光彩，还带来了对生活的浮躁，还没嫁人，修身养性还是需要的，可以多养养花草，收拾房间，学习书画甚至茶艺。\n8.  关于朋友： 多跟她们联系，毕业之后的联系也是越来越少，但她们会是我的支持和鼓舞的来源，所以需要保持和她们的联系。\n9. 奥黛丽-赫本说过优雅的女人是不生气的，我的新晋女神林志玲也说温柔是最强大的力量。所以，当我学会放弃疲于奔命的生活，试着放松自己慢点儿脚步走路，我发现以往汲汲营营追求的东西竟然可以轻易的获得了。这很好理解的，相信无论是谁都无法喜欢那些个目标明确地刻在在脸上，无论什么时间都一身焦虑地和时间赛跑的姑娘吧~修身养性之于年轻人可不是释怀和淡泊，喜爱自己，试图理解而不是认同他人，学会顺应时机。也就是符合了天时地利人和。\n    1.   饮食合理 拒绝垃圾食品\n    2.   工作的事不拖拉\n    3.   培养真正的兴趣爱好，要深刻\n    4.   创造大于消费，比如唱歌的时间大于听歌的时间 思考的时间大于阅读的时间\n\n ","slug":"kaigong","published":1,"updated":"2023-05-30T03:52:46.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41l000gjza5akpx2qw2","content":"<p>17年已经开始，在此立些flag供17年使用：</p>\n<ol>\n<li>关于事业方面：<br>* 谁也无法预知明天的事情，今天还在公司兢兢业业，明天公司就可能不存在，经历过这样的事情，所以一定不能再让这种事情发生，因此不管未来公司在哪里，但是对于自己本身而言，要提高技术，学到本事，以后才不会为一口饭而战战兢兢。<br>* 走的是前端这条道路，就得在这条路上坚持，不管是从分析问题的角度还是解决问题的能力方面，都得自己下苦功夫去练习。总监和高工以及导师都说得对：别人再怎么想提拔你，但是你自己本身不愿意宁愿做个废柴，这种事情谁也救不了。因此16年没做到的事情，现在都得狠抓。<br>* 慕课网的vue教学视频共18个小时—-一个星期内抽时间看完（截止2月11日）<br>* fis官方网站资料，这两天完成—下个星期开始抽时间看源码。<br>* es6的学习，阮一峰官方网站讲解的已经详细，多多温故而知新。</li>\n<li>关于锻炼身体方面：<br>1. 舞蹈：报班在回龙观附近<br>2. 健身房：上地附近<br>3. 可以二选一 ： 健身房+吉他；舞蹈+仰卧慢跑</li>\n<li>关于爱情方面：舅老爷交代说：要对他好点，其实我也不知道是老人随口这么一说还是真的看出来我的做法并不够那么照顾他，但那么一说，确实也是应该反省下自己，在这方面可能并没有那么照顾他，很是感激他把我照顾的这么好，想要什么就能给我什么，虽然从小不知道父爱是什么，却从他身上得到了从未有过的安稳。</li>\n<li>关于亲情方面：多跟妈妈打电话，多跟弟弟联系，督促学习，补习。跟爷爷奶奶多联系，老人家年纪那么大了身体不好。</li>\n<li>关于游玩方面：新的一年，脱宅，是主要目标，北京这么大，多出去走走，可以每个月去两个景点。</li>\n<li>关于学习做菜：锅碗瓢盆煎锅平底锅电饭煲砧板啥都买了，就等着学习做菜了。自己百度或者请教老妈，半年后能随手做出一桌好菜来。</li>\n<li>关于修身养性方面：毕竟年龄是一道坎，时间流逝，带走的不仅仅是皮肤的光彩，还带来了对生活的浮躁，还没嫁人，修身养性还是需要的，可以多养养花草，收拾房间，学习书画甚至茶艺。</li>\n<li>关于朋友： 多跟她们联系，毕业之后的联系也是越来越少，但她们会是我的支持和鼓舞的来源，所以需要保持和她们的联系。</li>\n<li>奥黛丽-赫本说过优雅的女人是不生气的，我的新晋女神林志玲也说温柔是最强大的力量。所以，当我学会放弃疲于奔命的生活，试着放松自己慢点儿脚步走路，我发现以往汲汲营营追求的东西竟然可以轻易的获得了。这很好理解的，相信无论是谁都无法喜欢那些个目标明确地刻在在脸上，无论什么时间都一身焦虑地和时间赛跑的姑娘吧~修身养性之于年轻人可不是释怀和淡泊，喜爱自己，试图理解而不是认同他人，学会顺应时机。也就是符合了天时地利人和。<ol>\n<li>饮食合理 拒绝垃圾食品</li>\n<li>工作的事不拖拉</li>\n<li>培养真正的兴趣爱好，要深刻</li>\n<li>创造大于消费，比如唱歌的时间大于听歌的时间 思考的时间大于阅读的时间</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>17年已经开始，在此立些flag供17年使用：</p>\n<ol>\n<li>关于事业方面：<br>* 谁也无法预知明天的事情，今天还在公司兢兢业业，明天公司就可能不存在，经历过这样的事情，所以一定不能再让这种事情发生，因此不管未来公司在哪里，但是对于自己本身而言，要提高技术，学到本事，以后才不会为一口饭而战战兢兢。<br>* 走的是前端这条道路，就得在这条路上坚持，不管是从分析问题的角度还是解决问题的能力方面，都得自己下苦功夫去练习。总监和高工以及导师都说得对：别人再怎么想提拔你，但是你自己本身不愿意宁愿做个废柴，这种事情谁也救不了。因此16年没做到的事情，现在都得狠抓。<br>* 慕课网的vue教学视频共18个小时—-一个星期内抽时间看完（截止2月11日）<br>* fis官方网站资料，这两天完成—下个星期开始抽时间看源码。<br>* es6的学习，阮一峰官方网站讲解的已经详细，多多温故而知新。</li>\n<li>关于锻炼身体方面：<br>1. 舞蹈：报班在回龙观附近<br>2. 健身房：上地附近<br>3. 可以二选一 ： 健身房+吉他；舞蹈+仰卧慢跑</li>\n<li>关于爱情方面：舅老爷交代说：要对他好点，其实我也不知道是老人随口这么一说还是真的看出来我的做法并不够那么照顾他，但那么一说，确实也是应该反省下自己，在这方面可能并没有那么照顾他，很是感激他把我照顾的这么好，想要什么就能给我什么，虽然从小不知道父爱是什么，却从他身上得到了从未有过的安稳。</li>\n<li>关于亲情方面：多跟妈妈打电话，多跟弟弟联系，督促学习，补习。跟爷爷奶奶多联系，老人家年纪那么大了身体不好。</li>\n<li>关于游玩方面：新的一年，脱宅，是主要目标，北京这么大，多出去走走，可以每个月去两个景点。</li>\n<li>关于学习做菜：锅碗瓢盆煎锅平底锅电饭煲砧板啥都买了，就等着学习做菜了。自己百度或者请教老妈，半年后能随手做出一桌好菜来。</li>\n<li>关于修身养性方面：毕竟年龄是一道坎，时间流逝，带走的不仅仅是皮肤的光彩，还带来了对生活的浮躁，还没嫁人，修身养性还是需要的，可以多养养花草，收拾房间，学习书画甚至茶艺。</li>\n<li>关于朋友： 多跟她们联系，毕业之后的联系也是越来越少，但她们会是我的支持和鼓舞的来源，所以需要保持和她们的联系。</li>\n<li>奥黛丽-赫本说过优雅的女人是不生气的，我的新晋女神林志玲也说温柔是最强大的力量。所以，当我学会放弃疲于奔命的生活，试着放松自己慢点儿脚步走路，我发现以往汲汲营营追求的东西竟然可以轻易的获得了。这很好理解的，相信无论是谁都无法喜欢那些个目标明确地刻在在脸上，无论什么时间都一身焦虑地和时间赛跑的姑娘吧~修身养性之于年轻人可不是释怀和淡泊，喜爱自己，试图理解而不是认同他人，学会顺应时机。也就是符合了天时地利人和。<ol>\n<li>饮食合理 拒绝垃圾食品</li>\n<li>工作的事不拖拉</li>\n<li>培养真正的兴趣爱好，要深刻</li>\n<li>创造大于消费，比如唱歌的时间大于听歌的时间 思考的时间大于阅读的时间</li>\n</ol>\n</li>\n</ol>\n"},{"title":"node-blog知识整理","date":"2017-04-05T05:20:10.000Z","_content":"\n1. node-glob的常用用法说明： 匹配方式与正则类似：\n        *  * ： 匹配0或多个除了‘/’以外的字符\n        * ？： 匹配单个除了‘/’以外的字符\n        *  ** ： 匹配多个字符包括‘/’\n        *  {} ： 可以让多个规则用，逗号分隔，起到或者的作用\n        *  ！ ：出现在规则的开头，表示取反，即匹配不命中后面规则的文件。\n2.  注意的是： fis中的文件都是以/开头的，所以编写规则时，请尽量严格以/开头，\n当设置规则时，没有严格的以 / 开头，比如 a.js, 它匹配的是所有目录下面的 a.js, 包括：/a.js、/a/a.js、/a/b/a.js。 如果要严格只命中根目录下面的 /a.js, 请使用 fis.match('/a.js')。\n另外 /foo/*.js， 只会命中 /foo 目录下面的所有 js 文件，不包含子目录。 而 /foo/**/*.js 是命中所有子目录以及其子目录下面的所有 js 文件，不包含当前目录下面的 js 文件。 如果需要命中 foo 目录下面以及所有其子目录下面的 js 文件，请使用 /foo/**.js\n3. 扩展规则： \n        * 匹配某目录下的所有js文件，fis扩展了node-glob的规则： a/**.js--表示匹配到a目录以及其子目录下的所有js文件。\n        * 括号用法扩展： fis.match('a/**.js',{release: ''/b/$1})：让a目录下的所有js发布到b目录下，保留原始文件名。\n4. 捕获分组：  \n使用 node-glob 捕获的分组，可以用于其他属性的设定，如 release, url, id 等。使用的方式与正则替换类似，我们可以用 $1, $2, $3 来代表相应的捕获分组。其中 $0 代表的是 match 到的整个字符串。\nfis.match('/a/(**.js)', {\n release: '/b/$1' // $1 代表 (**.js) 匹配的内容\n});\nfis.match('/a/(**.js)', {\n release: '/b/$0' // $0 代表 /a/(**.js) 匹配的内容\n});\n\n5. 特殊用法：\n    1. ::package用来匹配fis的打包过程中；\n    2. ::text匹配文本文件；    \n默认识别这类后缀的文件。\n[\n'css', 'tpl', 'js', 'php',\n'txt', 'json', 'xml', 'htm',\n'text', 'xhtml', 'html', 'md',\n'conf', 'po', 'config', 'tmpl',\n'coffee', 'less', 'sass', 'jsp',\n'scss', 'manifest', 'bak', 'asp',\n'tmp', 'haml', 'jade', 'aspx',\n'ashx', 'java', 'py', 'c', 'cpp',\n'h', 'cshtml', 'asax', 'master',\n'ascx', 'cs', 'ftl', 'vm', 'ejs',\n'styl', 'jsx', 'handlebars'\n]\n如果你希望命中的文件类型不在列表中，请通过 fis.set('project.fileType.text') 扩展，多个后缀用 , 分割。\nfis.set('project.fileType.text', 'cpp,hhp');\n    3.  :: image用来匹配文件类型为图片的文件。 默认识别的后缀为：\n默认识别这类后缀的文件。\n[\n'svg', 'tif', 'tiff', 'wbmp',\n'png', 'bmp', 'fax', 'gif',\n'ico', 'jfif', 'jpe', 'jpeg',\n'jpg', 'woff', 'cur', 'webp',\n'swf', 'ttf', 'eot', 'woff2'\n]\n如果你希望命中的文件类型不在列表中，请通过 fis.set('project.fileType.image') 扩展，多个后缀用 , 分割。\nfis.set('project.fileType.image', 'raw,bpg');\n    4. *.html:css 用来匹配命中的html文件中内嵌的css部分。fis3 htmllike的文件内嵌的js内容也会走单文件编译流程，默认制作标准化处理，如果想压缩，可以进行如下配置： fis.match('*html:js',{optimizer:fis.plugin('uglify-js')})；\n    5. *.html:inline-style用来匹配命中的html文件中的内联样式，可以配置些auto prefix之类的插件。\n    6. *.html:scss用来命中html文件中的scss部分。\n6. 注意事项：node-glob扩展可能还存在问题，分组() 与{}搭配使用时存在缺陷：如：\n/a/({b,c}/**.js) 会拆分成并列的两个规则 /a/(b/**.js) 和 /a/(c/**.js)，当这两个合成一个正则的时候，这个时候问题来了， 一个分组变成了两个分组，分组 1 为 (b/**.js) 分组 2 为 (c/**.js)。那么当希望获取捕获信息时，不能按原来的分组序号去获取了。\n// 错误\nfis.match('/a/({b,c}/**.js)', {\n  release: '/static/$1'\n});\n\n// 正确\nfis.match('/a/({b,c}/**.js)', {\n  release: '/static/$1$2'\n});","source":"_posts/node-blog.md","raw":"---\ntitle: node-blog知识整理\ndate: 2017-04-05 13:20:10\ntags: \n- js | 框架 | 打包工具\ncategories:\n- 基础知识\n---\n\n1. node-glob的常用用法说明： 匹配方式与正则类似：\n        *  * ： 匹配0或多个除了‘/’以外的字符\n        * ？： 匹配单个除了‘/’以外的字符\n        *  ** ： 匹配多个字符包括‘/’\n        *  {} ： 可以让多个规则用，逗号分隔，起到或者的作用\n        *  ！ ：出现在规则的开头，表示取反，即匹配不命中后面规则的文件。\n2.  注意的是： fis中的文件都是以/开头的，所以编写规则时，请尽量严格以/开头，\n当设置规则时，没有严格的以 / 开头，比如 a.js, 它匹配的是所有目录下面的 a.js, 包括：/a.js、/a/a.js、/a/b/a.js。 如果要严格只命中根目录下面的 /a.js, 请使用 fis.match('/a.js')。\n另外 /foo/*.js， 只会命中 /foo 目录下面的所有 js 文件，不包含子目录。 而 /foo/**/*.js 是命中所有子目录以及其子目录下面的所有 js 文件，不包含当前目录下面的 js 文件。 如果需要命中 foo 目录下面以及所有其子目录下面的 js 文件，请使用 /foo/**.js\n3. 扩展规则： \n        * 匹配某目录下的所有js文件，fis扩展了node-glob的规则： a/**.js--表示匹配到a目录以及其子目录下的所有js文件。\n        * 括号用法扩展： fis.match('a/**.js',{release: ''/b/$1})：让a目录下的所有js发布到b目录下，保留原始文件名。\n4. 捕获分组：  \n使用 node-glob 捕获的分组，可以用于其他属性的设定，如 release, url, id 等。使用的方式与正则替换类似，我们可以用 $1, $2, $3 来代表相应的捕获分组。其中 $0 代表的是 match 到的整个字符串。\nfis.match('/a/(**.js)', {\n release: '/b/$1' // $1 代表 (**.js) 匹配的内容\n});\nfis.match('/a/(**.js)', {\n release: '/b/$0' // $0 代表 /a/(**.js) 匹配的内容\n});\n\n5. 特殊用法：\n    1. ::package用来匹配fis的打包过程中；\n    2. ::text匹配文本文件；    \n默认识别这类后缀的文件。\n[\n'css', 'tpl', 'js', 'php',\n'txt', 'json', 'xml', 'htm',\n'text', 'xhtml', 'html', 'md',\n'conf', 'po', 'config', 'tmpl',\n'coffee', 'less', 'sass', 'jsp',\n'scss', 'manifest', 'bak', 'asp',\n'tmp', 'haml', 'jade', 'aspx',\n'ashx', 'java', 'py', 'c', 'cpp',\n'h', 'cshtml', 'asax', 'master',\n'ascx', 'cs', 'ftl', 'vm', 'ejs',\n'styl', 'jsx', 'handlebars'\n]\n如果你希望命中的文件类型不在列表中，请通过 fis.set('project.fileType.text') 扩展，多个后缀用 , 分割。\nfis.set('project.fileType.text', 'cpp,hhp');\n    3.  :: image用来匹配文件类型为图片的文件。 默认识别的后缀为：\n默认识别这类后缀的文件。\n[\n'svg', 'tif', 'tiff', 'wbmp',\n'png', 'bmp', 'fax', 'gif',\n'ico', 'jfif', 'jpe', 'jpeg',\n'jpg', 'woff', 'cur', 'webp',\n'swf', 'ttf', 'eot', 'woff2'\n]\n如果你希望命中的文件类型不在列表中，请通过 fis.set('project.fileType.image') 扩展，多个后缀用 , 分割。\nfis.set('project.fileType.image', 'raw,bpg');\n    4. *.html:css 用来匹配命中的html文件中内嵌的css部分。fis3 htmllike的文件内嵌的js内容也会走单文件编译流程，默认制作标准化处理，如果想压缩，可以进行如下配置： fis.match('*html:js',{optimizer:fis.plugin('uglify-js')})；\n    5. *.html:inline-style用来匹配命中的html文件中的内联样式，可以配置些auto prefix之类的插件。\n    6. *.html:scss用来命中html文件中的scss部分。\n6. 注意事项：node-glob扩展可能还存在问题，分组() 与{}搭配使用时存在缺陷：如：\n/a/({b,c}/**.js) 会拆分成并列的两个规则 /a/(b/**.js) 和 /a/(c/**.js)，当这两个合成一个正则的时候，这个时候问题来了， 一个分组变成了两个分组，分组 1 为 (b/**.js) 分组 2 为 (c/**.js)。那么当希望获取捕获信息时，不能按原来的分组序号去获取了。\n// 错误\nfis.match('/a/({b,c}/**.js)', {\n  release: '/static/$1'\n});\n\n// 正确\nfis.match('/a/({b,c}/**.js)', {\n  release: '/static/$1$2'\n});","slug":"node-blog","published":1,"updated":"2023-05-30T03:52:46.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41m000jjza52evz5tt7","content":"<ol>\n<li><p>node-glob的常用用法说明： 匹配方式与正则类似：<br> *  * ： 匹配0或多个除了‘&#x2F;’以外的字符<br> * ？： 匹配单个除了‘&#x2F;’以外的字符<br> *  ** ： 匹配多个字符包括‘&#x2F;’<br> *  {} ： 可以让多个规则用，逗号分隔，起到或者的作用<br> *  ！ ：出现在规则的开头，表示取反，即匹配不命中后面规则的文件。</p>\n</li>\n<li><p>注意的是： fis中的文件都是以&#x2F;开头的，所以编写规则时，请尽量严格以&#x2F;开头，<br>当设置规则时，没有严格的以 &#x2F; 开头，比如 a.js, 它匹配的是所有目录下面的 a.js, 包括：&#x2F;a.js、&#x2F;a&#x2F;a.js、&#x2F;a&#x2F;b&#x2F;a.js。 如果要严格只命中根目录下面的 &#x2F;a.js, 请使用 fis.match(‘&#x2F;a.js’)。<br>另外 &#x2F;foo&#x2F;<em>.js， 只会命中 &#x2F;foo 目录下面的所有 js 文件，不包含子目录。 而 &#x2F;foo&#x2F;**&#x2F;</em>.js 是命中所有子目录以及其子目录下面的所有 js 文件，不包含当前目录下面的 js 文件。 如果需要命中 foo 目录下面以及所有其子目录下面的 js 文件，请使用 &#x2F;foo&#x2F;**.js</p>\n</li>\n<li><p>扩展规则：<br> * 匹配某目录下的所有js文件，fis扩展了node-glob的规则： a&#x2F;<strong>.js–表示匹配到a目录以及其子目录下的所有js文件。<br> * 括号用法扩展： fis.match(‘a&#x2F;</strong>.js’,{release: ‘’&#x2F;b&#x2F;$1})：让a目录下的所有js发布到b目录下，保留原始文件名。</p>\n</li>\n<li><p>捕获分组：<br>使用 node-glob 捕获的分组，可以用于其他属性的设定，如 release, url, id 等。使用的方式与正则替换类似，我们可以用 $1, $2, $3 来代表相应的捕获分组。其中 $0 代表的是 match 到的整个字符串。<br>fis.match(‘&#x2F;a&#x2F;(<strong>.js)’, {<br> release: ‘&#x2F;b&#x2F;$1’ &#x2F;&#x2F; $1 代表 (</strong>.js) 匹配的内容<br>});<br>fis.match(‘&#x2F;a&#x2F;(<strong>.js)’, {<br> release: ‘&#x2F;b&#x2F;$0’ &#x2F;&#x2F; $0 代表 &#x2F;a&#x2F;(</strong>.js) 匹配的内容<br>});</p>\n</li>\n<li><p>特殊用法：</p>\n<ol>\n<li>::package用来匹配fis的打包过程中；</li>\n<li>::text匹配文本文件；<br>默认识别这类后缀的文件。<br>[<br>‘css’, ‘tpl’, ‘js’, ‘php’,<br>‘txt’, ‘json’, ‘xml’, ‘htm’,<br>‘text’, ‘xhtml’, ‘html’, ‘md’,<br>‘conf’, ‘po’, ‘config’, ‘tmpl’,<br>‘coffee’, ‘less’, ‘sass’, ‘jsp’,<br>‘scss’, ‘manifest’, ‘bak’, ‘asp’,<br>‘tmp’, ‘haml’, ‘jade’, ‘aspx’,<br>‘ashx’, ‘java’, ‘py’, ‘c’, ‘cpp’,<br>‘h’, ‘cshtml’, ‘asax’, ‘master’,<br>‘ascx’, ‘cs’, ‘ftl’, ‘vm’, ‘ejs’,<br>‘styl’, ‘jsx’, ‘handlebars’<br>]<br>如果你希望命中的文件类型不在列表中，请通过 fis.set(‘project.fileType.text’) 扩展，多个后缀用 , 分割。<br>fis.set(‘project.fileType.text’, ‘cpp,hhp’);</li>\n<li>:: image用来匹配文件类型为图片的文件。 默认识别的后缀为：<br>默认识别这类后缀的文件。<br>[<br>‘svg’, ‘tif’, ‘tiff’, ‘wbmp’,<br>‘png’, ‘bmp’, ‘fax’, ‘gif’,<br>‘ico’, ‘jfif’, ‘jpe’, ‘jpeg’,<br>‘jpg’, ‘woff’, ‘cur’, ‘webp’,<br>‘swf’, ‘ttf’, ‘eot’, ‘woff2’<br>]<br>如果你希望命中的文件类型不在列表中，请通过 fis.set(‘project.fileType.image’) 扩展，多个后缀用 , 分割。<br>fis.set(‘project.fileType.image’, ‘raw,bpg’);</li>\n<li>*.html:css 用来匹配命中的html文件中内嵌的css部分。fis3 htmllike的文件内嵌的js内容也会走单文件编译流程，默认制作标准化处理，如果想压缩，可以进行如下配置： fis.match(‘*html:js’,{optimizer:fis.plugin(‘uglify-js’)})；</li>\n<li>*.html:inline-style用来匹配命中的html文件中的内联样式，可以配置些auto prefix之类的插件。</li>\n<li>*.html:scss用来命中html文件中的scss部分。</li>\n</ol>\n</li>\n<li><p>注意事项：node-glob扩展可能还存在问题，分组() 与{}搭配使用时存在缺陷：如：<br>&#x2F;a&#x2F;({b,c}&#x2F;<strong>.js) 会拆分成并列的两个规则 &#x2F;a&#x2F;(b&#x2F;</strong>.js) 和 &#x2F;a&#x2F;(c&#x2F;<strong>.js)，当这两个合成一个正则的时候，这个时候问题来了， 一个分组变成了两个分组，分组 1 为 (b&#x2F;</strong>.js) 分组 2 为 (c&#x2F;<strong>.js)。那么当希望获取捕获信息时，不能按原来的分组序号去获取了。<br>&#x2F;&#x2F; 错误<br>fis.match(‘&#x2F;a&#x2F;({b,c}&#x2F;</strong>.js)’, {<br>  release: ‘&#x2F;static&#x2F;$1’<br>});</p>\n</li>\n</ol>\n<p>&#x2F;&#x2F; 正确<br>fis.match(‘&#x2F;a&#x2F;({b,c}&#x2F;**.js)’, {<br>  release: ‘&#x2F;static&#x2F;$1$2’<br>});</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>node-glob的常用用法说明： 匹配方式与正则类似：<br> *  * ： 匹配0或多个除了‘&#x2F;’以外的字符<br> * ？： 匹配单个除了‘&#x2F;’以外的字符<br> *  ** ： 匹配多个字符包括‘&#x2F;’<br> *  {} ： 可以让多个规则用，逗号分隔，起到或者的作用<br> *  ！ ：出现在规则的开头，表示取反，即匹配不命中后面规则的文件。</p>\n</li>\n<li><p>注意的是： fis中的文件都是以&#x2F;开头的，所以编写规则时，请尽量严格以&#x2F;开头，<br>当设置规则时，没有严格的以 &#x2F; 开头，比如 a.js, 它匹配的是所有目录下面的 a.js, 包括：&#x2F;a.js、&#x2F;a&#x2F;a.js、&#x2F;a&#x2F;b&#x2F;a.js。 如果要严格只命中根目录下面的 &#x2F;a.js, 请使用 fis.match(‘&#x2F;a.js’)。<br>另外 &#x2F;foo&#x2F;<em>.js， 只会命中 &#x2F;foo 目录下面的所有 js 文件，不包含子目录。 而 &#x2F;foo&#x2F;**&#x2F;</em>.js 是命中所有子目录以及其子目录下面的所有 js 文件，不包含当前目录下面的 js 文件。 如果需要命中 foo 目录下面以及所有其子目录下面的 js 文件，请使用 &#x2F;foo&#x2F;**.js</p>\n</li>\n<li><p>扩展规则：<br> * 匹配某目录下的所有js文件，fis扩展了node-glob的规则： a&#x2F;<strong>.js–表示匹配到a目录以及其子目录下的所有js文件。<br> * 括号用法扩展： fis.match(‘a&#x2F;</strong>.js’,{release: ‘’&#x2F;b&#x2F;$1})：让a目录下的所有js发布到b目录下，保留原始文件名。</p>\n</li>\n<li><p>捕获分组：<br>使用 node-glob 捕获的分组，可以用于其他属性的设定，如 release, url, id 等。使用的方式与正则替换类似，我们可以用 $1, $2, $3 来代表相应的捕获分组。其中 $0 代表的是 match 到的整个字符串。<br>fis.match(‘&#x2F;a&#x2F;(<strong>.js)’, {<br> release: ‘&#x2F;b&#x2F;$1’ &#x2F;&#x2F; $1 代表 (</strong>.js) 匹配的内容<br>});<br>fis.match(‘&#x2F;a&#x2F;(<strong>.js)’, {<br> release: ‘&#x2F;b&#x2F;$0’ &#x2F;&#x2F; $0 代表 &#x2F;a&#x2F;(</strong>.js) 匹配的内容<br>});</p>\n</li>\n<li><p>特殊用法：</p>\n<ol>\n<li>::package用来匹配fis的打包过程中；</li>\n<li>::text匹配文本文件；<br>默认识别这类后缀的文件。<br>[<br>‘css’, ‘tpl’, ‘js’, ‘php’,<br>‘txt’, ‘json’, ‘xml’, ‘htm’,<br>‘text’, ‘xhtml’, ‘html’, ‘md’,<br>‘conf’, ‘po’, ‘config’, ‘tmpl’,<br>‘coffee’, ‘less’, ‘sass’, ‘jsp’,<br>‘scss’, ‘manifest’, ‘bak’, ‘asp’,<br>‘tmp’, ‘haml’, ‘jade’, ‘aspx’,<br>‘ashx’, ‘java’, ‘py’, ‘c’, ‘cpp’,<br>‘h’, ‘cshtml’, ‘asax’, ‘master’,<br>‘ascx’, ‘cs’, ‘ftl’, ‘vm’, ‘ejs’,<br>‘styl’, ‘jsx’, ‘handlebars’<br>]<br>如果你希望命中的文件类型不在列表中，请通过 fis.set(‘project.fileType.text’) 扩展，多个后缀用 , 分割。<br>fis.set(‘project.fileType.text’, ‘cpp,hhp’);</li>\n<li>:: image用来匹配文件类型为图片的文件。 默认识别的后缀为：<br>默认识别这类后缀的文件。<br>[<br>‘svg’, ‘tif’, ‘tiff’, ‘wbmp’,<br>‘png’, ‘bmp’, ‘fax’, ‘gif’,<br>‘ico’, ‘jfif’, ‘jpe’, ‘jpeg’,<br>‘jpg’, ‘woff’, ‘cur’, ‘webp’,<br>‘swf’, ‘ttf’, ‘eot’, ‘woff2’<br>]<br>如果你希望命中的文件类型不在列表中，请通过 fis.set(‘project.fileType.image’) 扩展，多个后缀用 , 分割。<br>fis.set(‘project.fileType.image’, ‘raw,bpg’);</li>\n<li>*.html:css 用来匹配命中的html文件中内嵌的css部分。fis3 htmllike的文件内嵌的js内容也会走单文件编译流程，默认制作标准化处理，如果想压缩，可以进行如下配置： fis.match(‘*html:js’,{optimizer:fis.plugin(‘uglify-js’)})；</li>\n<li>*.html:inline-style用来匹配命中的html文件中的内联样式，可以配置些auto prefix之类的插件。</li>\n<li>*.html:scss用来命中html文件中的scss部分。</li>\n</ol>\n</li>\n<li><p>注意事项：node-glob扩展可能还存在问题，分组() 与{}搭配使用时存在缺陷：如：<br>&#x2F;a&#x2F;({b,c}&#x2F;<strong>.js) 会拆分成并列的两个规则 &#x2F;a&#x2F;(b&#x2F;</strong>.js) 和 &#x2F;a&#x2F;(c&#x2F;<strong>.js)，当这两个合成一个正则的时候，这个时候问题来了， 一个分组变成了两个分组，分组 1 为 (b&#x2F;</strong>.js) 分组 2 为 (c&#x2F;<strong>.js)。那么当希望获取捕获信息时，不能按原来的分组序号去获取了。<br>&#x2F;&#x2F; 错误<br>fis.match(‘&#x2F;a&#x2F;({b,c}&#x2F;</strong>.js)’, {<br>  release: ‘&#x2F;static&#x2F;$1’<br>});</p>\n</li>\n</ol>\n<p>&#x2F;&#x2F; 正确<br>fis.match(‘&#x2F;a&#x2F;({b,c}&#x2F;**.js)’, {<br>  release: ‘&#x2F;static&#x2F;$1$2’<br>});</p>\n"},{"title":"npm相关知识","date":"2017-03-01T11:22:20.000Z","_content":"\n#### 1. 简介：    \n  含义一：node的开放式模块登记和管理系统\n  含义二：node默认的模块管理器，是一个命令行下的软件，用来安装和管理node模块。\n         不需要单独安装，安装node的时候会连带一起安装，但可能不是最新版本，可以使用npm install npm@latest -g更新到最新版本。\n\n#### 2.   npm init \n    --初始化生成一个新的package.json文件。可以加参数 -y 或者 -f 表示跳过向用户提问阶段，直接生成一个新的package.json文件。\n#### 3.   npm set  xx -- 设置环境变量\n#### 4.   npm config xx --- 设置安装目录以及安装的版本信息等\n#### 5.   npm info xx -- 查看每个模块具体信息\n#### 6.   npm search 搜索词 -- 搜索npm 仓库，后面的搜索词可以是字符串也可以是正则表达式\n#### 7.   npm list -- 以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\n#### 8.   npm install --  \n    * install后可以是package name，也可以是github代码库地址；\n    * 全局安装 sudo npm install -g （或-global）<package name>；\n    * 全局--安装到系统目录中，各个项目都可以调用；本地安装--将一个模块下载到当前项目的node_modules子目录，只有在项目目录中才能调用；\n    * 安装总是会先去检查node_modules中是否已存在指定模块，如果存在，即使目前仓库里有最新版本，也不会再安装，可以加上参数 -- force强制重新安装\n    * 安装不同版本 在模块名后加上 @版本号（默认安装最新版本）\n    * 参数 --save-exact，会在package.json文件中指定安装模块的确切版本\n    * -save：模块名将被添加到dependencies，简化为-S\n    * -save-dev：模块名将被添加到devDependencies，可以简化为参数-D\n#### 9. 避免系统权限：默认安装在系统目录下（/usr/local/lib）,普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件.npmrc，然后在文件中将prefix变量定义到主目录下： prefix = /home/yourusername/npm，然后在主目录下新建npm子目录：mkdir ~/npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在.bash_profile文件（或者.bashrc文件）中加入PATH变量： export PATH = ~/npm/bin:$PATH.\n#### 10. npm update，npm uninstall --更新和卸载\n#### 11. npm run-- 执行脚本，在package.json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm run lint表示执行eslint，npm run test命令行则表示执行mocha test/ 。      \n    *   npm如果不加参数直接运行，会列出package.json中所有可执行的脚本命令。\n    *   npm run 会创建一个shell，执行指定的命令，并临时将node_modules/.bin加入PATH变量，这意味着本地模块可以直接运行。\n    * 例如npm i eslint --save-dev会产生两个结果：首先eslint会被安装到当前目录的node_modules子目录，其次，node_modules/.bin目录会生成一个符号链接node_modules/.bin/eslint，指向eslint的可执行脚本，然后就可以在package.json的script属性里边，不带路径的引用eslint这个脚本。然后在执行npm run lint时就会自动执行./node_modules/.bin/eslint . \n    * 还可以自己添加参数\n12. \n```\n\"scripts\": {\n    \"lint\": \"eslint .\",\n    \"test\": \"mocha test/\"\n  }\n```\n13. pre-和post脚本： npm run 为每一条命令都提供了两个pre-和post-两个钩子，也就是说例如npm run lint执行时，npm会先查看有没有定义pre-和post-，如果有则会先执行 npm run prelint  然后执行npm run lint ，最后是npm run postlint。\n14. \n```\n{\n  \"dist:modules\": \"babel ./src --out-dir ./dist-modules\",\n  \"gh-pages\": \"webpack\",\n  \"gh-pages:deploy\": \"gh-pages -d gh-pages\",\n  \"prepublish\": \"npm run dist:modules\",\n  \"postpublish\": \"npm run gh-pages && npm run gh-pages:deploy\"\n  }\n  ```\n\n在上图中，当执行npm run publish时，会找prepublish，运行npm run dist ： modules，也就是会去执行babel编译。","source":"_posts/npm相关.md","raw":"---\ntitle: npm相关知识\ndate: 2017-03-01 19:22:20\ntags: \n- js | 框架 | 打包工具\ncategories:\n- 基础知识\n---\n\n#### 1. 简介：    \n  含义一：node的开放式模块登记和管理系统\n  含义二：node默认的模块管理器，是一个命令行下的软件，用来安装和管理node模块。\n         不需要单独安装，安装node的时候会连带一起安装，但可能不是最新版本，可以使用npm install npm@latest -g更新到最新版本。\n\n#### 2.   npm init \n    --初始化生成一个新的package.json文件。可以加参数 -y 或者 -f 表示跳过向用户提问阶段，直接生成一个新的package.json文件。\n#### 3.   npm set  xx -- 设置环境变量\n#### 4.   npm config xx --- 设置安装目录以及安装的版本信息等\n#### 5.   npm info xx -- 查看每个模块具体信息\n#### 6.   npm search 搜索词 -- 搜索npm 仓库，后面的搜索词可以是字符串也可以是正则表达式\n#### 7.   npm list -- 以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\n#### 8.   npm install --  \n    * install后可以是package name，也可以是github代码库地址；\n    * 全局安装 sudo npm install -g （或-global）<package name>；\n    * 全局--安装到系统目录中，各个项目都可以调用；本地安装--将一个模块下载到当前项目的node_modules子目录，只有在项目目录中才能调用；\n    * 安装总是会先去检查node_modules中是否已存在指定模块，如果存在，即使目前仓库里有最新版本，也不会再安装，可以加上参数 -- force强制重新安装\n    * 安装不同版本 在模块名后加上 @版本号（默认安装最新版本）\n    * 参数 --save-exact，会在package.json文件中指定安装模块的确切版本\n    * -save：模块名将被添加到dependencies，简化为-S\n    * -save-dev：模块名将被添加到devDependencies，可以简化为参数-D\n#### 9. 避免系统权限：默认安装在系统目录下（/usr/local/lib）,普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件.npmrc，然后在文件中将prefix变量定义到主目录下： prefix = /home/yourusername/npm，然后在主目录下新建npm子目录：mkdir ~/npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在.bash_profile文件（或者.bashrc文件）中加入PATH变量： export PATH = ~/npm/bin:$PATH.\n#### 10. npm update，npm uninstall --更新和卸载\n#### 11. npm run-- 执行脚本，在package.json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm run lint表示执行eslint，npm run test命令行则表示执行mocha test/ 。      \n    *   npm如果不加参数直接运行，会列出package.json中所有可执行的脚本命令。\n    *   npm run 会创建一个shell，执行指定的命令，并临时将node_modules/.bin加入PATH变量，这意味着本地模块可以直接运行。\n    * 例如npm i eslint --save-dev会产生两个结果：首先eslint会被安装到当前目录的node_modules子目录，其次，node_modules/.bin目录会生成一个符号链接node_modules/.bin/eslint，指向eslint的可执行脚本，然后就可以在package.json的script属性里边，不带路径的引用eslint这个脚本。然后在执行npm run lint时就会自动执行./node_modules/.bin/eslint . \n    * 还可以自己添加参数\n12. \n```\n\"scripts\": {\n    \"lint\": \"eslint .\",\n    \"test\": \"mocha test/\"\n  }\n```\n13. pre-和post脚本： npm run 为每一条命令都提供了两个pre-和post-两个钩子，也就是说例如npm run lint执行时，npm会先查看有没有定义pre-和post-，如果有则会先执行 npm run prelint  然后执行npm run lint ，最后是npm run postlint。\n14. \n```\n{\n  \"dist:modules\": \"babel ./src --out-dir ./dist-modules\",\n  \"gh-pages\": \"webpack\",\n  \"gh-pages:deploy\": \"gh-pages -d gh-pages\",\n  \"prepublish\": \"npm run dist:modules\",\n  \"postpublish\": \"npm run gh-pages && npm run gh-pages:deploy\"\n  }\n  ```\n\n在上图中，当执行npm run publish时，会找prepublish，运行npm run dist ： modules，也就是会去执行babel编译。","slug":"npm相关","published":1,"updated":"2023-05-30T03:52:46.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41o000ojza55xv82mt7","content":"<h4 id=\"1-简介：\"><a href=\"#1-简介：\" class=\"headerlink\" title=\"1. 简介：\"></a>1. 简介：</h4><p>  含义一：node的开放式模块登记和管理系统<br>  含义二：node默认的模块管理器，是一个命令行下的软件，用来安装和管理node模块。<br>         不需要单独安装，安装node的时候会连带一起安装，但可能不是最新版本，可以使用npm install npm@latest -g更新到最新版本。</p>\n<h4 id=\"2-npm-init\"><a href=\"#2-npm-init\" class=\"headerlink\" title=\"2.   npm init\"></a>2.   npm init</h4><pre><code>--初始化生成一个新的package.json文件。可以加参数 -y 或者 -f 表示跳过向用户提问阶段，直接生成一个新的package.json文件。\n</code></pre>\n<h4 id=\"3-npm-set-xx-–-设置环境变量\"><a href=\"#3-npm-set-xx-–-设置环境变量\" class=\"headerlink\" title=\"3.   npm set  xx – 设置环境变量\"></a>3.   npm set  xx – 设置环境变量</h4><h4 id=\"4-npm-config-xx-—-设置安装目录以及安装的版本信息等\"><a href=\"#4-npm-config-xx-—-设置安装目录以及安装的版本信息等\" class=\"headerlink\" title=\"4.   npm config xx — 设置安装目录以及安装的版本信息等\"></a>4.   npm config xx — 设置安装目录以及安装的版本信息等</h4><h4 id=\"5-npm-info-xx-–-查看每个模块具体信息\"><a href=\"#5-npm-info-xx-–-查看每个模块具体信息\" class=\"headerlink\" title=\"5.   npm info xx – 查看每个模块具体信息\"></a>5.   npm info xx – 查看每个模块具体信息</h4><h4 id=\"6-npm-search-搜索词-–-搜索npm-仓库，后面的搜索词可以是字符串也可以是正则表达式\"><a href=\"#6-npm-search-搜索词-–-搜索npm-仓库，后面的搜索词可以是字符串也可以是正则表达式\" class=\"headerlink\" title=\"6.   npm search 搜索词 – 搜索npm 仓库，后面的搜索词可以是字符串也可以是正则表达式\"></a>6.   npm search 搜索词 – 搜索npm 仓库，后面的搜索词可以是字符串也可以是正则表达式</h4><h4 id=\"7-npm-list-–-以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\"><a href=\"#7-npm-list-–-以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\" class=\"headerlink\" title=\"7.   npm list – 以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\"></a>7.   npm list – 以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）</h4><h4 id=\"8-npm-install-–\"><a href=\"#8-npm-install-–\" class=\"headerlink\" title=\"8.   npm install –\"></a>8.   npm install –</h4><pre><code>* install后可以是package name，也可以是github代码库地址；\n* 全局安装 sudo npm install -g （或-global）&lt;package name&gt;；\n* 全局--安装到系统目录中，各个项目都可以调用；本地安装--将一个模块下载到当前项目的node_modules子目录，只有在项目目录中才能调用；\n* 安装总是会先去检查node_modules中是否已存在指定模块，如果存在，即使目前仓库里有最新版本，也不会再安装，可以加上参数 -- force强制重新安装\n* 安装不同版本 在模块名后加上 @版本号（默认安装最新版本）\n* 参数 --save-exact，会在package.json文件中指定安装模块的确切版本\n* -save：模块名将被添加到dependencies，简化为-S\n* -save-dev：模块名将被添加到devDependencies，可以简化为参数-D\n</code></pre>\n<h4 id=\"9-避免系统权限：默认安装在系统目录下（-x2F-usr-x2F-local-x2F-lib）-普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件-npmrc，然后在文件中将prefix变量定义到主目录下：-prefix-x3D-x2F-home-x2F-yourusername-x2F-npm，然后在主目录下新建npm子目录：mkdir-x2F-npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在-bash-profile文件（或者-bashrc文件）中加入PATH变量：-export-PATH-x3D-x2F-npm-x2F-bin-PATH\"><a href=\"#9-避免系统权限：默认安装在系统目录下（-x2F-usr-x2F-local-x2F-lib）-普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件-npmrc，然后在文件中将prefix变量定义到主目录下：-prefix-x3D-x2F-home-x2F-yourusername-x2F-npm，然后在主目录下新建npm子目录：mkdir-x2F-npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在-bash-profile文件（或者-bashrc文件）中加入PATH变量：-export-PATH-x3D-x2F-npm-x2F-bin-PATH\" class=\"headerlink\" title=\"9. 避免系统权限：默认安装在系统目录下（&#x2F;usr&#x2F;local&#x2F;lib）,普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件.npmrc，然后在文件中将prefix变量定义到主目录下： prefix &#x3D; &#x2F;home&#x2F;yourusername&#x2F;npm，然后在主目录下新建npm子目录：mkdir ~&#x2F;npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在.bash_profile文件（或者.bashrc文件）中加入PATH变量： export PATH &#x3D; ~&#x2F;npm&#x2F;bin:$PATH.\"></a>9. 避免系统权限：默认安装在系统目录下（&#x2F;usr&#x2F;local&#x2F;lib）,普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件.npmrc，然后在文件中将prefix变量定义到主目录下： prefix &#x3D; &#x2F;home&#x2F;yourusername&#x2F;npm，然后在主目录下新建npm子目录：mkdir ~&#x2F;npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在.bash_profile文件（或者.bashrc文件）中加入PATH变量： export PATH &#x3D; ~&#x2F;npm&#x2F;bin:$PATH.</h4><h4 id=\"10-npm-update，npm-uninstall-–更新和卸载\"><a href=\"#10-npm-update，npm-uninstall-–更新和卸载\" class=\"headerlink\" title=\"10. npm update，npm uninstall –更新和卸载\"></a>10. npm update，npm uninstall –更新和卸载</h4><h4 id=\"11-npm-run–-执行脚本，在package-json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm-run-lint表示执行eslint，npm-run-test命令行则表示执行mocha-test-x2F-。\"><a href=\"#11-npm-run–-执行脚本，在package-json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm-run-lint表示执行eslint，npm-run-test命令行则表示执行mocha-test-x2F-。\" class=\"headerlink\" title=\"11. npm run– 执行脚本，在package.json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm run lint表示执行eslint，npm run test命令行则表示执行mocha test&#x2F; 。\"></a>11. npm run– 执行脚本，在package.json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm run lint表示执行eslint，npm run test命令行则表示执行mocha test&#x2F; 。</h4><pre><code>*   npm如果不加参数直接运行，会列出package.json中所有可执行的脚本命令。\n*   npm run 会创建一个shell，执行指定的命令，并临时将node_modules/.bin加入PATH变量，这意味着本地模块可以直接运行。\n* 例如npm i eslint --save-dev会产生两个结果：首先eslint会被安装到当前目录的node_modules子目录，其次，node_modules/.bin目录会生成一个符号链接node_modules/.bin/eslint，指向eslint的可执行脚本，然后就可以在package.json的script属性里边，不带路径的引用eslint这个脚本。然后在执行npm run lint时就会自动执行./node_modules/.bin/eslint . \n* 还可以自己添加参数\n</code></pre>\n<p>12. </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;lint&quot;: &quot;eslint .&quot;,</span><br><span class=\"line\">    &quot;test&quot;: &quot;mocha test/&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>pre-和post脚本： npm run 为每一条命令都提供了两个pre-和post-两个钩子，也就是说例如npm run lint执行时，npm会先查看有没有定义pre-和post-，如果有则会先执行 npm run prelint  然后执行npm run lint ，最后是npm run postlint。</li>\n<li><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;dist:modules&quot;: &quot;babel ./src --out-dir ./dist-modules&quot;,</span><br><span class=\"line\">  &quot;gh-pages&quot;: &quot;webpack&quot;,</span><br><span class=\"line\">  &quot;gh-pages:deploy&quot;: &quot;gh-pages -d gh-pages&quot;,</span><br><span class=\"line\">  &quot;prepublish&quot;: &quot;npm run dist:modules&quot;,</span><br><span class=\"line\">  &quot;postpublish&quot;: &quot;npm run gh-pages &amp;&amp; npm run gh-pages:deploy&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>在上图中，当执行npm run publish时，会找prepublish，运行npm run dist ： modules，也就是会去执行babel编译。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-简介：\"><a href=\"#1-简介：\" class=\"headerlink\" title=\"1. 简介：\"></a>1. 简介：</h4><p>  含义一：node的开放式模块登记和管理系统<br>  含义二：node默认的模块管理器，是一个命令行下的软件，用来安装和管理node模块。<br>         不需要单独安装，安装node的时候会连带一起安装，但可能不是最新版本，可以使用npm install npm@latest -g更新到最新版本。</p>\n<h4 id=\"2-npm-init\"><a href=\"#2-npm-init\" class=\"headerlink\" title=\"2.   npm init\"></a>2.   npm init</h4><pre><code>--初始化生成一个新的package.json文件。可以加参数 -y 或者 -f 表示跳过向用户提问阶段，直接生成一个新的package.json文件。\n</code></pre>\n<h4 id=\"3-npm-set-xx-–-设置环境变量\"><a href=\"#3-npm-set-xx-–-设置环境变量\" class=\"headerlink\" title=\"3.   npm set  xx – 设置环境变量\"></a>3.   npm set  xx – 设置环境变量</h4><h4 id=\"4-npm-config-xx-—-设置安装目录以及安装的版本信息等\"><a href=\"#4-npm-config-xx-—-设置安装目录以及安装的版本信息等\" class=\"headerlink\" title=\"4.   npm config xx — 设置安装目录以及安装的版本信息等\"></a>4.   npm config xx — 设置安装目录以及安装的版本信息等</h4><h4 id=\"5-npm-info-xx-–-查看每个模块具体信息\"><a href=\"#5-npm-info-xx-–-查看每个模块具体信息\" class=\"headerlink\" title=\"5.   npm info xx – 查看每个模块具体信息\"></a>5.   npm info xx – 查看每个模块具体信息</h4><h4 id=\"6-npm-search-搜索词-–-搜索npm-仓库，后面的搜索词可以是字符串也可以是正则表达式\"><a href=\"#6-npm-search-搜索词-–-搜索npm-仓库，后面的搜索词可以是字符串也可以是正则表达式\" class=\"headerlink\" title=\"6.   npm search 搜索词 – 搜索npm 仓库，后面的搜索词可以是字符串也可以是正则表达式\"></a>6.   npm search 搜索词 – 搜索npm 仓库，后面的搜索词可以是字符串也可以是正则表达式</h4><h4 id=\"7-npm-list-–-以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\"><a href=\"#7-npm-list-–-以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\" class=\"headerlink\" title=\"7.   npm list – 以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）\"></a>7.   npm list – 以树形结构列出当前项目安装的所有模块，以及它们依赖的模块。参数为单个模块名称或者global（全局安装的）</h4><h4 id=\"8-npm-install-–\"><a href=\"#8-npm-install-–\" class=\"headerlink\" title=\"8.   npm install –\"></a>8.   npm install –</h4><pre><code>* install后可以是package name，也可以是github代码库地址；\n* 全局安装 sudo npm install -g （或-global）&lt;package name&gt;；\n* 全局--安装到系统目录中，各个项目都可以调用；本地安装--将一个模块下载到当前项目的node_modules子目录，只有在项目目录中才能调用；\n* 安装总是会先去检查node_modules中是否已存在指定模块，如果存在，即使目前仓库里有最新版本，也不会再安装，可以加上参数 -- force强制重新安装\n* 安装不同版本 在模块名后加上 @版本号（默认安装最新版本）\n* 参数 --save-exact，会在package.json文件中指定安装模块的确切版本\n* -save：模块名将被添加到dependencies，简化为-S\n* -save-dev：模块名将被添加到devDependencies，可以简化为参数-D\n</code></pre>\n<h4 id=\"9-避免系统权限：默认安装在系统目录下（-x2F-usr-x2F-local-x2F-lib）-普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件-npmrc，然后在文件中将prefix变量定义到主目录下：-prefix-x3D-x2F-home-x2F-yourusername-x2F-npm，然后在主目录下新建npm子目录：mkdir-x2F-npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在-bash-profile文件（或者-bashrc文件）中加入PATH变量：-export-PATH-x3D-x2F-npm-x2F-bin-PATH\"><a href=\"#9-避免系统权限：默认安装在系统目录下（-x2F-usr-x2F-local-x2F-lib）-普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件-npmrc，然后在文件中将prefix变量定义到主目录下：-prefix-x3D-x2F-home-x2F-yourusername-x2F-npm，然后在主目录下新建npm子目录：mkdir-x2F-npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在-bash-profile文件（或者-bashrc文件）中加入PATH变量：-export-PATH-x3D-x2F-npm-x2F-bin-PATH\" class=\"headerlink\" title=\"9. 避免系统权限：默认安装在系统目录下（&#x2F;usr&#x2F;local&#x2F;lib）,普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件.npmrc，然后在文件中将prefix变量定义到主目录下： prefix &#x3D; &#x2F;home&#x2F;yourusername&#x2F;npm，然后在主目录下新建npm子目录：mkdir ~&#x2F;npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在.bash_profile文件（或者.bashrc文件）中加入PATH变量： export PATH &#x3D; ~&#x2F;npm&#x2F;bin:$PATH.\"></a>9. 避免系统权限：默认安装在系统目录下（&#x2F;usr&#x2F;local&#x2F;lib）,普通用户没有权限，需要sudo命令，因此为了方便，可以在主目录下新建配置文件.npmrc，然后在文件中将prefix变量定义到主目录下： prefix &#x3D; &#x2F;home&#x2F;yourusername&#x2F;npm，然后在主目录下新建npm子目录：mkdir ~&#x2F;npm。此后，全局安装的模块都会安装在这个子目录中，最后将这个路径在.bash_profile文件（或者.bashrc文件）中加入PATH变量： export PATH &#x3D; ~&#x2F;npm&#x2F;bin:$PATH.</h4><h4 id=\"10-npm-update，npm-uninstall-–更新和卸载\"><a href=\"#10-npm-update，npm-uninstall-–更新和卸载\" class=\"headerlink\" title=\"10. npm update，npm uninstall –更新和卸载\"></a>10. npm update，npm uninstall –更新和卸载</h4><h4 id=\"11-npm-run–-执行脚本，在package-json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm-run-lint表示执行eslint，npm-run-test命令行则表示执行mocha-test-x2F-。\"><a href=\"#11-npm-run–-执行脚本，在package-json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm-run-lint表示执行eslint，npm-run-test命令行则表示执行mocha-test-x2F-。\" class=\"headerlink\" title=\"11. npm run– 执行脚本，在package.json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm run lint表示执行eslint，npm run test命令行则表示执行mocha test&#x2F; 。\"></a>11. npm run– 执行脚本，在package.json的script字段，可以用于指定脚本对应命令，供npm直接调用。如下图中，可以直接使用npm run lint表示执行eslint，npm run test命令行则表示执行mocha test&#x2F; 。</h4><pre><code>*   npm如果不加参数直接运行，会列出package.json中所有可执行的脚本命令。\n*   npm run 会创建一个shell，执行指定的命令，并临时将node_modules/.bin加入PATH变量，这意味着本地模块可以直接运行。\n* 例如npm i eslint --save-dev会产生两个结果：首先eslint会被安装到当前目录的node_modules子目录，其次，node_modules/.bin目录会生成一个符号链接node_modules/.bin/eslint，指向eslint的可执行脚本，然后就可以在package.json的script属性里边，不带路径的引用eslint这个脚本。然后在执行npm run lint时就会自动执行./node_modules/.bin/eslint . \n* 还可以自己添加参数\n</code></pre>\n<p>12. </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;lint&quot;: &quot;eslint .&quot;,</span><br><span class=\"line\">    &quot;test&quot;: &quot;mocha test/&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>pre-和post脚本： npm run 为每一条命令都提供了两个pre-和post-两个钩子，也就是说例如npm run lint执行时，npm会先查看有没有定义pre-和post-，如果有则会先执行 npm run prelint  然后执行npm run lint ，最后是npm run postlint。</li>\n<li><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;dist:modules&quot;: &quot;babel ./src --out-dir ./dist-modules&quot;,</span><br><span class=\"line\">  &quot;gh-pages&quot;: &quot;webpack&quot;,</span><br><span class=\"line\">  &quot;gh-pages:deploy&quot;: &quot;gh-pages -d gh-pages&quot;,</span><br><span class=\"line\">  &quot;prepublish&quot;: &quot;npm run dist:modules&quot;,</span><br><span class=\"line\">  &quot;postpublish&quot;: &quot;npm run gh-pages &amp;&amp; npm run gh-pages:deploy&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>在上图中，当执行npm run publish时，会找prepublish，运行npm run dist ： modules，也就是会去执行babel编译。</p>\n"},{"title":"widget学习笔记","date":"2017-02-06T15:20:09.000Z","_content":"\n### 一、 原理：\n 现在webapp已经全面升级为单页系统，单页系统因为是局部刷新页面，在切页时仍会保留前一个页面的部分状态，比如声明的变量，在某些元素上绑定的事件，导致相关内存不能自动回收，存在内存泄露。\n1. widget组件中，el指向是切片的单位，也就是说，每个widget组件，只作用于该区域：---可以使用事件代理机制，更小范围的寻找dom元素（不用满document选择元素了）； 分配模块管理，便于重用和维护。\n2. widget通过事件代理机制配置的events，充当了controller的角色，在view里触发各式各样的事件时，触发controller的代理方法，在处理方法中，又可以修改view的HTML。\n3. 由于大规模的拼接HTML会造成各种维护以及效率问题，所以引入了BaiduTemplate。\n4. widget中并没有单独分离出model层，而是将所有的逻辑交给controller，灵活性很高。\n\n### 二、 解决方案\n1. 规范widget实现：提供一个windows.Widget基类，windows.widget基类有一个静态方法extend，所有widget均由extend方法继承自该基类，extend方法返回的是widget的一个子类构造函数，基类中统一进行事件委托，在widget中提供统一的事件绑定方式。\n2. 在widget中提供对页面加载各个节点的统一接口，都是页面加载的节点。\n3. 切页面时回收内存： 切页时解除各引用关系，解绑各事件处理函数，使内存能自动回收。\n4. 对外提供destroy接口，各人实现自己widget时可以重写destroy接口，实现切页时要做的操作。\n\n### 三、 API\n1. extend： windows.widget的静态方法，接受一个对象作为参数，返回值是window.Widget的子类，extend接受的参数对象说明： \n2.   参数对象属性以及属性值说明：    \n     1.  el：属性值为字符串，包含该组件的容器，可以是selector---组件所有事情都会委托在该元素上，若不写，会委托在body上，但是建议写，一般是写class或者id值或其他selector带上widget名，避免跟同页面其他widget冲突。如策略监控系统的两个大id为widget-policy-find何widget-policy-alarm，分别对应两个文件夹命名为policyFind和policyAlarm。\n     2.  init：属性值为函数,初始化操作，会再createWidget()方法内部调用，可接受参数，参数即为createWidget()方法接收的参数。\n     3.  events： 属性值为对象，浏览器事件统一绑定，对象的每个属性值是匿名函数或者函数名的字符串，注意：函数名外引号不要去掉，格式如下：\n        ```\n            events： {\n                \"click[data-node='search'\": 'handleForm',\n                \"submit[data-action=create_account]\":'createAccount'\n            }\n        ```\n\n     4 .  channels:属性值为对象\n```\n    channels: {\n        'common.page pagexxx': function () {},\n        'loading show': loadingHandler ---调用方法名\n    }\n```\n     补充说明： loadingHandler是一个方法名，在此处调用\n5.     destroy： 属性值为函数，切页时要做的操作可以在destroy总实现，会在切页时由基类window.Widget自动调用，预留Api，提供了一些方法： \n    1. _bindCustomerEvent: 绑定广播事件：\n        * param {string} eventName--事件触发的频道，如common.page；\n        * param {string} selector 自定义事件名称，如get和show等\n        * param {funciton} method --事件处理函数\n        * _unbindBrowserEvent:解绑浏览器事件\n        * _io--封装ajax请求操作，通过Deferred对象的pass和reject两种状态作为处理ajax成功和失败的操作入口。\n6. extend方法返回值说明： \n    1. 类型： window.Widget的子类，有静态方法widgetcreateWidget，接受一个任意类型的参数，该参数会作为实参传给extend参数对象的init方法。\n    2. 总结：调用window.Widget.extend得到widget构造函数，调该构建函数的createWidget方法实例化widget。\n7. 实例： \n    1. 先依赖： \n        ```在fengkong的fe_front_qishan中，依赖入口在page下的antispampalt中：所有页面扩展自layout.tpl。{%require name=“id名： 地址”%}；```\n    2. 实例中：\n    ```\n          module.export = Widget.extend （{\n                el: \"#大的id名\";\n                events:{ \"click[data-node=xxx]: \"ssss\"} ;\n                channels: { } ;\n                init: \n                urls: \n           }）\n   ```\n8.     解析： \n    1. 在init中，拿到$el(根据配置中的选择器)；\n    2. 解析DOM，将$el下拥有data-node的元素节点保存在me.$dom下，方便以后引用；\n    3. 如果配置中存在init函数，立即调用，传入```pageName( Widget.extend().createWidget({a:'b',c:'dddd'}) )```，pageName实际为tpl配置的数据；\n    4. 执行事件绑定：检测是否存在events配置项，用jQuery事件代替进行逐个绑定；\n    5. 执行事件总线绑定：检测是否存在channels存在，用listener进行逐个处理；\n    6. 最后绑定事件总线common.page，如果执行到，执行销毁，也就说：如果想要将一个组件的所有事件和事件总线进行解绑，就listener.trigger(' common.page ' , ' pagexxxx ');\n          \n\n### 四、 结合当前策略监控平台绑定部分（一）： \n     前三条为总结现有代码以及查阅相关资料所整理，本条结合实例：\n\n关于widget_data传递数据的过程：其实就是：tpl是一种后端模板，后端会将其处理转换成对应的前端的html相关。\n```\n{%script%}\n    window.widgetData = {%json_encode($widget_data)%};\n    require('./App.es6');\n```\n\n其实就是等于\n\n```\n<!-- require('./App.es6')({%json_encode($widget_data)%}); -->\n```\n分解意思，在require引用es6文件时，将其看作一个函数，后边的( )表示函数立即执行，括号内的参数是解析的$widegt_data，后端在解析时（不管$widget_data）在什么地方，只要碰到了，在解析的时候就能转为前端可以处理的函数，使用最多的 data = $widget_data，也是一个意思，后端会解析$widget_data为对应的格式。\n\n在vue中挂载：\n```\nnew Vue({\n    data: {\n        bus,\n        tplData //--  也就是widget_data，可以像平常一样挂载在window上，也可以挂载在vue的初始化实例时。\n    },\n    router\n}).$mount('.page-main');\n```\n然后在子组件中调用方法： 可以参考下图的调用方法\n\n![](/images/widget.png)\n\n<!-- {% asset_img widget.png widget%} -->\n 说明：尝试后发现此方法不可取，具体原因还会再进一步分析，但发现绑定在window上之后，可以定义为const变量类型，然后在组件中直接访问变量。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/widget学习笔记.md","raw":"---\ntitle: widget学习笔记\ndate: 2017-02-06 23:20:09\ntags: \n- js | 框架 | 打包工具\ncategories:\n- 基础知识\n---\n\n### 一、 原理：\n 现在webapp已经全面升级为单页系统，单页系统因为是局部刷新页面，在切页时仍会保留前一个页面的部分状态，比如声明的变量，在某些元素上绑定的事件，导致相关内存不能自动回收，存在内存泄露。\n1. widget组件中，el指向是切片的单位，也就是说，每个widget组件，只作用于该区域：---可以使用事件代理机制，更小范围的寻找dom元素（不用满document选择元素了）； 分配模块管理，便于重用和维护。\n2. widget通过事件代理机制配置的events，充当了controller的角色，在view里触发各式各样的事件时，触发controller的代理方法，在处理方法中，又可以修改view的HTML。\n3. 由于大规模的拼接HTML会造成各种维护以及效率问题，所以引入了BaiduTemplate。\n4. widget中并没有单独分离出model层，而是将所有的逻辑交给controller，灵活性很高。\n\n### 二、 解决方案\n1. 规范widget实现：提供一个windows.Widget基类，windows.widget基类有一个静态方法extend，所有widget均由extend方法继承自该基类，extend方法返回的是widget的一个子类构造函数，基类中统一进行事件委托，在widget中提供统一的事件绑定方式。\n2. 在widget中提供对页面加载各个节点的统一接口，都是页面加载的节点。\n3. 切页面时回收内存： 切页时解除各引用关系，解绑各事件处理函数，使内存能自动回收。\n4. 对外提供destroy接口，各人实现自己widget时可以重写destroy接口，实现切页时要做的操作。\n\n### 三、 API\n1. extend： windows.widget的静态方法，接受一个对象作为参数，返回值是window.Widget的子类，extend接受的参数对象说明： \n2.   参数对象属性以及属性值说明：    \n     1.  el：属性值为字符串，包含该组件的容器，可以是selector---组件所有事情都会委托在该元素上，若不写，会委托在body上，但是建议写，一般是写class或者id值或其他selector带上widget名，避免跟同页面其他widget冲突。如策略监控系统的两个大id为widget-policy-find何widget-policy-alarm，分别对应两个文件夹命名为policyFind和policyAlarm。\n     2.  init：属性值为函数,初始化操作，会再createWidget()方法内部调用，可接受参数，参数即为createWidget()方法接收的参数。\n     3.  events： 属性值为对象，浏览器事件统一绑定，对象的每个属性值是匿名函数或者函数名的字符串，注意：函数名外引号不要去掉，格式如下：\n        ```\n            events： {\n                \"click[data-node='search'\": 'handleForm',\n                \"submit[data-action=create_account]\":'createAccount'\n            }\n        ```\n\n     4 .  channels:属性值为对象\n```\n    channels: {\n        'common.page pagexxx': function () {},\n        'loading show': loadingHandler ---调用方法名\n    }\n```\n     补充说明： loadingHandler是一个方法名，在此处调用\n5.     destroy： 属性值为函数，切页时要做的操作可以在destroy总实现，会在切页时由基类window.Widget自动调用，预留Api，提供了一些方法： \n    1. _bindCustomerEvent: 绑定广播事件：\n        * param {string} eventName--事件触发的频道，如common.page；\n        * param {string} selector 自定义事件名称，如get和show等\n        * param {funciton} method --事件处理函数\n        * _unbindBrowserEvent:解绑浏览器事件\n        * _io--封装ajax请求操作，通过Deferred对象的pass和reject两种状态作为处理ajax成功和失败的操作入口。\n6. extend方法返回值说明： \n    1. 类型： window.Widget的子类，有静态方法widgetcreateWidget，接受一个任意类型的参数，该参数会作为实参传给extend参数对象的init方法。\n    2. 总结：调用window.Widget.extend得到widget构造函数，调该构建函数的createWidget方法实例化widget。\n7. 实例： \n    1. 先依赖： \n        ```在fengkong的fe_front_qishan中，依赖入口在page下的antispampalt中：所有页面扩展自layout.tpl。{%require name=“id名： 地址”%}；```\n    2. 实例中：\n    ```\n          module.export = Widget.extend （{\n                el: \"#大的id名\";\n                events:{ \"click[data-node=xxx]: \"ssss\"} ;\n                channels: { } ;\n                init: \n                urls: \n           }）\n   ```\n8.     解析： \n    1. 在init中，拿到$el(根据配置中的选择器)；\n    2. 解析DOM，将$el下拥有data-node的元素节点保存在me.$dom下，方便以后引用；\n    3. 如果配置中存在init函数，立即调用，传入```pageName( Widget.extend().createWidget({a:'b',c:'dddd'}) )```，pageName实际为tpl配置的数据；\n    4. 执行事件绑定：检测是否存在events配置项，用jQuery事件代替进行逐个绑定；\n    5. 执行事件总线绑定：检测是否存在channels存在，用listener进行逐个处理；\n    6. 最后绑定事件总线common.page，如果执行到，执行销毁，也就说：如果想要将一个组件的所有事件和事件总线进行解绑，就listener.trigger(' common.page ' , ' pagexxxx ');\n          \n\n### 四、 结合当前策略监控平台绑定部分（一）： \n     前三条为总结现有代码以及查阅相关资料所整理，本条结合实例：\n\n关于widget_data传递数据的过程：其实就是：tpl是一种后端模板，后端会将其处理转换成对应的前端的html相关。\n```\n{%script%}\n    window.widgetData = {%json_encode($widget_data)%};\n    require('./App.es6');\n```\n\n其实就是等于\n\n```\n<!-- require('./App.es6')({%json_encode($widget_data)%}); -->\n```\n分解意思，在require引用es6文件时，将其看作一个函数，后边的( )表示函数立即执行，括号内的参数是解析的$widegt_data，后端在解析时（不管$widget_data）在什么地方，只要碰到了，在解析的时候就能转为前端可以处理的函数，使用最多的 data = $widget_data，也是一个意思，后端会解析$widget_data为对应的格式。\n\n在vue中挂载：\n```\nnew Vue({\n    data: {\n        bus,\n        tplData //--  也就是widget_data，可以像平常一样挂载在window上，也可以挂载在vue的初始化实例时。\n    },\n    router\n}).$mount('.page-main');\n```\n然后在子组件中调用方法： 可以参考下图的调用方法\n\n![](/images/widget.png)\n\n<!-- {% asset_img widget.png widget%} -->\n 说明：尝试后发现此方法不可取，具体原因还会再进一步分析，但发现绑定在window上之后，可以定义为const变量类型，然后在组件中直接访问变量。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"widget学习笔记","published":1,"updated":"2023-05-30T03:52:46.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41p000rjza5bxhk0mp7","content":"<h3 id=\"一、-原理：\"><a href=\"#一、-原理：\" class=\"headerlink\" title=\"一、 原理：\"></a>一、 原理：</h3><p> 现在webapp已经全面升级为单页系统，单页系统因为是局部刷新页面，在切页时仍会保留前一个页面的部分状态，比如声明的变量，在某些元素上绑定的事件，导致相关内存不能自动回收，存在内存泄露。</p>\n<ol>\n<li>widget组件中，el指向是切片的单位，也就是说，每个widget组件，只作用于该区域：—可以使用事件代理机制，更小范围的寻找dom元素（不用满document选择元素了）； 分配模块管理，便于重用和维护。</li>\n<li>widget通过事件代理机制配置的events，充当了controller的角色，在view里触发各式各样的事件时，触发controller的代理方法，在处理方法中，又可以修改view的HTML。</li>\n<li>由于大规模的拼接HTML会造成各种维护以及效率问题，所以引入了BaiduTemplate。</li>\n<li>widget中并没有单独分离出model层，而是将所有的逻辑交给controller，灵活性很高。</li>\n</ol>\n<h3 id=\"二、-解决方案\"><a href=\"#二、-解决方案\" class=\"headerlink\" title=\"二、 解决方案\"></a>二、 解决方案</h3><ol>\n<li>规范widget实现：提供一个windows.Widget基类，windows.widget基类有一个静态方法extend，所有widget均由extend方法继承自该基类，extend方法返回的是widget的一个子类构造函数，基类中统一进行事件委托，在widget中提供统一的事件绑定方式。</li>\n<li>在widget中提供对页面加载各个节点的统一接口，都是页面加载的节点。</li>\n<li>切页面时回收内存： 切页时解除各引用关系，解绑各事件处理函数，使内存能自动回收。</li>\n<li>对外提供destroy接口，各人实现自己widget时可以重写destroy接口，实现切页时要做的操作。</li>\n</ol>\n<h3 id=\"三、-API\"><a href=\"#三、-API\" class=\"headerlink\" title=\"三、 API\"></a>三、 API</h3><ol>\n<li><p>extend： windows.widget的静态方法，接受一个对象作为参数，返回值是window.Widget的子类，extend接受的参数对象说明： </p>\n</li>\n<li><p>参数对象属性以及属性值说明：    </p>\n<ol>\n<li>el：属性值为字符串，包含该组件的容器，可以是selector—组件所有事情都会委托在该元素上，若不写，会委托在body上，但是建议写，一般是写class或者id值或其他selector带上widget名，避免跟同页面其他widget冲突。如策略监控系统的两个大id为widget-policy-find何widget-policy-alarm，分别对应两个文件夹命名为policyFind和policyAlarm。</li>\n<li>init：属性值为函数,初始化操作，会再createWidget()方法内部调用，可接受参数，参数即为createWidget()方法接收的参数。</li>\n<li>events： 属性值为对象，浏览器事件统一绑定，对象的每个属性值是匿名函数或者函数名的字符串，注意：函数名外引号不要去掉，格式如下：   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">events： &#123;</span><br><span class=\"line\">    &quot;click[data-node=&#x27;search&#x27;&quot;: &#x27;handleForm&#x27;,</span><br><span class=\"line\">    &quot;submit[data-action=create_account]&quot;:&#x27;createAccount&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>4 .  channels:属性值为对象</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channels: &#123;</span><br><span class=\"line\">    &#x27;common.page pagexxx&#x27;: function () &#123;&#125;,</span><br><span class=\"line\">    &#x27;loading show&#x27;: loadingHandler ---调用方法名</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code> 补充说明： loadingHandler是一个方法名，在此处调用\n</code></pre>\n<ol start=\"5\">\n<li><pre><code>destroy： 属性值为函数，切页时要做的操作可以在destroy总实现，会在切页时由基类window.Widget自动调用，预留Api，提供了一些方法： \n</code></pre>\n<ol>\n<li>_bindCustomerEvent: 绑定广播事件：<ul>\n<li>param {string} eventName–事件触发的频道，如common.page；</li>\n<li>param {string} selector 自定义事件名称，如get和show等</li>\n<li>param {funciton} method –事件处理函数</li>\n<li>_unbindBrowserEvent:解绑浏览器事件</li>\n<li>_io–封装ajax请求操作，通过Deferred对象的pass和reject两种状态作为处理ajax成功和失败的操作入口。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>extend方法返回值说明： <ol>\n<li>类型： window.Widget的子类，有静态方法widgetcreateWidget，接受一个任意类型的参数，该参数会作为实参传给extend参数对象的init方法。</li>\n<li>总结：调用window.Widget.extend得到widget构造函数，调该构建函数的createWidget方法实例化widget。</li>\n</ol>\n</li>\n<li>实例： <ol>\n<li>先依赖：<br> <code>在fengkong的fe_front_qishan中，依赖入口在page下的antispampalt中：所有页面扩展自layout.tpl。&#123;%require name=“id名： 地址”%&#125;；</code></li>\n<li>实例中： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.export = Widget.extend （&#123;</span><br><span class=\"line\">      el: &quot;#大的id名&quot;;</span><br><span class=\"line\">      events:&#123; &quot;click[data-node=xxx]: &quot;ssss&quot;&#125; ;</span><br><span class=\"line\">      channels: &#123; &#125; ;</span><br><span class=\"line\">      init: </span><br><span class=\"line\">      urls: </span><br><span class=\"line\"> &#125;）</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><pre><code>解析： \n</code></pre>\n<ol>\n<li>在init中，拿到$el(根据配置中的选择器)；</li>\n<li>解析DOM，将$el下拥有data-node的元素节点保存在me.$dom下，方便以后引用；</li>\n<li>如果配置中存在init函数，立即调用，传入<code>pageName( Widget.extend().createWidget(&#123;a:&#39;b&#39;,c:&#39;dddd&#39;&#125;) )</code>，pageName实际为tpl配置的数据；</li>\n<li>执行事件绑定：检测是否存在events配置项，用jQuery事件代替进行逐个绑定；</li>\n<li>执行事件总线绑定：检测是否存在channels存在，用listener进行逐个处理；</li>\n<li>最后绑定事件总线common.page，如果执行到，执行销毁，也就说：如果想要将一个组件的所有事件和事件总线进行解绑，就listener.trigger(‘ common.page ‘ , ‘ pagexxxx ‘);</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"四、-结合当前策略监控平台绑定部分（一）：\"><a href=\"#四、-结合当前策略监控平台绑定部分（一）：\" class=\"headerlink\" title=\"四、 结合当前策略监控平台绑定部分（一）：\"></a>四、 结合当前策略监控平台绑定部分（一）：</h3><pre><code> 前三条为总结现有代码以及查阅相关资料所整理，本条结合实例：\n</code></pre>\n<p>关于widget_data传递数据的过程：其实就是：tpl是一种后端模板，后端会将其处理转换成对应的前端的html相关。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%script%&#125;</span><br><span class=\"line\">    window.widgetData = &#123;%json_encode($widget_data)%&#125;;</span><br><span class=\"line\">    require(&#x27;./App.es6&#x27;);</span><br></pre></td></tr></table></figure>\n\n<p>其实就是等于</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- require(&#x27;./App.es6&#x27;)(&#123;%json_encode($widget_data)%&#125;); --&gt;</span><br></pre></td></tr></table></figure>\n<p>分解意思，在require引用es6文件时，将其看作一个函数，后边的( )表示函数立即执行，括号内的参数是解析的$widegt_data，后端在解析时（不管$widget_data）在什么地方，只要碰到了，在解析的时候就能转为前端可以处理的函数，使用最多的 data &#x3D; $widget_data，也是一个意思，后端会解析$widget_data为对应的格式。</p>\n<p>在vue中挂载：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        bus,</span><br><span class=\"line\">        tplData //--  也就是widget_data，可以像平常一样挂载在window上，也可以挂载在vue的初始化实例时。</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    router</span><br><span class=\"line\">&#125;).$mount(&#x27;.page-main&#x27;);</span><br></pre></td></tr></table></figure>\n<p>然后在子组件中调用方法： 可以参考下图的调用方法</p>\n<p><img src=\"/images/widget.png\"></p>\n<!--  -->\n<p> 说明：尝试后发现此方法不可取，具体原因还会再进一步分析，但发现绑定在window上之后，可以定义为const变量类型，然后在组件中直接访问变量。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、-原理：\"><a href=\"#一、-原理：\" class=\"headerlink\" title=\"一、 原理：\"></a>一、 原理：</h3><p> 现在webapp已经全面升级为单页系统，单页系统因为是局部刷新页面，在切页时仍会保留前一个页面的部分状态，比如声明的变量，在某些元素上绑定的事件，导致相关内存不能自动回收，存在内存泄露。</p>\n<ol>\n<li>widget组件中，el指向是切片的单位，也就是说，每个widget组件，只作用于该区域：—可以使用事件代理机制，更小范围的寻找dom元素（不用满document选择元素了）； 分配模块管理，便于重用和维护。</li>\n<li>widget通过事件代理机制配置的events，充当了controller的角色，在view里触发各式各样的事件时，触发controller的代理方法，在处理方法中，又可以修改view的HTML。</li>\n<li>由于大规模的拼接HTML会造成各种维护以及效率问题，所以引入了BaiduTemplate。</li>\n<li>widget中并没有单独分离出model层，而是将所有的逻辑交给controller，灵活性很高。</li>\n</ol>\n<h3 id=\"二、-解决方案\"><a href=\"#二、-解决方案\" class=\"headerlink\" title=\"二、 解决方案\"></a>二、 解决方案</h3><ol>\n<li>规范widget实现：提供一个windows.Widget基类，windows.widget基类有一个静态方法extend，所有widget均由extend方法继承自该基类，extend方法返回的是widget的一个子类构造函数，基类中统一进行事件委托，在widget中提供统一的事件绑定方式。</li>\n<li>在widget中提供对页面加载各个节点的统一接口，都是页面加载的节点。</li>\n<li>切页面时回收内存： 切页时解除各引用关系，解绑各事件处理函数，使内存能自动回收。</li>\n<li>对外提供destroy接口，各人实现自己widget时可以重写destroy接口，实现切页时要做的操作。</li>\n</ol>\n<h3 id=\"三、-API\"><a href=\"#三、-API\" class=\"headerlink\" title=\"三、 API\"></a>三、 API</h3><ol>\n<li><p>extend： windows.widget的静态方法，接受一个对象作为参数，返回值是window.Widget的子类，extend接受的参数对象说明： </p>\n</li>\n<li><p>参数对象属性以及属性值说明：    </p>\n<ol>\n<li>el：属性值为字符串，包含该组件的容器，可以是selector—组件所有事情都会委托在该元素上，若不写，会委托在body上，但是建议写，一般是写class或者id值或其他selector带上widget名，避免跟同页面其他widget冲突。如策略监控系统的两个大id为widget-policy-find何widget-policy-alarm，分别对应两个文件夹命名为policyFind和policyAlarm。</li>\n<li>init：属性值为函数,初始化操作，会再createWidget()方法内部调用，可接受参数，参数即为createWidget()方法接收的参数。</li>\n<li>events： 属性值为对象，浏览器事件统一绑定，对象的每个属性值是匿名函数或者函数名的字符串，注意：函数名外引号不要去掉，格式如下：   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">events： &#123;</span><br><span class=\"line\">    &quot;click[data-node=&#x27;search&#x27;&quot;: &#x27;handleForm&#x27;,</span><br><span class=\"line\">    &quot;submit[data-action=create_account]&quot;:&#x27;createAccount&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>4 .  channels:属性值为对象</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channels: &#123;</span><br><span class=\"line\">    &#x27;common.page pagexxx&#x27;: function () &#123;&#125;,</span><br><span class=\"line\">    &#x27;loading show&#x27;: loadingHandler ---调用方法名</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code> 补充说明： loadingHandler是一个方法名，在此处调用\n</code></pre>\n<ol start=\"5\">\n<li><pre><code>destroy： 属性值为函数，切页时要做的操作可以在destroy总实现，会在切页时由基类window.Widget自动调用，预留Api，提供了一些方法： \n</code></pre>\n<ol>\n<li>_bindCustomerEvent: 绑定广播事件：<ul>\n<li>param {string} eventName–事件触发的频道，如common.page；</li>\n<li>param {string} selector 自定义事件名称，如get和show等</li>\n<li>param {funciton} method –事件处理函数</li>\n<li>_unbindBrowserEvent:解绑浏览器事件</li>\n<li>_io–封装ajax请求操作，通过Deferred对象的pass和reject两种状态作为处理ajax成功和失败的操作入口。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>extend方法返回值说明： <ol>\n<li>类型： window.Widget的子类，有静态方法widgetcreateWidget，接受一个任意类型的参数，该参数会作为实参传给extend参数对象的init方法。</li>\n<li>总结：调用window.Widget.extend得到widget构造函数，调该构建函数的createWidget方法实例化widget。</li>\n</ol>\n</li>\n<li>实例： <ol>\n<li>先依赖：<br> <code>在fengkong的fe_front_qishan中，依赖入口在page下的antispampalt中：所有页面扩展自layout.tpl。&#123;%require name=“id名： 地址”%&#125;；</code></li>\n<li>实例中： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.export = Widget.extend （&#123;</span><br><span class=\"line\">      el: &quot;#大的id名&quot;;</span><br><span class=\"line\">      events:&#123; &quot;click[data-node=xxx]: &quot;ssss&quot;&#125; ;</span><br><span class=\"line\">      channels: &#123; &#125; ;</span><br><span class=\"line\">      init: </span><br><span class=\"line\">      urls: </span><br><span class=\"line\"> &#125;）</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><pre><code>解析： \n</code></pre>\n<ol>\n<li>在init中，拿到$el(根据配置中的选择器)；</li>\n<li>解析DOM，将$el下拥有data-node的元素节点保存在me.$dom下，方便以后引用；</li>\n<li>如果配置中存在init函数，立即调用，传入<code>pageName( Widget.extend().createWidget(&#123;a:&#39;b&#39;,c:&#39;dddd&#39;&#125;) )</code>，pageName实际为tpl配置的数据；</li>\n<li>执行事件绑定：检测是否存在events配置项，用jQuery事件代替进行逐个绑定；</li>\n<li>执行事件总线绑定：检测是否存在channels存在，用listener进行逐个处理；</li>\n<li>最后绑定事件总线common.page，如果执行到，执行销毁，也就说：如果想要将一个组件的所有事件和事件总线进行解绑，就listener.trigger(‘ common.page ‘ , ‘ pagexxxx ‘);</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"四、-结合当前策略监控平台绑定部分（一）：\"><a href=\"#四、-结合当前策略监控平台绑定部分（一）：\" class=\"headerlink\" title=\"四、 结合当前策略监控平台绑定部分（一）：\"></a>四、 结合当前策略监控平台绑定部分（一）：</h3><pre><code> 前三条为总结现有代码以及查阅相关资料所整理，本条结合实例：\n</code></pre>\n<p>关于widget_data传递数据的过程：其实就是：tpl是一种后端模板，后端会将其处理转换成对应的前端的html相关。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%script%&#125;</span><br><span class=\"line\">    window.widgetData = &#123;%json_encode($widget_data)%&#125;;</span><br><span class=\"line\">    require(&#x27;./App.es6&#x27;);</span><br></pre></td></tr></table></figure>\n\n<p>其实就是等于</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- require(&#x27;./App.es6&#x27;)(&#123;%json_encode($widget_data)%&#125;); --&gt;</span><br></pre></td></tr></table></figure>\n<p>分解意思，在require引用es6文件时，将其看作一个函数，后边的( )表示函数立即执行，括号内的参数是解析的$widegt_data，后端在解析时（不管$widget_data）在什么地方，只要碰到了，在解析的时候就能转为前端可以处理的函数，使用最多的 data &#x3D; $widget_data，也是一个意思，后端会解析$widget_data为对应的格式。</p>\n<p>在vue中挂载：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        bus,</span><br><span class=\"line\">        tplData //--  也就是widget_data，可以像平常一样挂载在window上，也可以挂载在vue的初始化实例时。</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    router</span><br><span class=\"line\">&#125;).$mount(&#x27;.page-main&#x27;);</span><br></pre></td></tr></table></figure>\n<p>然后在子组件中调用方法： 可以参考下图的调用方法</p>\n<p><img src=\"/images/widget.png\"></p>\n<!--  -->\n<p> 说明：尝试后发现此方法不可取，具体原因还会再进一步分析，但发现绑定在window上之后，可以定义为const变量类型，然后在组件中直接访问变量。</p>\n"},{"title":"北京周边游玩之地","date":"2017-02-21T12:10:09.000Z","_content":"关于周边游玩：\n\n1. \n\n北京周边都有哪些好玩的地方？不是只有十三陵和长城！即便是长城也不是只有八达岭长岭！你知道的是哪些呢？呵呵，让贴心的小北带你玩转北京吧，一起来看看北京周边都有哪些秀色可餐的美景。\n延庆县\n\n延庆县早在战国时期就设立了县，名“居庸”。元仁宗年间更名为龙庆州，明永乐年间设隆庆州，明穆宗朱载垕登基后改年号隆庆，由于避讳而改名为延庆州，民国年间改为延庆县。1948年5月19日，解放军解放了延庆县城。延庆县属察哈尔省，1952年改属河北省，1958年10月划归北京市。该县的主要旅游资源有龙庆峡、八达岭长城、康西草原等。\n海淀区\n\n‘海淀区因历史上此地有大片水域而得名。海淀区在春秋战国时期，隶属于燕。随着我国朝代的更迭和建制的变更，海淀地方的隶属也多次发生变化。作为一个地区的兴起，则是与北京城的发展息息相关。清代在这里修建了大规模的园林建筑，圆明园、颐和园一带成为皇家禁地。1860年英法联军火烧圆明园和1900年八国联军入侵北京，致使海淀区两次遭受劫掠。 1949年1月10日，十八区人民政府在海淀镇成立，1954年6月“海淀区”作为行政区划名称，正式在版图上出现。该县的主要旅游资源有凤凰岭、大觉寺、上庄水库等。\n房山区\n\n在金定都后，于大房(防)山建陵寝，后置“万宁县”，再后以奉祀先陵，改“奉先县”。元世祖年间以境内的大房山(也称房山)改奉先县为房山县。1986年，撤销房山县、燕山区，设立房山区，以燕山区和房山县的行政区域为房山区的行政区域。1997年11月17日，国务院批准将房山区人民政府驻地迁至良乡。该县的主要旅游资源有十渡、东湖港、孤山寨等。\n昌平区\n\n昌平区于西汉时在此设昌平县，名称来自汉代的昌平侯。周初属蓟国，后归燕国，西汉始置县，明景泰三年(1425年)迁县治于永安城(现昌平镇)。正德八年(1513年)升为昌平州(辖怀柔、密云、顺义三县)。1913年改州为县，先后属京兆区、河北省。1956年划入北京市，为北京市昌平区。1960年初，改为昌平县。1999年9月16日，经国务院批准，昌平撤县设区。该县的主要旅游资源有望宝川、莽山、十三陵等。\n怀柔区\n\n怀柔区有着悠久的历史，早在1300多年前的唐朝就已经有了\"怀柔\"这个名称，唐太宗贞观年间开始设立怀柔县。而怀柔名字出自《诗经•周颂•时迈》中的\" 怀柔百神\"，意思是招来安抚。公元1368年明朝设置的怀柔县与今天的怀柔区管辖范围基本相同。在古代汉语中，\"怀\"是来的意思，\"柔\"是安抚的意思。\" 怀柔\"这两个字放在一起，就是以德施政，民族团结，交融发展。2001年12月30日，国务院批准怀柔县撤县设区。该县的主要旅游资源有百泉山、青龙峡、红螺寺等。\n密云县\n\n2. \n\n3. \n\n4. \n\n5. \n\n6. \n\n7. \n\n8. \n古时密云县城南15公里处有一高山，终年云雾缭绕，故名密云山(就是现在的河北丰宁县云雾山)。县名来自山名。明洪武元年省檀州入密云县。永乐元年改北平府为顺天府，密云县隶之。雍正六年改密云县直属顺天府北路厅。民国初废顺天府，改称京兆，密云县属京兆；1928年废京兆，改隶河北省；1958年9月28日归北京市所辖。该县的主要旅游资源有黑龙潭、清凉谷、桃源仙谷等。\n平谷区\n\n平谷区因其地形三面环山，中间是平原而得名。自汉高祖十二年便已建立平谷县，是北京区县中最古老的名称之一。平谷县自汉高祖十二年设县以来，历经2000余载，期间，县有撤并，境域多变，然县名一直延续至今。1958年3月，通县专区撤销，平谷县改属河北省唐山专署。同年10月，划入北京市。该县的主要旅游资源有石林峡、玻璃台、金海湖等。\n标门头沟区\n\n9. \n门头沟区原名京西矿区，1958年设区时，因圈门至风口鞍这条沟叫门头沟，故因沟得名。门头沟区历史悠久，从1万年前的“东胡林人”起，门头沟区地处古冀州。周武王十一年设燕、蓟政区，区境属蓟，燕并蓟后，区境属燕。明洪武元年，元大都改称为北平府，后又改为顺天府，宛平县属之。嘉靖三十三年，沿河城地区归属宛平县，至此，区全境属宛平县。 1914年10月，顺天府改为京兆地方，宛平县随属。1948年12月14日门头沟全境解放。到1952年9月前，区境分为两部分：一部分届河北省宛平县辖界，一部分属北京市第16区(曾称门头沟区、第28区、第20区)辖界，包括今龙泉、永定、潭柘寺3镇范围。1952年9月河北省宛平县、北京市第16区并入京西矿区，今门头沟区全境属京西矿区辖界。1958年5月京西矿区调整区划后改称门头沟区。该县的主要旅游资源有灵山、妙峰山、潭柘寺等。","source":"_posts/youwan.md","raw":"---\ntitle: 北京周边游玩之地\ndate: 2017-02-21 20:10:09\ntags: \n- 路上\ncategories:\n- 玩\n---\n关于周边游玩：\n\n1. \n\n北京周边都有哪些好玩的地方？不是只有十三陵和长城！即便是长城也不是只有八达岭长岭！你知道的是哪些呢？呵呵，让贴心的小北带你玩转北京吧，一起来看看北京周边都有哪些秀色可餐的美景。\n延庆县\n\n延庆县早在战国时期就设立了县，名“居庸”。元仁宗年间更名为龙庆州，明永乐年间设隆庆州，明穆宗朱载垕登基后改年号隆庆，由于避讳而改名为延庆州，民国年间改为延庆县。1948年5月19日，解放军解放了延庆县城。延庆县属察哈尔省，1952年改属河北省，1958年10月划归北京市。该县的主要旅游资源有龙庆峡、八达岭长城、康西草原等。\n海淀区\n\n‘海淀区因历史上此地有大片水域而得名。海淀区在春秋战国时期，隶属于燕。随着我国朝代的更迭和建制的变更，海淀地方的隶属也多次发生变化。作为一个地区的兴起，则是与北京城的发展息息相关。清代在这里修建了大规模的园林建筑，圆明园、颐和园一带成为皇家禁地。1860年英法联军火烧圆明园和1900年八国联军入侵北京，致使海淀区两次遭受劫掠。 1949年1月10日，十八区人民政府在海淀镇成立，1954年6月“海淀区”作为行政区划名称，正式在版图上出现。该县的主要旅游资源有凤凰岭、大觉寺、上庄水库等。\n房山区\n\n在金定都后，于大房(防)山建陵寝，后置“万宁县”，再后以奉祀先陵，改“奉先县”。元世祖年间以境内的大房山(也称房山)改奉先县为房山县。1986年，撤销房山县、燕山区，设立房山区，以燕山区和房山县的行政区域为房山区的行政区域。1997年11月17日，国务院批准将房山区人民政府驻地迁至良乡。该县的主要旅游资源有十渡、东湖港、孤山寨等。\n昌平区\n\n昌平区于西汉时在此设昌平县，名称来自汉代的昌平侯。周初属蓟国，后归燕国，西汉始置县，明景泰三年(1425年)迁县治于永安城(现昌平镇)。正德八年(1513年)升为昌平州(辖怀柔、密云、顺义三县)。1913年改州为县，先后属京兆区、河北省。1956年划入北京市，为北京市昌平区。1960年初，改为昌平县。1999年9月16日，经国务院批准，昌平撤县设区。该县的主要旅游资源有望宝川、莽山、十三陵等。\n怀柔区\n\n怀柔区有着悠久的历史，早在1300多年前的唐朝就已经有了\"怀柔\"这个名称，唐太宗贞观年间开始设立怀柔县。而怀柔名字出自《诗经•周颂•时迈》中的\" 怀柔百神\"，意思是招来安抚。公元1368年明朝设置的怀柔县与今天的怀柔区管辖范围基本相同。在古代汉语中，\"怀\"是来的意思，\"柔\"是安抚的意思。\" 怀柔\"这两个字放在一起，就是以德施政，民族团结，交融发展。2001年12月30日，国务院批准怀柔县撤县设区。该县的主要旅游资源有百泉山、青龙峡、红螺寺等。\n密云县\n\n2. \n\n3. \n\n4. \n\n5. \n\n6. \n\n7. \n\n8. \n古时密云县城南15公里处有一高山，终年云雾缭绕，故名密云山(就是现在的河北丰宁县云雾山)。县名来自山名。明洪武元年省檀州入密云县。永乐元年改北平府为顺天府，密云县隶之。雍正六年改密云县直属顺天府北路厅。民国初废顺天府，改称京兆，密云县属京兆；1928年废京兆，改隶河北省；1958年9月28日归北京市所辖。该县的主要旅游资源有黑龙潭、清凉谷、桃源仙谷等。\n平谷区\n\n平谷区因其地形三面环山，中间是平原而得名。自汉高祖十二年便已建立平谷县，是北京区县中最古老的名称之一。平谷县自汉高祖十二年设县以来，历经2000余载，期间，县有撤并，境域多变，然县名一直延续至今。1958年3月，通县专区撤销，平谷县改属河北省唐山专署。同年10月，划入北京市。该县的主要旅游资源有石林峡、玻璃台、金海湖等。\n标门头沟区\n\n9. \n门头沟区原名京西矿区，1958年设区时，因圈门至风口鞍这条沟叫门头沟，故因沟得名。门头沟区历史悠久，从1万年前的“东胡林人”起，门头沟区地处古冀州。周武王十一年设燕、蓟政区，区境属蓟，燕并蓟后，区境属燕。明洪武元年，元大都改称为北平府，后又改为顺天府，宛平县属之。嘉靖三十三年，沿河城地区归属宛平县，至此，区全境属宛平县。 1914年10月，顺天府改为京兆地方，宛平县随属。1948年12月14日门头沟全境解放。到1952年9月前，区境分为两部分：一部分届河北省宛平县辖界，一部分属北京市第16区(曾称门头沟区、第28区、第20区)辖界，包括今龙泉、永定、潭柘寺3镇范围。1952年9月河北省宛平县、北京市第16区并入京西矿区，今门头沟区全境属京西矿区辖界。1958年5月京西矿区调整区划后改称门头沟区。该县的主要旅游资源有灵山、妙峰山、潭柘寺等。","slug":"youwan","published":1,"updated":"2023-05-30T03:52:46.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41q000wjza5gz064qwq","content":"<p>关于周边游玩：</p>\n<p>1. </p>\n<p>北京周边都有哪些好玩的地方？不是只有十三陵和长城！即便是长城也不是只有八达岭长岭！你知道的是哪些呢？呵呵，让贴心的小北带你玩转北京吧，一起来看看北京周边都有哪些秀色可餐的美景。<br>延庆县</p>\n<p>延庆县早在战国时期就设立了县，名“居庸”。元仁宗年间更名为龙庆州，明永乐年间设隆庆州，明穆宗朱载垕登基后改年号隆庆，由于避讳而改名为延庆州，民国年间改为延庆县。1948年5月19日，解放军解放了延庆县城。延庆县属察哈尔省，1952年改属河北省，1958年10月划归北京市。该县的主要旅游资源有龙庆峡、八达岭长城、康西草原等。<br>海淀区</p>\n<p>‘海淀区因历史上此地有大片水域而得名。海淀区在春秋战国时期，隶属于燕。随着我国朝代的更迭和建制的变更，海淀地方的隶属也多次发生变化。作为一个地区的兴起，则是与北京城的发展息息相关。清代在这里修建了大规模的园林建筑，圆明园、颐和园一带成为皇家禁地。1860年英法联军火烧圆明园和1900年八国联军入侵北京，致使海淀区两次遭受劫掠。 1949年1月10日，十八区人民政府在海淀镇成立，1954年6月“海淀区”作为行政区划名称，正式在版图上出现。该县的主要旅游资源有凤凰岭、大觉寺、上庄水库等。<br>房山区</p>\n<p>在金定都后，于大房(防)山建陵寝，后置“万宁县”，再后以奉祀先陵，改“奉先县”。元世祖年间以境内的大房山(也称房山)改奉先县为房山县。1986年，撤销房山县、燕山区，设立房山区，以燕山区和房山县的行政区域为房山区的行政区域。1997年11月17日，国务院批准将房山区人民政府驻地迁至良乡。该县的主要旅游资源有十渡、东湖港、孤山寨等。<br>昌平区</p>\n<p>昌平区于西汉时在此设昌平县，名称来自汉代的昌平侯。周初属蓟国，后归燕国，西汉始置县，明景泰三年(1425年)迁县治于永安城(现昌平镇)。正德八年(1513年)升为昌平州(辖怀柔、密云、顺义三县)。1913年改州为县，先后属京兆区、河北省。1956年划入北京市，为北京市昌平区。1960年初，改为昌平县。1999年9月16日，经国务院批准，昌平撤县设区。该县的主要旅游资源有望宝川、莽山、十三陵等。<br>怀柔区</p>\n<p>怀柔区有着悠久的历史，早在1300多年前的唐朝就已经有了”怀柔”这个名称，唐太宗贞观年间开始设立怀柔县。而怀柔名字出自《诗经•周颂•时迈》中的” 怀柔百神”，意思是招来安抚。公元1368年明朝设置的怀柔县与今天的怀柔区管辖范围基本相同。在古代汉语中，”怀”是来的意思，”柔”是安抚的意思。” 怀柔”这两个字放在一起，就是以德施政，民族团结，交融发展。2001年12月30日，国务院批准怀柔县撤县设区。该县的主要旅游资源有百泉山、青龙峡、红螺寺等。<br>密云县</p>\n<p>2. </p>\n<p>3. </p>\n<p>4. </p>\n<p>5. </p>\n<p>6. </p>\n<p>7. </p>\n<p>8.<br>古时密云县城南15公里处有一高山，终年云雾缭绕，故名密云山(就是现在的河北丰宁县云雾山)。县名来自山名。明洪武元年省檀州入密云县。永乐元年改北平府为顺天府，密云县隶之。雍正六年改密云县直属顺天府北路厅。民国初废顺天府，改称京兆，密云县属京兆；1928年废京兆，改隶河北省；1958年9月28日归北京市所辖。该县的主要旅游资源有黑龙潭、清凉谷、桃源仙谷等。<br>平谷区</p>\n<p>平谷区因其地形三面环山，中间是平原而得名。自汉高祖十二年便已建立平谷县，是北京区县中最古老的名称之一。平谷县自汉高祖十二年设县以来，历经2000余载，期间，县有撤并，境域多变，然县名一直延续至今。1958年3月，通县专区撤销，平谷县改属河北省唐山专署。同年10月，划入北京市。该县的主要旅游资源有石林峡、玻璃台、金海湖等。<br>标门头沟区</p>\n<p>9.<br>门头沟区原名京西矿区，1958年设区时，因圈门至风口鞍这条沟叫门头沟，故因沟得名。门头沟区历史悠久，从1万年前的“东胡林人”起，门头沟区地处古冀州。周武王十一年设燕、蓟政区，区境属蓟，燕并蓟后，区境属燕。明洪武元年，元大都改称为北平府，后又改为顺天府，宛平县属之。嘉靖三十三年，沿河城地区归属宛平县，至此，区全境属宛平县。 1914年10月，顺天府改为京兆地方，宛平县随属。1948年12月14日门头沟全境解放。到1952年9月前，区境分为两部分：一部分届河北省宛平县辖界，一部分属北京市第16区(曾称门头沟区、第28区、第20区)辖界，包括今龙泉、永定、潭柘寺3镇范围。1952年9月河北省宛平县、北京市第16区并入京西矿区，今门头沟区全境属京西矿区辖界。1958年5月京西矿区调整区划后改称门头沟区。该县的主要旅游资源有灵山、妙峰山、潭柘寺等。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>关于周边游玩：</p>\n<p>1. </p>\n<p>北京周边都有哪些好玩的地方？不是只有十三陵和长城！即便是长城也不是只有八达岭长岭！你知道的是哪些呢？呵呵，让贴心的小北带你玩转北京吧，一起来看看北京周边都有哪些秀色可餐的美景。<br>延庆县</p>\n<p>延庆县早在战国时期就设立了县，名“居庸”。元仁宗年间更名为龙庆州，明永乐年间设隆庆州，明穆宗朱载垕登基后改年号隆庆，由于避讳而改名为延庆州，民国年间改为延庆县。1948年5月19日，解放军解放了延庆县城。延庆县属察哈尔省，1952年改属河北省，1958年10月划归北京市。该县的主要旅游资源有龙庆峡、八达岭长城、康西草原等。<br>海淀区</p>\n<p>‘海淀区因历史上此地有大片水域而得名。海淀区在春秋战国时期，隶属于燕。随着我国朝代的更迭和建制的变更，海淀地方的隶属也多次发生变化。作为一个地区的兴起，则是与北京城的发展息息相关。清代在这里修建了大规模的园林建筑，圆明园、颐和园一带成为皇家禁地。1860年英法联军火烧圆明园和1900年八国联军入侵北京，致使海淀区两次遭受劫掠。 1949年1月10日，十八区人民政府在海淀镇成立，1954年6月“海淀区”作为行政区划名称，正式在版图上出现。该县的主要旅游资源有凤凰岭、大觉寺、上庄水库等。<br>房山区</p>\n<p>在金定都后，于大房(防)山建陵寝，后置“万宁县”，再后以奉祀先陵，改“奉先县”。元世祖年间以境内的大房山(也称房山)改奉先县为房山县。1986年，撤销房山县、燕山区，设立房山区，以燕山区和房山县的行政区域为房山区的行政区域。1997年11月17日，国务院批准将房山区人民政府驻地迁至良乡。该县的主要旅游资源有十渡、东湖港、孤山寨等。<br>昌平区</p>\n<p>昌平区于西汉时在此设昌平县，名称来自汉代的昌平侯。周初属蓟国，后归燕国，西汉始置县，明景泰三年(1425年)迁县治于永安城(现昌平镇)。正德八年(1513年)升为昌平州(辖怀柔、密云、顺义三县)。1913年改州为县，先后属京兆区、河北省。1956年划入北京市，为北京市昌平区。1960年初，改为昌平县。1999年9月16日，经国务院批准，昌平撤县设区。该县的主要旅游资源有望宝川、莽山、十三陵等。<br>怀柔区</p>\n<p>怀柔区有着悠久的历史，早在1300多年前的唐朝就已经有了”怀柔”这个名称，唐太宗贞观年间开始设立怀柔县。而怀柔名字出自《诗经•周颂•时迈》中的” 怀柔百神”，意思是招来安抚。公元1368年明朝设置的怀柔县与今天的怀柔区管辖范围基本相同。在古代汉语中，”怀”是来的意思，”柔”是安抚的意思。” 怀柔”这两个字放在一起，就是以德施政，民族团结，交融发展。2001年12月30日，国务院批准怀柔县撤县设区。该县的主要旅游资源有百泉山、青龙峡、红螺寺等。<br>密云县</p>\n<p>2. </p>\n<p>3. </p>\n<p>4. </p>\n<p>5. </p>\n<p>6. </p>\n<p>7. </p>\n<p>8.<br>古时密云县城南15公里处有一高山，终年云雾缭绕，故名密云山(就是现在的河北丰宁县云雾山)。县名来自山名。明洪武元年省檀州入密云县。永乐元年改北平府为顺天府，密云县隶之。雍正六年改密云县直属顺天府北路厅。民国初废顺天府，改称京兆，密云县属京兆；1928年废京兆，改隶河北省；1958年9月28日归北京市所辖。该县的主要旅游资源有黑龙潭、清凉谷、桃源仙谷等。<br>平谷区</p>\n<p>平谷区因其地形三面环山，中间是平原而得名。自汉高祖十二年便已建立平谷县，是北京区县中最古老的名称之一。平谷县自汉高祖十二年设县以来，历经2000余载，期间，县有撤并，境域多变，然县名一直延续至今。1958年3月，通县专区撤销，平谷县改属河北省唐山专署。同年10月，划入北京市。该县的主要旅游资源有石林峡、玻璃台、金海湖等。<br>标门头沟区</p>\n<p>9.<br>门头沟区原名京西矿区，1958年设区时，因圈门至风口鞍这条沟叫门头沟，故因沟得名。门头沟区历史悠久，从1万年前的“东胡林人”起，门头沟区地处古冀州。周武王十一年设燕、蓟政区，区境属蓟，燕并蓟后，区境属燕。明洪武元年，元大都改称为北平府，后又改为顺天府，宛平县属之。嘉靖三十三年，沿河城地区归属宛平县，至此，区全境属宛平县。 1914年10月，顺天府改为京兆地方，宛平县随属。1948年12月14日门头沟全境解放。到1952年9月前，区境分为两部分：一部分届河北省宛平县辖界，一部分属北京市第16区(曾称门头沟区、第28区、第20区)辖界，包括今龙泉、永定、潭柘寺3镇范围。1952年9月河北省宛平县、北京市第16区并入京西矿区，今门头沟区全境属京西矿区辖界。1958年5月京西矿区调整区划后改称门头沟区。该县的主要旅游资源有灵山、妙峰山、潭柘寺等。</p>\n"},{"title":"开源vue项目合集","date":"2018-03-21T07:30:02.000Z","_content":"\n\n\n\n\n\nawesome-github-vue 是由OpenDigg整理并维护的Vue相关开源项目库集合。我们会定期同步OpenDigg上的项目到这里，也欢迎各位提交项目给我们。\n如果收录的项目有错误，可以通过issue反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。\n部分来自转载\n内容\nUI组件\n开发框架\n实用库\n服务端\n辅助工具\n应用实例\nDemo示例\nUI组件\nelement ★10420 - 饿了么出品的Vue2的web UI工具套件\nVux ★7139 - 基于Vue和WeUI的组件库\niview ★5164 - 基于 Vuejs 的开源 UI 组件库\nmint-ui ★5082 - Vue 2的移动UI元素\nKeen-UI ★2483 - 轻量级的基本UI组件合集\nvue-material ★2476 - 通过Vue Material和Vue 2建立精美的app应用\nmuse-ui ★2154 - 三端样式一致的响应式 UI 库\nvuetify ★1941 - 为移动而生的Vue JS 2组件框架\nvonic ★1601 - 快速构建移动端单页应用\neme ★1431 - 优雅的Markdown编辑器\nvue-multiselect ★1265 - Vue.js选择框解决方案\nvue-table ★870 - 简化数据表格\nVueCircleMenu ★793 - 漂亮的vue圆环菜单\nvue-chat ★769 - vuejs和vuex及webpack的聊天示例\neagle.js ★758 - hacker的幻灯片演示框架\nvueAdmin ★749 - 基于vuejs2和element的简单的管理员模板\nradon-ui ★658 - 快速开发产品的Vue组件库\nbootstrap-vue ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件\nvue-waterfall ★639 - Vue.js的瀑布布局组件\nvue-blu ★623 - 帮助你轻松创建web应用\nVue.Draggable ★623 - 实现拖放和视图模型数组同步\nvue-carbon ★621 - 基于 vue 开发MD风格的移动端\nvue-beauty ★616 - 由vue和ant design创建的优美UI组件\nvue-infinite-scroll ★578 - VueJS的无限滚动指令\nvue-awesome-swiper ★577 - vue.js触摸滑动组件\nvue-syntax-highlight ★574 - Sublime Text语法高亮\nvue-calendar ★474 - 日期选择插件\nvue-amap ★404 - 基于Vue 2和高德地图的地图组件\nvue-chartjs ★388 - vue中的Chartjs的封装\nvue-swipe ★388 - VueJS触摸滑块\nvue-echarts ★367 - VueJS的ECharts组件\nvue-datepicker ★354 - 日历和日期选择组件\nGokotta ★332 - 简单的音乐播放器\nmarkcook ★322 - 好看的markdown编辑器\nvue-sortable ★308 - 轻松添加拖拽排序\nvue-google-maps ★293 - 带有双向数据绑定Google地图组件\nvue-quill-editor ★268 - 基于Quill适用于Vue2的富文本编辑器\nvue-progressbar ★266 - vue轻量级进度条\nvue-picture-input ★254 - 移动友好的图片文件输入组件\nvue-infinite-loading ★251 - VueJS的无限滚动插件\nvue-upload-component ★239 - Vuejs文件上传组件\nvue-trend ★235 - 简单优雅的星光线条\nvue-scroller ★233 - Vonic UI的功能性组件\nvue-paginate ★222 - 分页数据的简约VueJS插件\nvue-video-player ★215 - VueJS视频及直播播放器\nVueStar ★214 - 带星星动画的vue点赞按钮\nvue-datetime-picker ★207 - 日期时间选择控件\nvue-core-image-upload ★200 - 轻量级的vue上传插件\nvue-tables-2 ★195 - 显示数据的bootstrap样式网格\nvue-fullcalendar ★190 - 基于vue.js的全日历组件\nvue2-calendar ★187 - 支持lunar和日期事件的日期选择器\nrubik ★183 - 基于Vuejs2的开源 UI 组件库\nvuejs-datepicker ★179 - vue日期选择器组件\nvue-mugen-scroll ★179 - 无限滚动组件\nDataVisualization ★178 - 数据可视化\nmint-loadmore ★176 - VueJS的双向下拉刷新组件\nvue-virtual-scroller ★175 - 带任意数目数据的顺畅的滚动\nvue-html5-editor ★163 - html5所见即所得编辑器\nVueditor ★157 - 所见即所得的编辑器\nvue-slider ★138 - vue 滑动组件\nvue-msgbox ★134 - vuejs的消息框\nvue-slide ★133 - vue轻量级滑动组件\nvue-drag-and-drop-list ★127 - 创建排序列表的Vue指令\nvue-dragula ★126 - 使拖放变得简单\nvue-lazyload-img ★126 - 移动优化的vue图片懒加载插件\nvue-dropzone ★124 - 用于文件上传的Vue组件\nvue-datasource ★121 - 创建VueJS动态表格\nvue-data-tables ★116 - VueJS2数据表格\nvue-carousel-3d ★114 - VueJS的3D轮播组件\nvuwe ★113 - 基于微信WeUI所开发的专用于Vue2的组件库\nvue-swiper ★113 - 易于使用的滑块组件\nvue-progressive-image ★111 - Vue的渐进图像加载插件\nvue-slider-component ★109 - 在vue1和vue2中使用滑块\nvue-charts ★109 - 轻松渲染一个图表\nvue-impression ★104 - 移动Vuejs2 UI元素\nvue-region-picker ★96 - 选择中国的省份市和地区\nvue-instant ★95 - 轻松创建自动提示的自定义搜索控件\nvue-images ★94 - 显示一组图片的lightbox组件\nvue-typer ★92 - 模拟用户输入选择和删除文本的Vue组件\nvue-loading ★92 - 元素中加载block的Vue指令\nvue-dragging ★91 - 使元素可以拖拽\nvue-simplemde ★90 - VueJS的Markdown编辑器组件\nvue-datatable ★89 - 使用Vuejs创建的DataTableView\nvue-ydui ★86 - 基于Vue2的移动端和微信UI\nvue-image-crop-upload ★82 - vue图片剪裁上传组件\nvue2-loading-bar ★82 - 最简单的仿Youtube加载条视图\nvue-tooltip ★80 - 带绑定信息提示的提示工具\nvue-data-grid ★78 - VueJS复杂桌面交互示例\nvue-highcharts ★78 - HighCharts组件\nvue-music-player ★77 - Vuejs写一个音乐播放器\nvue-datepicker ★76 - 漂亮的Vue日期选择器组件\nvue-video ★75 - Vue.js的HTML5视频播放器\nvue-svgicon ★72 - 创建svg图标组件的工具\nvue-baidu-map ★70 - 基于 Vue 2的百度地图组件库\nvue-touch-ripple ★69 - vuejs的触摸ripple组件\nvue-toast-mobile ★68 - VueJS的toast插件\nvue-scrollbar ★64 - 最简单的滚动区域组件\nvue2-timepicker ★63 - 下拉时间选择器\nvue-quill ★61 - vue组件构建quill编辑器\nvue-date-picker ★61 - VueJS日期选择器组件\ncoffeebreak ★61 - 实时编辑CSS组件工具\nvue-float-label ★58 - VueJS浮动标签模式\nvue-google-signin-button ★58 - 导入谷歌登录按钮\nvodal ★57 - 动画的vue模态\nvue-placeholders ★57 - 处理占位符图片和乱码\nvue-social-sharing ★53 - 社交分享组件\nvue2-editor ★53 - HTML编辑器\nawesome-mask ★49 - 拥有独一无二mask的表单\nvue-easy-slider ★49 - Vue 2.x的滑块组件\nvue-tagsinput ★44 - 基于VueJS的标签组件\nvue-img-inputer ★40 - 基于Vue2的图片输入框\nvuejs-paginate ★39 - 分页VueJS组件\nvue-slick ★39 - 实现流畅轮播框的vue组件\ndatepicker ★38 - 基于flatpickr的时间选择组件\nvue-music-master ★38 - vue手机端网页音乐播放器\nvue-fullcalendar ★37 - vue FullCalendar封装\nvue-chart ★37 - 强大的高速的vue图表解析\nwe-vue ★36 - Vue2及weui1开发的组件\nhandsontable ★36 - 网页表格组件\nvue-radial-progress ★35 - Vue.js放射性进度条组件\ncubeex ★35 - 包含一套完整的移动UI\nvue-popup-mixin ★35 - 用于管理弹出框的遮盖层\nvue-material-design ★34 - Vue MD风格组件\nvue-morris ★33 - Vuejs组件封装Morrisjs库\nvue-bootstrap-table ★33 - 可排序可检索的表格\nvue-event-calendar ★32 - 简单小巧的事件日历组件\nvue-form-2 ★30 - 全面的HTML表单管理的解决方案\nvue-image-clip ★29 - 基于vue的图像剪辑组件\nvue-touch-keyboard ★28 - VueJS虚拟键盘组件\nvue-pull-to-refresh ★28 - Vue2的上拉下拉\nvue-side-nav ★28 - 响应式的侧边导航\nvue-ripple ★28 - 制作谷歌MD风格涟漪效果的Vue组件\nmint-indicator ★27 - VueJS移动加载指示器插件\nvue-lazy-background-images ★25 - 懒加载背景组件的Vue组件\nchartjs ★24 - Vue Bulma的chartjs组件\nvue-chartkick ★24 - VueJS一行代码实现优美图表\nvue-scroll ★24 - vue滚动\nvue-area ★23 - 省市区三级联动插件\nvue-ztree ★23 - 用 vue 写的树层级组件\nvue-tabs ★22 - 多tab页轻型框架\nvue-datepicker-simple ★21 - 基于vue的日期选择器\nvue-m-carousel ★21 - vue 移动端轮播组件\nvue-verify-pop ★20 - 带气泡提示的vue校验插件\nvue-waves ★20 - waves的VueJS版本\nvue-city ★15 - 城市选择器\nvue-parallax ★15 - 整洁的视觉效果\nvue-img-loader ★14 - 图片加载UI组件\nvue-smoothscroll ★13 - smoothscroll的VueJS版本\nvue-typewriter ★13 - vue组件类型\nvue-laypage ★12 - 简单的VueJS分页组件\nvue-tree ★12 - vue树视图组件\nvue-ios-alertview ★8 - iOS7+ 风格的alertview服务\nvue-cascading-address ★8 - vue地区选择器\ndd-vue-component ★7 - 订单来了的公共组件库\npaco-ui-vue ★7 - PACOUI的vue组件\nvue-cmap ★6 - Vue China map可视化组件\nvue-button ★4 - Vue按钮组件\n开发框架\nvue.js ★47739 - 流行的轻量高效的前端组件化方案\nvue-admin ★3528 - Vue管理面板框架\nquasar ★1599 - 响应式网站和混合移动应用程序\nelectron-vue ★1454 - Electron及VueJS快速启动样板\nvuepack ★1395 - 现代VueJS启动器\nN3-components ★642 - 快速构建页面和应用\nvue-2.0-boilerplate ★263 - Vue2单页应用样板\nvue-spa-template ★256 - 前后端分离后的单页应用开发\nFramework7-Vue ★233 - VueJS与Framework7结合\nvue-stack-2.0 ★152 - Vue2项目样板\nvue-bulma ★147 - 轻量级高性能MVVM Admin UI框架\nvue-webgulp ★103 - 仿VueJS Vue loader示例\nvue-fullstack ★96 - 实时的用户友好的后台系统\njspangAdmin ★74 - 基于Vue2的后台管理系统\nvue-element-starter ★41 - vue启动页\n实用库\nvuex ★6414 - 专为 Vue.js 应用程序开发的状态管理模式\nvue-validator ★1655 - vue的验证器插件\nvue-loader ★1540 - Vue.js 针对Webpack的组件装载插件\nvue-lazyload ★873 - 用于懒加载的Vue模块\nvuelidate ★851 - 简单轻量级的基于模块的Vue.js验证\nvue-i18n ★754 - VueJS的多语言切换插件\nqingcheng ★684 - qingcheng主题\nvue-desktop ★470 - 创建管理面板网站的UI库\nVue-Socketio ★368 - VueJS的socketio实现\nvue-awesome ★321 - VueJS字体Awesome组件\nvue-head ★306 - head标签的meta信息操作\nvue-meta ★292 - 管理app的meta信息\nmeteor-vue-component ★283 - vue和meteor整合\nvue-axios ★268 - 将axios整合到VueJS的封装\nvue-flatpickr ★204 - 封装Flatpickr的Vue组件\navoriaz ★152 - VueJS测试实用工具库\nvue-timeago ★140 - VueJS的时间前组件\nmeteor-vue ★130 - VueJS和Meteor的桥接\nvue-svg-icon ★116 - vue2的可变彩色svg图标方案\nvue-focus ★111 - 可重用VueJS组件的焦点指令\nvue-animate ★92 - 跨浏览器CSS3动画库\nvue-bootstrap-modal ★88 - vue的Bootstrap样式组件\nvue-framework7 ★84 - 结合VueJS使用的Framework7组件\nvue-scrollTo ★81 - 滚动到元素的VueJS指令\nvuep ★81 - 用实时编辑和预览来渲染Vue组件\nelement-admin ★76 - 支持 vuecli 的 Element UI 的后台模板\nvue-password-strength-meter ★71 - 交互式密码强度计\nvue-online ★71 - reactive的在线和离线组件\nvue-lazy-render ★70 - 用于Vue组件的延迟渲染\nvue-clipboard ★68 - VueJS的剪贴板\nvue-recyclist ★65 - vuejs无限滚动列表\nvue-cordova ★62 - Cordova的VueJS插件\nvue-events ★62 - 简化事件的VueJS插件\nportal-vue ★60 - 在组件外部渲染DOM\nvue-electron ★57 - 将选择的API封装到Vue对象中的插件\ncleave ★56 - 基于cleave.js的Cleave组件\nvue-gesture ★56 - VueJS的手势事件插件\nvue-shortkey ★55 - 应用于Vue.js的Vue-ShortKey 插件\nvue-qart ★53 - 用于qartjs的Vue2指令\nvuemit ★53 - 处理VueJS事件\nvue-router-transition ★53 - 页面过渡插件\nvue-local-storage ★52 - 具有类型支持的Vuejs本地储存插件\nvue-property-decorator ★52 - VueJS和属性Decorator\nvue-websocket ★50 - VueJS的Websocket插件\nhttp-vue-loader ★48 - 从html及js环境加载vue文件\nvuedeux ★44 - 轻量级开源实用用层\nvue-aplayer ★44 - 便于配置的音乐播放器vue2组件\nlazy-vue ★42 - 懒加载图片\nvue-bus ★40 - VueJS的事件总线\nvue-notifications ★36 - 非阻塞通知库\nvue-reactive-storage ★36 - vue插件的Reactive层\nvue-kindergarten ★35 - 将kindergarten集成到VueJS应用\nvuex-i18n ★35 - 定位插件\nvue-ts-loader ★35 - 在Vue装载机检查脚本\nvue-lazy-component ★34 - 懒加载组件或者元素的Vue指令\nv-media-query ★34 - vue中添加用于配合媒体查询的方法\nvue-helmet ★34 - HTML标题管理器\nvoir ★33 - 保持mutation与视图组件的分离\nvue-pagination-2 ★32 - 简单通用的分页组件\nvue-observe-visibility ★32 - 当元素在页面上可见或隐藏时检测\nVue.resize ★30 - 检测HTML调整大小事件的vue指令\nvue-acl ★26 - VueJS访问控制列表插件\nvuex-shared-mutations ★26 - 分享某种Vuex mutations\nvue-drag-zone ★19 - 适用于Vue2的dom拖动组件\nmodal ★18 - Vue Bulma的modal组件\nvue-file-base64 ★18 - 将文件转换为Base64的vue组件\nFamous-Vue ★16 - Famous库的vue组件\nleo-vue-validator ★13 - 异步的表单验证组件\nVue.ImagesLoaded ★13 - 检测图片加载的VueJS指令\nvue-methods-promise ★12 - 使vue方法支持promise\nvue-titlecase ★12 - 用于字符串titlecased的VueJS过滤器\nVue-Easy-Validator ★11 - 简单的表单验证\nvue-zoombox ★10 - 一个高级zoombox\nvue-truncate-filter ★9 - 截断字符串的VueJS过滤器\nvue-input-autosize ★7 - 基于内容自动调整文本输入的大小\nvue-data-validator ★4 - Vuejs2的数据验证插件\nvue-lazyloadImg ★4 - 图片懒加载插件\n服务端\nnuxt.js ★2960 - 用于服务器渲染Vue app的最小化框架\nexpress-vue ★174 - 简单的使用服务器端渲染vue.js\nunvue ★105 - 使用简单的通用VueJS应用\nvue-ssr ★73 - 非常简单的VueJS服务器端渲染模板\nvue-ssr ★62 - 结合Express使用Vue2服务端渲染\nvue-easy-renderer ★29 - Nodejs服务端渲染\n辅助工具\nDejaVue ★580 - Vuejs可视化及压力测试\nvue-play ★477 - 展示Vue组件的最小化框架\nvscode-VueHelper ★198 - 目前vscode最好的vue代码提示插件\nvue-generate-component ★41 - 轻松生成Vue js组件的CLI工具\nvue-multipage-cli ★34 - 简单的多页CLI\nVuejsStarterKit ★27 - vuejs starter套件\n应用实例\nkoel ★7292 - 基于网络的个人音频流媒体服务\npagekit ★4065 - 轻量级的CMS建站系统\nvue-manage-system ★1223 - 后台管理系统解决方案\nvuedo ★1088 - 博客平台\njackblog-vue ★996 - 个人博客系统\nPJ Blog ★768 - 开源博客\nvue-cnode ★661 - 重写vue版cnode社区\nCMS-of-Blog ★442 - 博客内容管理器\nrss-reader ★332 - 简单的rss阅读器\nvue-ghpages-blog ★220 - 依赖GitHub Pages无需本地生成的静态博客\ntomato5 ★116 - 实时的协作工具\nswoole-vue-webim ★106 - Web版的聊天应用\nvue-dashing-js ★70 - nuvo-dashing-js的fork\nfewords ★55 - 功能极其简单的笔记本\nvue-blog ★53 - 使用Vue2.0 和Vuex的vue-blog\nDemo示例\nvue2-elm ★4389 - 重写饿了么webapp\nVue-cnodejs ★2226 - 基于vue重写Cnodejs.org的webapp\nNeteaseCloudWebApp ★1294 - 高仿网易云音乐的webapp\nvue-zhihu-daily ★905 - 知乎日报 with Vuejs\nvue-wechat ★816 - vue.js开发微信app界面\nvue2-demo ★773 - 从零构建vue2 + vue-router + vuex 开发环境\neleme ★671 - 高仿饿了么app商家详情\nvue-demo ★634 - vue简易留言板\nspa-starter-kit ★536 - 单页应用启动套件\nvue-music ★527 - Vue 音乐搜索播放\nmaizuo ★525 - vue/vuex/redux仿卖座网\nvue-Meizi ★449 - vue最新实战项目\ndouban ★409 - 模仿豆瓣前端\nzhihudaily-vue ★395 - 知乎日报web版\nVueDemo_Sell_Eleme ★377 - Vue2高仿饿了么外卖平台\nvue-WeChat ★361 - 基于Vue2高仿微信App的单页应用\nvue-demo-kugou ★359 - vuejs仿写酷狗音乐webapp\nvue-shopping ★350 - 蘑菇街移动端\nvue2.0-taopiaopiao ★287 - vue2.0与express构建淘票票页面\nvue-leancloud-blog ★253 - 一个前后端完全分离的单页应用\nnode-vue-server-webpack ★244 - Node.js+Vue.js+webpack快速开发框架\nmi-by-vue ★240 - VueJS仿小米官网\neasy-vue ★239 - 使用Vue实现简易web\nvue2.x-douban ★234 - Vue2实现简易豆瓣电影webApp\nxyy-vue ★210 - 大学生交流平台\nvue-fis3 ★205 - 流行开源工具集成demo\nvue-demo-maizuo ★195 - 使用Vue2全家桶仿制卖座电影\nvue-axios-github ★195 - 登录拦截登出功能\nvue-163-music ★179 - vue仿网易云音乐客户端版\nvue-adminLte-vue-router ★177 - vue和adminLte整合应用\nvue-zhihudaily ★175 - 知乎日报 Web 版本\ntmdb-app ★159 - TMDbVueJS应用\nZhihu-Daily-Vue.js ★145 - Vuejs单页网页应用\nnotepad ★138 - 本地存储的记事本\ndaily-zhihu ★127 - 基于Vue2的知乎日报单页应用\ngouyan-movie-vue ★122 - 基于vue的在线电影影讯网站\nhello-vue-django ★121 - 使用带有Django的vuejs的样板项目\nvue-express-mongodb ★116 - 简单的前后端分离案例\nx-blog ★109 - 开源的个人blog项目\nvue-cnode ★108 - vue单页应用demo\nvue-mini-shop ★107 - VueJS在线商店\nwebsocket_chat ★101 - 基于vue和websocket的多人在线聊天室\nVdo ★96 - VueJS与MD重构豆瓣\nphotoShare ★94 - 基于图片分享的社交平台\nvueBlog ★87 - 前后端分离博客\nvue-zhihudaily-2.0 ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily\nbeauty ★81 - 豆瓣美女clone\ngenerator-loopback-vue ★80 - 典型前后端分离项目模板\nvue-ruby-china ★74 - VueJS框架搭建的rubychina平台\nvue-koa-demo ★72 - 使用Vue2和Koa1的全栈demo\nZhihu_Daily ★70 - 基于Vue和Nodejs的Web单页应用\nvue2.x-Cnode ★63 - 基于vue全家桶的Cnode社区\nwebApp ★57 - Vue2的移动端webApp音乐播放器\nhoutai ★52 - 基于vue和Element的后台管理系统\nvue-trip ★52 - vue2做的出行webapp\ngithub-explorer ★50 - 寻找最有趣的GitHub库\nlife-app-vue ★49 - 使用vue2完成多功能集合到小webapp\nvue-bushishiren ★47 - 不是诗人应用\nvue-ssr-boilerplate ★47 - 精简版的ofvue-hackernews-2\ndoubanMovie ★41 - 豆瓣电影展示\nvue-cli-multipage-bootstrap ★41 - 将vue官方在线示例整合到组件中\nios7-vue ★40 - 使用vue2.0 vue-router vuex模拟ios7\nvue-quasar-admin-example ★39 - 将Quasar和VueJS应用于SPA项目\ncnode-vue ★39 - 基于vue和vue-router构建的cnodejs web网站SPA\niview2-management-system ★38 - 后台管理系统解决方案简单示例\nFramework7-VueJS ★38 - 使用移动框架的示例\nseeMusic ★36 - 跨平台云音乐播放器\nvue-XiaoMi-Shop ★34 - 高仿小米商城的项目\nvue-cnode ★34 - 用 Vue 做的 CNode 官网\nHyaReader ★34 - 移动友好的阅读器\nvue-music163 ★30 - 音乐VueJS项目\nzhihu-daily ★29 - 轻松查看知乎日报内容\nsls-vuex2-demo ★26 - vuex2商城购物车demo\nvue-cnode ★22 - 使用cNode社区提供的接口\ngank ★21 - gankio资源的阅读应用\nzhihu-daily-vue ★21 - 知乎日报\nvue-cnode-mobile ★21 - 搭建cnode社区\nvue-dropload ★19 - 用以测试下拉加载与简单路由\nTodos_Vuejs ★19 - vuejs2搭建的极简的todolist\nVuejs-SalePlatform ★18 - vuejs搭建的售卖平台demo\nvue-starter ★18 - VueJs项目的简单启动页\nv-notes ★17 - 简单美观的记事本\nvue-h5plus ★15 - 前卫的vue及html5plus跨平台demo\nsimply-calculator-vuejs ★12 - 用VueJS实现简易计算器\nvue-memo ★11 - 用 vue写的记事本应用","source":"_posts/开源vue项目合集.md","raw":"---\ntitle: 开源vue项目合集\ndate: 2018-03-21 15:30:02\ntags: \n- vue\ncategories:\n- vue\n---\n\n\n\n\n\n\nawesome-github-vue 是由OpenDigg整理并维护的Vue相关开源项目库集合。我们会定期同步OpenDigg上的项目到这里，也欢迎各位提交项目给我们。\n如果收录的项目有错误，可以通过issue反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。\n部分来自转载\n内容\nUI组件\n开发框架\n实用库\n服务端\n辅助工具\n应用实例\nDemo示例\nUI组件\nelement ★10420 - 饿了么出品的Vue2的web UI工具套件\nVux ★7139 - 基于Vue和WeUI的组件库\niview ★5164 - 基于 Vuejs 的开源 UI 组件库\nmint-ui ★5082 - Vue 2的移动UI元素\nKeen-UI ★2483 - 轻量级的基本UI组件合集\nvue-material ★2476 - 通过Vue Material和Vue 2建立精美的app应用\nmuse-ui ★2154 - 三端样式一致的响应式 UI 库\nvuetify ★1941 - 为移动而生的Vue JS 2组件框架\nvonic ★1601 - 快速构建移动端单页应用\neme ★1431 - 优雅的Markdown编辑器\nvue-multiselect ★1265 - Vue.js选择框解决方案\nvue-table ★870 - 简化数据表格\nVueCircleMenu ★793 - 漂亮的vue圆环菜单\nvue-chat ★769 - vuejs和vuex及webpack的聊天示例\neagle.js ★758 - hacker的幻灯片演示框架\nvueAdmin ★749 - 基于vuejs2和element的简单的管理员模板\nradon-ui ★658 - 快速开发产品的Vue组件库\nbootstrap-vue ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件\nvue-waterfall ★639 - Vue.js的瀑布布局组件\nvue-blu ★623 - 帮助你轻松创建web应用\nVue.Draggable ★623 - 实现拖放和视图模型数组同步\nvue-carbon ★621 - 基于 vue 开发MD风格的移动端\nvue-beauty ★616 - 由vue和ant design创建的优美UI组件\nvue-infinite-scroll ★578 - VueJS的无限滚动指令\nvue-awesome-swiper ★577 - vue.js触摸滑动组件\nvue-syntax-highlight ★574 - Sublime Text语法高亮\nvue-calendar ★474 - 日期选择插件\nvue-amap ★404 - 基于Vue 2和高德地图的地图组件\nvue-chartjs ★388 - vue中的Chartjs的封装\nvue-swipe ★388 - VueJS触摸滑块\nvue-echarts ★367 - VueJS的ECharts组件\nvue-datepicker ★354 - 日历和日期选择组件\nGokotta ★332 - 简单的音乐播放器\nmarkcook ★322 - 好看的markdown编辑器\nvue-sortable ★308 - 轻松添加拖拽排序\nvue-google-maps ★293 - 带有双向数据绑定Google地图组件\nvue-quill-editor ★268 - 基于Quill适用于Vue2的富文本编辑器\nvue-progressbar ★266 - vue轻量级进度条\nvue-picture-input ★254 - 移动友好的图片文件输入组件\nvue-infinite-loading ★251 - VueJS的无限滚动插件\nvue-upload-component ★239 - Vuejs文件上传组件\nvue-trend ★235 - 简单优雅的星光线条\nvue-scroller ★233 - Vonic UI的功能性组件\nvue-paginate ★222 - 分页数据的简约VueJS插件\nvue-video-player ★215 - VueJS视频及直播播放器\nVueStar ★214 - 带星星动画的vue点赞按钮\nvue-datetime-picker ★207 - 日期时间选择控件\nvue-core-image-upload ★200 - 轻量级的vue上传插件\nvue-tables-2 ★195 - 显示数据的bootstrap样式网格\nvue-fullcalendar ★190 - 基于vue.js的全日历组件\nvue2-calendar ★187 - 支持lunar和日期事件的日期选择器\nrubik ★183 - 基于Vuejs2的开源 UI 组件库\nvuejs-datepicker ★179 - vue日期选择器组件\nvue-mugen-scroll ★179 - 无限滚动组件\nDataVisualization ★178 - 数据可视化\nmint-loadmore ★176 - VueJS的双向下拉刷新组件\nvue-virtual-scroller ★175 - 带任意数目数据的顺畅的滚动\nvue-html5-editor ★163 - html5所见即所得编辑器\nVueditor ★157 - 所见即所得的编辑器\nvue-slider ★138 - vue 滑动组件\nvue-msgbox ★134 - vuejs的消息框\nvue-slide ★133 - vue轻量级滑动组件\nvue-drag-and-drop-list ★127 - 创建排序列表的Vue指令\nvue-dragula ★126 - 使拖放变得简单\nvue-lazyload-img ★126 - 移动优化的vue图片懒加载插件\nvue-dropzone ★124 - 用于文件上传的Vue组件\nvue-datasource ★121 - 创建VueJS动态表格\nvue-data-tables ★116 - VueJS2数据表格\nvue-carousel-3d ★114 - VueJS的3D轮播组件\nvuwe ★113 - 基于微信WeUI所开发的专用于Vue2的组件库\nvue-swiper ★113 - 易于使用的滑块组件\nvue-progressive-image ★111 - Vue的渐进图像加载插件\nvue-slider-component ★109 - 在vue1和vue2中使用滑块\nvue-charts ★109 - 轻松渲染一个图表\nvue-impression ★104 - 移动Vuejs2 UI元素\nvue-region-picker ★96 - 选择中国的省份市和地区\nvue-instant ★95 - 轻松创建自动提示的自定义搜索控件\nvue-images ★94 - 显示一组图片的lightbox组件\nvue-typer ★92 - 模拟用户输入选择和删除文本的Vue组件\nvue-loading ★92 - 元素中加载block的Vue指令\nvue-dragging ★91 - 使元素可以拖拽\nvue-simplemde ★90 - VueJS的Markdown编辑器组件\nvue-datatable ★89 - 使用Vuejs创建的DataTableView\nvue-ydui ★86 - 基于Vue2的移动端和微信UI\nvue-image-crop-upload ★82 - vue图片剪裁上传组件\nvue2-loading-bar ★82 - 最简单的仿Youtube加载条视图\nvue-tooltip ★80 - 带绑定信息提示的提示工具\nvue-data-grid ★78 - VueJS复杂桌面交互示例\nvue-highcharts ★78 - HighCharts组件\nvue-music-player ★77 - Vuejs写一个音乐播放器\nvue-datepicker ★76 - 漂亮的Vue日期选择器组件\nvue-video ★75 - Vue.js的HTML5视频播放器\nvue-svgicon ★72 - 创建svg图标组件的工具\nvue-baidu-map ★70 - 基于 Vue 2的百度地图组件库\nvue-touch-ripple ★69 - vuejs的触摸ripple组件\nvue-toast-mobile ★68 - VueJS的toast插件\nvue-scrollbar ★64 - 最简单的滚动区域组件\nvue2-timepicker ★63 - 下拉时间选择器\nvue-quill ★61 - vue组件构建quill编辑器\nvue-date-picker ★61 - VueJS日期选择器组件\ncoffeebreak ★61 - 实时编辑CSS组件工具\nvue-float-label ★58 - VueJS浮动标签模式\nvue-google-signin-button ★58 - 导入谷歌登录按钮\nvodal ★57 - 动画的vue模态\nvue-placeholders ★57 - 处理占位符图片和乱码\nvue-social-sharing ★53 - 社交分享组件\nvue2-editor ★53 - HTML编辑器\nawesome-mask ★49 - 拥有独一无二mask的表单\nvue-easy-slider ★49 - Vue 2.x的滑块组件\nvue-tagsinput ★44 - 基于VueJS的标签组件\nvue-img-inputer ★40 - 基于Vue2的图片输入框\nvuejs-paginate ★39 - 分页VueJS组件\nvue-slick ★39 - 实现流畅轮播框的vue组件\ndatepicker ★38 - 基于flatpickr的时间选择组件\nvue-music-master ★38 - vue手机端网页音乐播放器\nvue-fullcalendar ★37 - vue FullCalendar封装\nvue-chart ★37 - 强大的高速的vue图表解析\nwe-vue ★36 - Vue2及weui1开发的组件\nhandsontable ★36 - 网页表格组件\nvue-radial-progress ★35 - Vue.js放射性进度条组件\ncubeex ★35 - 包含一套完整的移动UI\nvue-popup-mixin ★35 - 用于管理弹出框的遮盖层\nvue-material-design ★34 - Vue MD风格组件\nvue-morris ★33 - Vuejs组件封装Morrisjs库\nvue-bootstrap-table ★33 - 可排序可检索的表格\nvue-event-calendar ★32 - 简单小巧的事件日历组件\nvue-form-2 ★30 - 全面的HTML表单管理的解决方案\nvue-image-clip ★29 - 基于vue的图像剪辑组件\nvue-touch-keyboard ★28 - VueJS虚拟键盘组件\nvue-pull-to-refresh ★28 - Vue2的上拉下拉\nvue-side-nav ★28 - 响应式的侧边导航\nvue-ripple ★28 - 制作谷歌MD风格涟漪效果的Vue组件\nmint-indicator ★27 - VueJS移动加载指示器插件\nvue-lazy-background-images ★25 - 懒加载背景组件的Vue组件\nchartjs ★24 - Vue Bulma的chartjs组件\nvue-chartkick ★24 - VueJS一行代码实现优美图表\nvue-scroll ★24 - vue滚动\nvue-area ★23 - 省市区三级联动插件\nvue-ztree ★23 - 用 vue 写的树层级组件\nvue-tabs ★22 - 多tab页轻型框架\nvue-datepicker-simple ★21 - 基于vue的日期选择器\nvue-m-carousel ★21 - vue 移动端轮播组件\nvue-verify-pop ★20 - 带气泡提示的vue校验插件\nvue-waves ★20 - waves的VueJS版本\nvue-city ★15 - 城市选择器\nvue-parallax ★15 - 整洁的视觉效果\nvue-img-loader ★14 - 图片加载UI组件\nvue-smoothscroll ★13 - smoothscroll的VueJS版本\nvue-typewriter ★13 - vue组件类型\nvue-laypage ★12 - 简单的VueJS分页组件\nvue-tree ★12 - vue树视图组件\nvue-ios-alertview ★8 - iOS7+ 风格的alertview服务\nvue-cascading-address ★8 - vue地区选择器\ndd-vue-component ★7 - 订单来了的公共组件库\npaco-ui-vue ★7 - PACOUI的vue组件\nvue-cmap ★6 - Vue China map可视化组件\nvue-button ★4 - Vue按钮组件\n开发框架\nvue.js ★47739 - 流行的轻量高效的前端组件化方案\nvue-admin ★3528 - Vue管理面板框架\nquasar ★1599 - 响应式网站和混合移动应用程序\nelectron-vue ★1454 - Electron及VueJS快速启动样板\nvuepack ★1395 - 现代VueJS启动器\nN3-components ★642 - 快速构建页面和应用\nvue-2.0-boilerplate ★263 - Vue2单页应用样板\nvue-spa-template ★256 - 前后端分离后的单页应用开发\nFramework7-Vue ★233 - VueJS与Framework7结合\nvue-stack-2.0 ★152 - Vue2项目样板\nvue-bulma ★147 - 轻量级高性能MVVM Admin UI框架\nvue-webgulp ★103 - 仿VueJS Vue loader示例\nvue-fullstack ★96 - 实时的用户友好的后台系统\njspangAdmin ★74 - 基于Vue2的后台管理系统\nvue-element-starter ★41 - vue启动页\n实用库\nvuex ★6414 - 专为 Vue.js 应用程序开发的状态管理模式\nvue-validator ★1655 - vue的验证器插件\nvue-loader ★1540 - Vue.js 针对Webpack的组件装载插件\nvue-lazyload ★873 - 用于懒加载的Vue模块\nvuelidate ★851 - 简单轻量级的基于模块的Vue.js验证\nvue-i18n ★754 - VueJS的多语言切换插件\nqingcheng ★684 - qingcheng主题\nvue-desktop ★470 - 创建管理面板网站的UI库\nVue-Socketio ★368 - VueJS的socketio实现\nvue-awesome ★321 - VueJS字体Awesome组件\nvue-head ★306 - head标签的meta信息操作\nvue-meta ★292 - 管理app的meta信息\nmeteor-vue-component ★283 - vue和meteor整合\nvue-axios ★268 - 将axios整合到VueJS的封装\nvue-flatpickr ★204 - 封装Flatpickr的Vue组件\navoriaz ★152 - VueJS测试实用工具库\nvue-timeago ★140 - VueJS的时间前组件\nmeteor-vue ★130 - VueJS和Meteor的桥接\nvue-svg-icon ★116 - vue2的可变彩色svg图标方案\nvue-focus ★111 - 可重用VueJS组件的焦点指令\nvue-animate ★92 - 跨浏览器CSS3动画库\nvue-bootstrap-modal ★88 - vue的Bootstrap样式组件\nvue-framework7 ★84 - 结合VueJS使用的Framework7组件\nvue-scrollTo ★81 - 滚动到元素的VueJS指令\nvuep ★81 - 用实时编辑和预览来渲染Vue组件\nelement-admin ★76 - 支持 vuecli 的 Element UI 的后台模板\nvue-password-strength-meter ★71 - 交互式密码强度计\nvue-online ★71 - reactive的在线和离线组件\nvue-lazy-render ★70 - 用于Vue组件的延迟渲染\nvue-clipboard ★68 - VueJS的剪贴板\nvue-recyclist ★65 - vuejs无限滚动列表\nvue-cordova ★62 - Cordova的VueJS插件\nvue-events ★62 - 简化事件的VueJS插件\nportal-vue ★60 - 在组件外部渲染DOM\nvue-electron ★57 - 将选择的API封装到Vue对象中的插件\ncleave ★56 - 基于cleave.js的Cleave组件\nvue-gesture ★56 - VueJS的手势事件插件\nvue-shortkey ★55 - 应用于Vue.js的Vue-ShortKey 插件\nvue-qart ★53 - 用于qartjs的Vue2指令\nvuemit ★53 - 处理VueJS事件\nvue-router-transition ★53 - 页面过渡插件\nvue-local-storage ★52 - 具有类型支持的Vuejs本地储存插件\nvue-property-decorator ★52 - VueJS和属性Decorator\nvue-websocket ★50 - VueJS的Websocket插件\nhttp-vue-loader ★48 - 从html及js环境加载vue文件\nvuedeux ★44 - 轻量级开源实用用层\nvue-aplayer ★44 - 便于配置的音乐播放器vue2组件\nlazy-vue ★42 - 懒加载图片\nvue-bus ★40 - VueJS的事件总线\nvue-notifications ★36 - 非阻塞通知库\nvue-reactive-storage ★36 - vue插件的Reactive层\nvue-kindergarten ★35 - 将kindergarten集成到VueJS应用\nvuex-i18n ★35 - 定位插件\nvue-ts-loader ★35 - 在Vue装载机检查脚本\nvue-lazy-component ★34 - 懒加载组件或者元素的Vue指令\nv-media-query ★34 - vue中添加用于配合媒体查询的方法\nvue-helmet ★34 - HTML标题管理器\nvoir ★33 - 保持mutation与视图组件的分离\nvue-pagination-2 ★32 - 简单通用的分页组件\nvue-observe-visibility ★32 - 当元素在页面上可见或隐藏时检测\nVue.resize ★30 - 检测HTML调整大小事件的vue指令\nvue-acl ★26 - VueJS访问控制列表插件\nvuex-shared-mutations ★26 - 分享某种Vuex mutations\nvue-drag-zone ★19 - 适用于Vue2的dom拖动组件\nmodal ★18 - Vue Bulma的modal组件\nvue-file-base64 ★18 - 将文件转换为Base64的vue组件\nFamous-Vue ★16 - Famous库的vue组件\nleo-vue-validator ★13 - 异步的表单验证组件\nVue.ImagesLoaded ★13 - 检测图片加载的VueJS指令\nvue-methods-promise ★12 - 使vue方法支持promise\nvue-titlecase ★12 - 用于字符串titlecased的VueJS过滤器\nVue-Easy-Validator ★11 - 简单的表单验证\nvue-zoombox ★10 - 一个高级zoombox\nvue-truncate-filter ★9 - 截断字符串的VueJS过滤器\nvue-input-autosize ★7 - 基于内容自动调整文本输入的大小\nvue-data-validator ★4 - Vuejs2的数据验证插件\nvue-lazyloadImg ★4 - 图片懒加载插件\n服务端\nnuxt.js ★2960 - 用于服务器渲染Vue app的最小化框架\nexpress-vue ★174 - 简单的使用服务器端渲染vue.js\nunvue ★105 - 使用简单的通用VueJS应用\nvue-ssr ★73 - 非常简单的VueJS服务器端渲染模板\nvue-ssr ★62 - 结合Express使用Vue2服务端渲染\nvue-easy-renderer ★29 - Nodejs服务端渲染\n辅助工具\nDejaVue ★580 - Vuejs可视化及压力测试\nvue-play ★477 - 展示Vue组件的最小化框架\nvscode-VueHelper ★198 - 目前vscode最好的vue代码提示插件\nvue-generate-component ★41 - 轻松生成Vue js组件的CLI工具\nvue-multipage-cli ★34 - 简单的多页CLI\nVuejsStarterKit ★27 - vuejs starter套件\n应用实例\nkoel ★7292 - 基于网络的个人音频流媒体服务\npagekit ★4065 - 轻量级的CMS建站系统\nvue-manage-system ★1223 - 后台管理系统解决方案\nvuedo ★1088 - 博客平台\njackblog-vue ★996 - 个人博客系统\nPJ Blog ★768 - 开源博客\nvue-cnode ★661 - 重写vue版cnode社区\nCMS-of-Blog ★442 - 博客内容管理器\nrss-reader ★332 - 简单的rss阅读器\nvue-ghpages-blog ★220 - 依赖GitHub Pages无需本地生成的静态博客\ntomato5 ★116 - 实时的协作工具\nswoole-vue-webim ★106 - Web版的聊天应用\nvue-dashing-js ★70 - nuvo-dashing-js的fork\nfewords ★55 - 功能极其简单的笔记本\nvue-blog ★53 - 使用Vue2.0 和Vuex的vue-blog\nDemo示例\nvue2-elm ★4389 - 重写饿了么webapp\nVue-cnodejs ★2226 - 基于vue重写Cnodejs.org的webapp\nNeteaseCloudWebApp ★1294 - 高仿网易云音乐的webapp\nvue-zhihu-daily ★905 - 知乎日报 with Vuejs\nvue-wechat ★816 - vue.js开发微信app界面\nvue2-demo ★773 - 从零构建vue2 + vue-router + vuex 开发环境\neleme ★671 - 高仿饿了么app商家详情\nvue-demo ★634 - vue简易留言板\nspa-starter-kit ★536 - 单页应用启动套件\nvue-music ★527 - Vue 音乐搜索播放\nmaizuo ★525 - vue/vuex/redux仿卖座网\nvue-Meizi ★449 - vue最新实战项目\ndouban ★409 - 模仿豆瓣前端\nzhihudaily-vue ★395 - 知乎日报web版\nVueDemo_Sell_Eleme ★377 - Vue2高仿饿了么外卖平台\nvue-WeChat ★361 - 基于Vue2高仿微信App的单页应用\nvue-demo-kugou ★359 - vuejs仿写酷狗音乐webapp\nvue-shopping ★350 - 蘑菇街移动端\nvue2.0-taopiaopiao ★287 - vue2.0与express构建淘票票页面\nvue-leancloud-blog ★253 - 一个前后端完全分离的单页应用\nnode-vue-server-webpack ★244 - Node.js+Vue.js+webpack快速开发框架\nmi-by-vue ★240 - VueJS仿小米官网\neasy-vue ★239 - 使用Vue实现简易web\nvue2.x-douban ★234 - Vue2实现简易豆瓣电影webApp\nxyy-vue ★210 - 大学生交流平台\nvue-fis3 ★205 - 流行开源工具集成demo\nvue-demo-maizuo ★195 - 使用Vue2全家桶仿制卖座电影\nvue-axios-github ★195 - 登录拦截登出功能\nvue-163-music ★179 - vue仿网易云音乐客户端版\nvue-adminLte-vue-router ★177 - vue和adminLte整合应用\nvue-zhihudaily ★175 - 知乎日报 Web 版本\ntmdb-app ★159 - TMDbVueJS应用\nZhihu-Daily-Vue.js ★145 - Vuejs单页网页应用\nnotepad ★138 - 本地存储的记事本\ndaily-zhihu ★127 - 基于Vue2的知乎日报单页应用\ngouyan-movie-vue ★122 - 基于vue的在线电影影讯网站\nhello-vue-django ★121 - 使用带有Django的vuejs的样板项目\nvue-express-mongodb ★116 - 简单的前后端分离案例\nx-blog ★109 - 开源的个人blog项目\nvue-cnode ★108 - vue单页应用demo\nvue-mini-shop ★107 - VueJS在线商店\nwebsocket_chat ★101 - 基于vue和websocket的多人在线聊天室\nVdo ★96 - VueJS与MD重构豆瓣\nphotoShare ★94 - 基于图片分享的社交平台\nvueBlog ★87 - 前后端分离博客\nvue-zhihudaily-2.0 ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily\nbeauty ★81 - 豆瓣美女clone\ngenerator-loopback-vue ★80 - 典型前后端分离项目模板\nvue-ruby-china ★74 - VueJS框架搭建的rubychina平台\nvue-koa-demo ★72 - 使用Vue2和Koa1的全栈demo\nZhihu_Daily ★70 - 基于Vue和Nodejs的Web单页应用\nvue2.x-Cnode ★63 - 基于vue全家桶的Cnode社区\nwebApp ★57 - Vue2的移动端webApp音乐播放器\nhoutai ★52 - 基于vue和Element的后台管理系统\nvue-trip ★52 - vue2做的出行webapp\ngithub-explorer ★50 - 寻找最有趣的GitHub库\nlife-app-vue ★49 - 使用vue2完成多功能集合到小webapp\nvue-bushishiren ★47 - 不是诗人应用\nvue-ssr-boilerplate ★47 - 精简版的ofvue-hackernews-2\ndoubanMovie ★41 - 豆瓣电影展示\nvue-cli-multipage-bootstrap ★41 - 将vue官方在线示例整合到组件中\nios7-vue ★40 - 使用vue2.0 vue-router vuex模拟ios7\nvue-quasar-admin-example ★39 - 将Quasar和VueJS应用于SPA项目\ncnode-vue ★39 - 基于vue和vue-router构建的cnodejs web网站SPA\niview2-management-system ★38 - 后台管理系统解决方案简单示例\nFramework7-VueJS ★38 - 使用移动框架的示例\nseeMusic ★36 - 跨平台云音乐播放器\nvue-XiaoMi-Shop ★34 - 高仿小米商城的项目\nvue-cnode ★34 - 用 Vue 做的 CNode 官网\nHyaReader ★34 - 移动友好的阅读器\nvue-music163 ★30 - 音乐VueJS项目\nzhihu-daily ★29 - 轻松查看知乎日报内容\nsls-vuex2-demo ★26 - vuex2商城购物车demo\nvue-cnode ★22 - 使用cNode社区提供的接口\ngank ★21 - gankio资源的阅读应用\nzhihu-daily-vue ★21 - 知乎日报\nvue-cnode-mobile ★21 - 搭建cnode社区\nvue-dropload ★19 - 用以测试下拉加载与简单路由\nTodos_Vuejs ★19 - vuejs2搭建的极简的todolist\nVuejs-SalePlatform ★18 - vuejs搭建的售卖平台demo\nvue-starter ★18 - VueJs项目的简单启动页\nv-notes ★17 - 简单美观的记事本\nvue-h5plus ★15 - 前卫的vue及html5plus跨平台demo\nsimply-calculator-vuejs ★12 - 用VueJS实现简易计算器\nvue-memo ★11 - 用 vue写的记事本应用","slug":"开源vue项目合集","published":1,"updated":"2023-05-30T03:52:46.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa41w001ejza51e9f7c8n","content":"<p>awesome-github-vue 是由OpenDigg整理并维护的Vue相关开源项目库集合。我们会定期同步OpenDigg上的项目到这里，也欢迎各位提交项目给我们。<br>如果收录的项目有错误，可以通过issue反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。<br>部分来自转载<br>内容<br>UI组件<br>开发框架<br>实用库<br>服务端<br>辅助工具<br>应用实例<br>Demo示例<br>UI组件<br>element ★10420 - 饿了么出品的Vue2的web UI工具套件<br>Vux ★7139 - 基于Vue和WeUI的组件库<br>iview ★5164 - 基于 Vuejs 的开源 UI 组件库<br>mint-ui ★5082 - Vue 2的移动UI元素<br>Keen-UI ★2483 - 轻量级的基本UI组件合集<br>vue-material ★2476 - 通过Vue Material和Vue 2建立精美的app应用<br>muse-ui ★2154 - 三端样式一致的响应式 UI 库<br>vuetify ★1941 - 为移动而生的Vue JS 2组件框架<br>vonic ★1601 - 快速构建移动端单页应用<br>eme ★1431 - 优雅的Markdown编辑器<br>vue-multiselect ★1265 - Vue.js选择框解决方案<br>vue-table ★870 - 简化数据表格<br>VueCircleMenu ★793 - 漂亮的vue圆环菜单<br>vue-chat ★769 - vuejs和vuex及webpack的聊天示例<br>eagle.js ★758 - hacker的幻灯片演示框架<br>vueAdmin ★749 - 基于vuejs2和element的简单的管理员模板<br>radon-ui ★658 - 快速开发产品的Vue组件库<br>bootstrap-vue ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件<br>vue-waterfall ★639 - Vue.js的瀑布布局组件<br>vue-blu ★623 - 帮助你轻松创建web应用<br>Vue.Draggable ★623 - 实现拖放和视图模型数组同步<br>vue-carbon ★621 - 基于 vue 开发MD风格的移动端<br>vue-beauty ★616 - 由vue和ant design创建的优美UI组件<br>vue-infinite-scroll ★578 - VueJS的无限滚动指令<br>vue-awesome-swiper ★577 - vue.js触摸滑动组件<br>vue-syntax-highlight ★574 - Sublime Text语法高亮<br>vue-calendar ★474 - 日期选择插件<br>vue-amap ★404 - 基于Vue 2和高德地图的地图组件<br>vue-chartjs ★388 - vue中的Chartjs的封装<br>vue-swipe ★388 - VueJS触摸滑块<br>vue-echarts ★367 - VueJS的ECharts组件<br>vue-datepicker ★354 - 日历和日期选择组件<br>Gokotta ★332 - 简单的音乐播放器<br>markcook ★322 - 好看的markdown编辑器<br>vue-sortable ★308 - 轻松添加拖拽排序<br>vue-google-maps ★293 - 带有双向数据绑定Google地图组件<br>vue-quill-editor ★268 - 基于Quill适用于Vue2的富文本编辑器<br>vue-progressbar ★266 - vue轻量级进度条<br>vue-picture-input ★254 - 移动友好的图片文件输入组件<br>vue-infinite-loading ★251 - VueJS的无限滚动插件<br>vue-upload-component ★239 - Vuejs文件上传组件<br>vue-trend ★235 - 简单优雅的星光线条<br>vue-scroller ★233 - Vonic UI的功能性组件<br>vue-paginate ★222 - 分页数据的简约VueJS插件<br>vue-video-player ★215 - VueJS视频及直播播放器<br>VueStar ★214 - 带星星动画的vue点赞按钮<br>vue-datetime-picker ★207 - 日期时间选择控件<br>vue-core-image-upload ★200 - 轻量级的vue上传插件<br>vue-tables-2 ★195 - 显示数据的bootstrap样式网格<br>vue-fullcalendar ★190 - 基于vue.js的全日历组件<br>vue2-calendar ★187 - 支持lunar和日期事件的日期选择器<br>rubik ★183 - 基于Vuejs2的开源 UI 组件库<br>vuejs-datepicker ★179 - vue日期选择器组件<br>vue-mugen-scroll ★179 - 无限滚动组件<br>DataVisualization ★178 - 数据可视化<br>mint-loadmore ★176 - VueJS的双向下拉刷新组件<br>vue-virtual-scroller ★175 - 带任意数目数据的顺畅的滚动<br>vue-html5-editor ★163 - html5所见即所得编辑器<br>Vueditor ★157 - 所见即所得的编辑器<br>vue-slider ★138 - vue 滑动组件<br>vue-msgbox ★134 - vuejs的消息框<br>vue-slide ★133 - vue轻量级滑动组件<br>vue-drag-and-drop-list ★127 - 创建排序列表的Vue指令<br>vue-dragula ★126 - 使拖放变得简单<br>vue-lazyload-img ★126 - 移动优化的vue图片懒加载插件<br>vue-dropzone ★124 - 用于文件上传的Vue组件<br>vue-datasource ★121 - 创建VueJS动态表格<br>vue-data-tables ★116 - VueJS2数据表格<br>vue-carousel-3d ★114 - VueJS的3D轮播组件<br>vuwe ★113 - 基于微信WeUI所开发的专用于Vue2的组件库<br>vue-swiper ★113 - 易于使用的滑块组件<br>vue-progressive-image ★111 - Vue的渐进图像加载插件<br>vue-slider-component ★109 - 在vue1和vue2中使用滑块<br>vue-charts ★109 - 轻松渲染一个图表<br>vue-impression ★104 - 移动Vuejs2 UI元素<br>vue-region-picker ★96 - 选择中国的省份市和地区<br>vue-instant ★95 - 轻松创建自动提示的自定义搜索控件<br>vue-images ★94 - 显示一组图片的lightbox组件<br>vue-typer ★92 - 模拟用户输入选择和删除文本的Vue组件<br>vue-loading ★92 - 元素中加载block的Vue指令<br>vue-dragging ★91 - 使元素可以拖拽<br>vue-simplemde ★90 - VueJS的Markdown编辑器组件<br>vue-datatable ★89 - 使用Vuejs创建的DataTableView<br>vue-ydui ★86 - 基于Vue2的移动端和微信UI<br>vue-image-crop-upload ★82 - vue图片剪裁上传组件<br>vue2-loading-bar ★82 - 最简单的仿Youtube加载条视图<br>vue-tooltip ★80 - 带绑定信息提示的提示工具<br>vue-data-grid ★78 - VueJS复杂桌面交互示例<br>vue-highcharts ★78 - HighCharts组件<br>vue-music-player ★77 - Vuejs写一个音乐播放器<br>vue-datepicker ★76 - 漂亮的Vue日期选择器组件<br>vue-video ★75 - Vue.js的HTML5视频播放器<br>vue-svgicon ★72 - 创建svg图标组件的工具<br>vue-baidu-map ★70 - 基于 Vue 2的百度地图组件库<br>vue-touch-ripple ★69 - vuejs的触摸ripple组件<br>vue-toast-mobile ★68 - VueJS的toast插件<br>vue-scrollbar ★64 - 最简单的滚动区域组件<br>vue2-timepicker ★63 - 下拉时间选择器<br>vue-quill ★61 - vue组件构建quill编辑器<br>vue-date-picker ★61 - VueJS日期选择器组件<br>coffeebreak ★61 - 实时编辑CSS组件工具<br>vue-float-label ★58 - VueJS浮动标签模式<br>vue-google-signin-button ★58 - 导入谷歌登录按钮<br>vodal ★57 - 动画的vue模态<br>vue-placeholders ★57 - 处理占位符图片和乱码<br>vue-social-sharing ★53 - 社交分享组件<br>vue2-editor ★53 - HTML编辑器<br>awesome-mask ★49 - 拥有独一无二mask的表单<br>vue-easy-slider ★49 - Vue 2.x的滑块组件<br>vue-tagsinput ★44 - 基于VueJS的标签组件<br>vue-img-inputer ★40 - 基于Vue2的图片输入框<br>vuejs-paginate ★39 - 分页VueJS组件<br>vue-slick ★39 - 实现流畅轮播框的vue组件<br>datepicker ★38 - 基于flatpickr的时间选择组件<br>vue-music-master ★38 - vue手机端网页音乐播放器<br>vue-fullcalendar ★37 - vue FullCalendar封装<br>vue-chart ★37 - 强大的高速的vue图表解析<br>we-vue ★36 - Vue2及weui1开发的组件<br>handsontable ★36 - 网页表格组件<br>vue-radial-progress ★35 - Vue.js放射性进度条组件<br>cubeex ★35 - 包含一套完整的移动UI<br>vue-popup-mixin ★35 - 用于管理弹出框的遮盖层<br>vue-material-design ★34 - Vue MD风格组件<br>vue-morris ★33 - Vuejs组件封装Morrisjs库<br>vue-bootstrap-table ★33 - 可排序可检索的表格<br>vue-event-calendar ★32 - 简单小巧的事件日历组件<br>vue-form-2 ★30 - 全面的HTML表单管理的解决方案<br>vue-image-clip ★29 - 基于vue的图像剪辑组件<br>vue-touch-keyboard ★28 - VueJS虚拟键盘组件<br>vue-pull-to-refresh ★28 - Vue2的上拉下拉<br>vue-side-nav ★28 - 响应式的侧边导航<br>vue-ripple ★28 - 制作谷歌MD风格涟漪效果的Vue组件<br>mint-indicator ★27 - VueJS移动加载指示器插件<br>vue-lazy-background-images ★25 - 懒加载背景组件的Vue组件<br>chartjs ★24 - Vue Bulma的chartjs组件<br>vue-chartkick ★24 - VueJS一行代码实现优美图表<br>vue-scroll ★24 - vue滚动<br>vue-area ★23 - 省市区三级联动插件<br>vue-ztree ★23 - 用 vue 写的树层级组件<br>vue-tabs ★22 - 多tab页轻型框架<br>vue-datepicker-simple ★21 - 基于vue的日期选择器<br>vue-m-carousel ★21 - vue 移动端轮播组件<br>vue-verify-pop ★20 - 带气泡提示的vue校验插件<br>vue-waves ★20 - waves的VueJS版本<br>vue-city ★15 - 城市选择器<br>vue-parallax ★15 - 整洁的视觉效果<br>vue-img-loader ★14 - 图片加载UI组件<br>vue-smoothscroll ★13 - smoothscroll的VueJS版本<br>vue-typewriter ★13 - vue组件类型<br>vue-laypage ★12 - 简单的VueJS分页组件<br>vue-tree ★12 - vue树视图组件<br>vue-ios-alertview ★8 - iOS7+ 风格的alertview服务<br>vue-cascading-address ★8 - vue地区选择器<br>dd-vue-component ★7 - 订单来了的公共组件库<br>paco-ui-vue ★7 - PACOUI的vue组件<br>vue-cmap ★6 - Vue China map可视化组件<br>vue-button ★4 - Vue按钮组件<br>开发框架<br>vue.js ★47739 - 流行的轻量高效的前端组件化方案<br>vue-admin ★3528 - Vue管理面板框架<br>quasar ★1599 - 响应式网站和混合移动应用程序<br>electron-vue ★1454 - Electron及VueJS快速启动样板<br>vuepack ★1395 - 现代VueJS启动器<br>N3-components ★642 - 快速构建页面和应用<br>vue-2.0-boilerplate ★263 - Vue2单页应用样板<br>vue-spa-template ★256 - 前后端分离后的单页应用开发<br>Framework7-Vue ★233 - VueJS与Framework7结合<br>vue-stack-2.0 ★152 - Vue2项目样板<br>vue-bulma ★147 - 轻量级高性能MVVM Admin UI框架<br>vue-webgulp ★103 - 仿VueJS Vue loader示例<br>vue-fullstack ★96 - 实时的用户友好的后台系统<br>jspangAdmin ★74 - 基于Vue2的后台管理系统<br>vue-element-starter ★41 - vue启动页<br>实用库<br>vuex ★6414 - 专为 Vue.js 应用程序开发的状态管理模式<br>vue-validator ★1655 - vue的验证器插件<br>vue-loader ★1540 - Vue.js 针对Webpack的组件装载插件<br>vue-lazyload ★873 - 用于懒加载的Vue模块<br>vuelidate ★851 - 简单轻量级的基于模块的Vue.js验证<br>vue-i18n ★754 - VueJS的多语言切换插件<br>qingcheng ★684 - qingcheng主题<br>vue-desktop ★470 - 创建管理面板网站的UI库<br>Vue-Socketio ★368 - VueJS的socketio实现<br>vue-awesome ★321 - VueJS字体Awesome组件<br>vue-head ★306 - head标签的meta信息操作<br>vue-meta ★292 - 管理app的meta信息<br>meteor-vue-component ★283 - vue和meteor整合<br>vue-axios ★268 - 将axios整合到VueJS的封装<br>vue-flatpickr ★204 - 封装Flatpickr的Vue组件<br>avoriaz ★152 - VueJS测试实用工具库<br>vue-timeago ★140 - VueJS的时间前组件<br>meteor-vue ★130 - VueJS和Meteor的桥接<br>vue-svg-icon ★116 - vue2的可变彩色svg图标方案<br>vue-focus ★111 - 可重用VueJS组件的焦点指令<br>vue-animate ★92 - 跨浏览器CSS3动画库<br>vue-bootstrap-modal ★88 - vue的Bootstrap样式组件<br>vue-framework7 ★84 - 结合VueJS使用的Framework7组件<br>vue-scrollTo ★81 - 滚动到元素的VueJS指令<br>vuep ★81 - 用实时编辑和预览来渲染Vue组件<br>element-admin ★76 - 支持 vuecli 的 Element UI 的后台模板<br>vue-password-strength-meter ★71 - 交互式密码强度计<br>vue-online ★71 - reactive的在线和离线组件<br>vue-lazy-render ★70 - 用于Vue组件的延迟渲染<br>vue-clipboard ★68 - VueJS的剪贴板<br>vue-recyclist ★65 - vuejs无限滚动列表<br>vue-cordova ★62 - Cordova的VueJS插件<br>vue-events ★62 - 简化事件的VueJS插件<br>portal-vue ★60 - 在组件外部渲染DOM<br>vue-electron ★57 - 将选择的API封装到Vue对象中的插件<br>cleave ★56 - 基于cleave.js的Cleave组件<br>vue-gesture ★56 - VueJS的手势事件插件<br>vue-shortkey ★55 - 应用于Vue.js的Vue-ShortKey 插件<br>vue-qart ★53 - 用于qartjs的Vue2指令<br>vuemit ★53 - 处理VueJS事件<br>vue-router-transition ★53 - 页面过渡插件<br>vue-local-storage ★52 - 具有类型支持的Vuejs本地储存插件<br>vue-property-decorator ★52 - VueJS和属性Decorator<br>vue-websocket ★50 - VueJS的Websocket插件<br>http-vue-loader ★48 - 从html及js环境加载vue文件<br>vuedeux ★44 - 轻量级开源实用用层<br>vue-aplayer ★44 - 便于配置的音乐播放器vue2组件<br>lazy-vue ★42 - 懒加载图片<br>vue-bus ★40 - VueJS的事件总线<br>vue-notifications ★36 - 非阻塞通知库<br>vue-reactive-storage ★36 - vue插件的Reactive层<br>vue-kindergarten ★35 - 将kindergarten集成到VueJS应用<br>vuex-i18n ★35 - 定位插件<br>vue-ts-loader ★35 - 在Vue装载机检查脚本<br>vue-lazy-component ★34 - 懒加载组件或者元素的Vue指令<br>v-media-query ★34 - vue中添加用于配合媒体查询的方法<br>vue-helmet ★34 - HTML标题管理器<br>voir ★33 - 保持mutation与视图组件的分离<br>vue-pagination-2 ★32 - 简单通用的分页组件<br>vue-observe-visibility ★32 - 当元素在页面上可见或隐藏时检测<br>Vue.resize ★30 - 检测HTML调整大小事件的vue指令<br>vue-acl ★26 - VueJS访问控制列表插件<br>vuex-shared-mutations ★26 - 分享某种Vuex mutations<br>vue-drag-zone ★19 - 适用于Vue2的dom拖动组件<br>modal ★18 - Vue Bulma的modal组件<br>vue-file-base64 ★18 - 将文件转换为Base64的vue组件<br>Famous-Vue ★16 - Famous库的vue组件<br>leo-vue-validator ★13 - 异步的表单验证组件<br>Vue.ImagesLoaded ★13 - 检测图片加载的VueJS指令<br>vue-methods-promise ★12 - 使vue方法支持promise<br>vue-titlecase ★12 - 用于字符串titlecased的VueJS过滤器<br>Vue-Easy-Validator ★11 - 简单的表单验证<br>vue-zoombox ★10 - 一个高级zoombox<br>vue-truncate-filter ★9 - 截断字符串的VueJS过滤器<br>vue-input-autosize ★7 - 基于内容自动调整文本输入的大小<br>vue-data-validator ★4 - Vuejs2的数据验证插件<br>vue-lazyloadImg ★4 - 图片懒加载插件<br>服务端<br>nuxt.js ★2960 - 用于服务器渲染Vue app的最小化框架<br>express-vue ★174 - 简单的使用服务器端渲染vue.js<br>unvue ★105 - 使用简单的通用VueJS应用<br>vue-ssr ★73 - 非常简单的VueJS服务器端渲染模板<br>vue-ssr ★62 - 结合Express使用Vue2服务端渲染<br>vue-easy-renderer ★29 - Nodejs服务端渲染<br>辅助工具<br>DejaVue ★580 - Vuejs可视化及压力测试<br>vue-play ★477 - 展示Vue组件的最小化框架<br>vscode-VueHelper ★198 - 目前vscode最好的vue代码提示插件<br>vue-generate-component ★41 - 轻松生成Vue js组件的CLI工具<br>vue-multipage-cli ★34 - 简单的多页CLI<br>VuejsStarterKit ★27 - vuejs starter套件<br>应用实例<br>koel ★7292 - 基于网络的个人音频流媒体服务<br>pagekit ★4065 - 轻量级的CMS建站系统<br>vue-manage-system ★1223 - 后台管理系统解决方案<br>vuedo ★1088 - 博客平台<br>jackblog-vue ★996 - 个人博客系统<br>PJ Blog ★768 - 开源博客<br>vue-cnode ★661 - 重写vue版cnode社区<br>CMS-of-Blog ★442 - 博客内容管理器<br>rss-reader ★332 - 简单的rss阅读器<br>vue-ghpages-blog ★220 - 依赖GitHub Pages无需本地生成的静态博客<br>tomato5 ★116 - 实时的协作工具<br>swoole-vue-webim ★106 - Web版的聊天应用<br>vue-dashing-js ★70 - nuvo-dashing-js的fork<br>fewords ★55 - 功能极其简单的笔记本<br>vue-blog ★53 - 使用Vue2.0 和Vuex的vue-blog<br>Demo示例<br>vue2-elm ★4389 - 重写饿了么webapp<br>Vue-cnodejs ★2226 - 基于vue重写Cnodejs.org的webapp<br>NeteaseCloudWebApp ★1294 - 高仿网易云音乐的webapp<br>vue-zhihu-daily ★905 - 知乎日报 with Vuejs<br>vue-wechat ★816 - vue.js开发微信app界面<br>vue2-demo ★773 - 从零构建vue2 + vue-router + vuex 开发环境<br>eleme ★671 - 高仿饿了么app商家详情<br>vue-demo ★634 - vue简易留言板<br>spa-starter-kit ★536 - 单页应用启动套件<br>vue-music ★527 - Vue 音乐搜索播放<br>maizuo ★525 - vue&#x2F;vuex&#x2F;redux仿卖座网<br>vue-Meizi ★449 - vue最新实战项目<br>douban ★409 - 模仿豆瓣前端<br>zhihudaily-vue ★395 - 知乎日报web版<br>VueDemo_Sell_Eleme ★377 - Vue2高仿饿了么外卖平台<br>vue-WeChat ★361 - 基于Vue2高仿微信App的单页应用<br>vue-demo-kugou ★359 - vuejs仿写酷狗音乐webapp<br>vue-shopping ★350 - 蘑菇街移动端<br>vue2.0-taopiaopiao ★287 - vue2.0与express构建淘票票页面<br>vue-leancloud-blog ★253 - 一个前后端完全分离的单页应用<br>node-vue-server-webpack ★244 - Node.js+Vue.js+webpack快速开发框架<br>mi-by-vue ★240 - VueJS仿小米官网<br>easy-vue ★239 - 使用Vue实现简易web<br>vue2.x-douban ★234 - Vue2实现简易豆瓣电影webApp<br>xyy-vue ★210 - 大学生交流平台<br>vue-fis3 ★205 - 流行开源工具集成demo<br>vue-demo-maizuo ★195 - 使用Vue2全家桶仿制卖座电影<br>vue-axios-github ★195 - 登录拦截登出功能<br>vue-163-music ★179 - vue仿网易云音乐客户端版<br>vue-adminLte-vue-router ★177 - vue和adminLte整合应用<br>vue-zhihudaily ★175 - 知乎日报 Web 版本<br>tmdb-app ★159 - TMDbVueJS应用<br>Zhihu-Daily-Vue.js ★145 - Vuejs单页网页应用<br>notepad ★138 - 本地存储的记事本<br>daily-zhihu ★127 - 基于Vue2的知乎日报单页应用<br>gouyan-movie-vue ★122 - 基于vue的在线电影影讯网站<br>hello-vue-django ★121 - 使用带有Django的vuejs的样板项目<br>vue-express-mongodb ★116 - 简单的前后端分离案例<br>x-blog ★109 - 开源的个人blog项目<br>vue-cnode ★108 - vue单页应用demo<br>vue-mini-shop ★107 - VueJS在线商店<br>websocket_chat ★101 - 基于vue和websocket的多人在线聊天室<br>Vdo ★96 - VueJS与MD重构豆瓣<br>photoShare ★94 - 基于图片分享的社交平台<br>vueBlog ★87 - 前后端分离博客<br>vue-zhihudaily-2.0 ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily<br>beauty ★81 - 豆瓣美女clone<br>generator-loopback-vue ★80 - 典型前后端分离项目模板<br>vue-ruby-china ★74 - VueJS框架搭建的rubychina平台<br>vue-koa-demo ★72 - 使用Vue2和Koa1的全栈demo<br>Zhihu_Daily ★70 - 基于Vue和Nodejs的Web单页应用<br>vue2.x-Cnode ★63 - 基于vue全家桶的Cnode社区<br>webApp ★57 - Vue2的移动端webApp音乐播放器<br>houtai ★52 - 基于vue和Element的后台管理系统<br>vue-trip ★52 - vue2做的出行webapp<br>github-explorer ★50 - 寻找最有趣的GitHub库<br>life-app-vue ★49 - 使用vue2完成多功能集合到小webapp<br>vue-bushishiren ★47 - 不是诗人应用<br>vue-ssr-boilerplate ★47 - 精简版的ofvue-hackernews-2<br>doubanMovie ★41 - 豆瓣电影展示<br>vue-cli-multipage-bootstrap ★41 - 将vue官方在线示例整合到组件中<br>ios7-vue ★40 - 使用vue2.0 vue-router vuex模拟ios7<br>vue-quasar-admin-example ★39 - 将Quasar和VueJS应用于SPA项目<br>cnode-vue ★39 - 基于vue和vue-router构建的cnodejs web网站SPA<br>iview2-management-system ★38 - 后台管理系统解决方案简单示例<br>Framework7-VueJS ★38 - 使用移动框架的示例<br>seeMusic ★36 - 跨平台云音乐播放器<br>vue-XiaoMi-Shop ★34 - 高仿小米商城的项目<br>vue-cnode ★34 - 用 Vue 做的 CNode 官网<br>HyaReader ★34 - 移动友好的阅读器<br>vue-music163 ★30 - 音乐VueJS项目<br>zhihu-daily ★29 - 轻松查看知乎日报内容<br>sls-vuex2-demo ★26 - vuex2商城购物车demo<br>vue-cnode ★22 - 使用cNode社区提供的接口<br>gank ★21 - gankio资源的阅读应用<br>zhihu-daily-vue ★21 - 知乎日报<br>vue-cnode-mobile ★21 - 搭建cnode社区<br>vue-dropload ★19 - 用以测试下拉加载与简单路由<br>Todos_Vuejs ★19 - vuejs2搭建的极简的todolist<br>Vuejs-SalePlatform ★18 - vuejs搭建的售卖平台demo<br>vue-starter ★18 - VueJs项目的简单启动页<br>v-notes ★17 - 简单美观的记事本<br>vue-h5plus ★15 - 前卫的vue及html5plus跨平台demo<br>simply-calculator-vuejs ★12 - 用VueJS实现简易计算器<br>vue-memo ★11 - 用 vue写的记事本应用</p>\n","site":{"data":{}},"excerpt":"","more":"<p>awesome-github-vue 是由OpenDigg整理并维护的Vue相关开源项目库集合。我们会定期同步OpenDigg上的项目到这里，也欢迎各位提交项目给我们。<br>如果收录的项目有错误，可以通过issue反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。<br>部分来自转载<br>内容<br>UI组件<br>开发框架<br>实用库<br>服务端<br>辅助工具<br>应用实例<br>Demo示例<br>UI组件<br>element ★10420 - 饿了么出品的Vue2的web UI工具套件<br>Vux ★7139 - 基于Vue和WeUI的组件库<br>iview ★5164 - 基于 Vuejs 的开源 UI 组件库<br>mint-ui ★5082 - Vue 2的移动UI元素<br>Keen-UI ★2483 - 轻量级的基本UI组件合集<br>vue-material ★2476 - 通过Vue Material和Vue 2建立精美的app应用<br>muse-ui ★2154 - 三端样式一致的响应式 UI 库<br>vuetify ★1941 - 为移动而生的Vue JS 2组件框架<br>vonic ★1601 - 快速构建移动端单页应用<br>eme ★1431 - 优雅的Markdown编辑器<br>vue-multiselect ★1265 - Vue.js选择框解决方案<br>vue-table ★870 - 简化数据表格<br>VueCircleMenu ★793 - 漂亮的vue圆环菜单<br>vue-chat ★769 - vuejs和vuex及webpack的聊天示例<br>eagle.js ★758 - hacker的幻灯片演示框架<br>vueAdmin ★749 - 基于vuejs2和element的简单的管理员模板<br>radon-ui ★658 - 快速开发产品的Vue组件库<br>bootstrap-vue ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件<br>vue-waterfall ★639 - Vue.js的瀑布布局组件<br>vue-blu ★623 - 帮助你轻松创建web应用<br>Vue.Draggable ★623 - 实现拖放和视图模型数组同步<br>vue-carbon ★621 - 基于 vue 开发MD风格的移动端<br>vue-beauty ★616 - 由vue和ant design创建的优美UI组件<br>vue-infinite-scroll ★578 - VueJS的无限滚动指令<br>vue-awesome-swiper ★577 - vue.js触摸滑动组件<br>vue-syntax-highlight ★574 - Sublime Text语法高亮<br>vue-calendar ★474 - 日期选择插件<br>vue-amap ★404 - 基于Vue 2和高德地图的地图组件<br>vue-chartjs ★388 - vue中的Chartjs的封装<br>vue-swipe ★388 - VueJS触摸滑块<br>vue-echarts ★367 - VueJS的ECharts组件<br>vue-datepicker ★354 - 日历和日期选择组件<br>Gokotta ★332 - 简单的音乐播放器<br>markcook ★322 - 好看的markdown编辑器<br>vue-sortable ★308 - 轻松添加拖拽排序<br>vue-google-maps ★293 - 带有双向数据绑定Google地图组件<br>vue-quill-editor ★268 - 基于Quill适用于Vue2的富文本编辑器<br>vue-progressbar ★266 - vue轻量级进度条<br>vue-picture-input ★254 - 移动友好的图片文件输入组件<br>vue-infinite-loading ★251 - VueJS的无限滚动插件<br>vue-upload-component ★239 - Vuejs文件上传组件<br>vue-trend ★235 - 简单优雅的星光线条<br>vue-scroller ★233 - Vonic UI的功能性组件<br>vue-paginate ★222 - 分页数据的简约VueJS插件<br>vue-video-player ★215 - VueJS视频及直播播放器<br>VueStar ★214 - 带星星动画的vue点赞按钮<br>vue-datetime-picker ★207 - 日期时间选择控件<br>vue-core-image-upload ★200 - 轻量级的vue上传插件<br>vue-tables-2 ★195 - 显示数据的bootstrap样式网格<br>vue-fullcalendar ★190 - 基于vue.js的全日历组件<br>vue2-calendar ★187 - 支持lunar和日期事件的日期选择器<br>rubik ★183 - 基于Vuejs2的开源 UI 组件库<br>vuejs-datepicker ★179 - vue日期选择器组件<br>vue-mugen-scroll ★179 - 无限滚动组件<br>DataVisualization ★178 - 数据可视化<br>mint-loadmore ★176 - VueJS的双向下拉刷新组件<br>vue-virtual-scroller ★175 - 带任意数目数据的顺畅的滚动<br>vue-html5-editor ★163 - html5所见即所得编辑器<br>Vueditor ★157 - 所见即所得的编辑器<br>vue-slider ★138 - vue 滑动组件<br>vue-msgbox ★134 - vuejs的消息框<br>vue-slide ★133 - vue轻量级滑动组件<br>vue-drag-and-drop-list ★127 - 创建排序列表的Vue指令<br>vue-dragula ★126 - 使拖放变得简单<br>vue-lazyload-img ★126 - 移动优化的vue图片懒加载插件<br>vue-dropzone ★124 - 用于文件上传的Vue组件<br>vue-datasource ★121 - 创建VueJS动态表格<br>vue-data-tables ★116 - VueJS2数据表格<br>vue-carousel-3d ★114 - VueJS的3D轮播组件<br>vuwe ★113 - 基于微信WeUI所开发的专用于Vue2的组件库<br>vue-swiper ★113 - 易于使用的滑块组件<br>vue-progressive-image ★111 - Vue的渐进图像加载插件<br>vue-slider-component ★109 - 在vue1和vue2中使用滑块<br>vue-charts ★109 - 轻松渲染一个图表<br>vue-impression ★104 - 移动Vuejs2 UI元素<br>vue-region-picker ★96 - 选择中国的省份市和地区<br>vue-instant ★95 - 轻松创建自动提示的自定义搜索控件<br>vue-images ★94 - 显示一组图片的lightbox组件<br>vue-typer ★92 - 模拟用户输入选择和删除文本的Vue组件<br>vue-loading ★92 - 元素中加载block的Vue指令<br>vue-dragging ★91 - 使元素可以拖拽<br>vue-simplemde ★90 - VueJS的Markdown编辑器组件<br>vue-datatable ★89 - 使用Vuejs创建的DataTableView<br>vue-ydui ★86 - 基于Vue2的移动端和微信UI<br>vue-image-crop-upload ★82 - vue图片剪裁上传组件<br>vue2-loading-bar ★82 - 最简单的仿Youtube加载条视图<br>vue-tooltip ★80 - 带绑定信息提示的提示工具<br>vue-data-grid ★78 - VueJS复杂桌面交互示例<br>vue-highcharts ★78 - HighCharts组件<br>vue-music-player ★77 - Vuejs写一个音乐播放器<br>vue-datepicker ★76 - 漂亮的Vue日期选择器组件<br>vue-video ★75 - Vue.js的HTML5视频播放器<br>vue-svgicon ★72 - 创建svg图标组件的工具<br>vue-baidu-map ★70 - 基于 Vue 2的百度地图组件库<br>vue-touch-ripple ★69 - vuejs的触摸ripple组件<br>vue-toast-mobile ★68 - VueJS的toast插件<br>vue-scrollbar ★64 - 最简单的滚动区域组件<br>vue2-timepicker ★63 - 下拉时间选择器<br>vue-quill ★61 - vue组件构建quill编辑器<br>vue-date-picker ★61 - VueJS日期选择器组件<br>coffeebreak ★61 - 实时编辑CSS组件工具<br>vue-float-label ★58 - VueJS浮动标签模式<br>vue-google-signin-button ★58 - 导入谷歌登录按钮<br>vodal ★57 - 动画的vue模态<br>vue-placeholders ★57 - 处理占位符图片和乱码<br>vue-social-sharing ★53 - 社交分享组件<br>vue2-editor ★53 - HTML编辑器<br>awesome-mask ★49 - 拥有独一无二mask的表单<br>vue-easy-slider ★49 - Vue 2.x的滑块组件<br>vue-tagsinput ★44 - 基于VueJS的标签组件<br>vue-img-inputer ★40 - 基于Vue2的图片输入框<br>vuejs-paginate ★39 - 分页VueJS组件<br>vue-slick ★39 - 实现流畅轮播框的vue组件<br>datepicker ★38 - 基于flatpickr的时间选择组件<br>vue-music-master ★38 - vue手机端网页音乐播放器<br>vue-fullcalendar ★37 - vue FullCalendar封装<br>vue-chart ★37 - 强大的高速的vue图表解析<br>we-vue ★36 - Vue2及weui1开发的组件<br>handsontable ★36 - 网页表格组件<br>vue-radial-progress ★35 - Vue.js放射性进度条组件<br>cubeex ★35 - 包含一套完整的移动UI<br>vue-popup-mixin ★35 - 用于管理弹出框的遮盖层<br>vue-material-design ★34 - Vue MD风格组件<br>vue-morris ★33 - Vuejs组件封装Morrisjs库<br>vue-bootstrap-table ★33 - 可排序可检索的表格<br>vue-event-calendar ★32 - 简单小巧的事件日历组件<br>vue-form-2 ★30 - 全面的HTML表单管理的解决方案<br>vue-image-clip ★29 - 基于vue的图像剪辑组件<br>vue-touch-keyboard ★28 - VueJS虚拟键盘组件<br>vue-pull-to-refresh ★28 - Vue2的上拉下拉<br>vue-side-nav ★28 - 响应式的侧边导航<br>vue-ripple ★28 - 制作谷歌MD风格涟漪效果的Vue组件<br>mint-indicator ★27 - VueJS移动加载指示器插件<br>vue-lazy-background-images ★25 - 懒加载背景组件的Vue组件<br>chartjs ★24 - Vue Bulma的chartjs组件<br>vue-chartkick ★24 - VueJS一行代码实现优美图表<br>vue-scroll ★24 - vue滚动<br>vue-area ★23 - 省市区三级联动插件<br>vue-ztree ★23 - 用 vue 写的树层级组件<br>vue-tabs ★22 - 多tab页轻型框架<br>vue-datepicker-simple ★21 - 基于vue的日期选择器<br>vue-m-carousel ★21 - vue 移动端轮播组件<br>vue-verify-pop ★20 - 带气泡提示的vue校验插件<br>vue-waves ★20 - waves的VueJS版本<br>vue-city ★15 - 城市选择器<br>vue-parallax ★15 - 整洁的视觉效果<br>vue-img-loader ★14 - 图片加载UI组件<br>vue-smoothscroll ★13 - smoothscroll的VueJS版本<br>vue-typewriter ★13 - vue组件类型<br>vue-laypage ★12 - 简单的VueJS分页组件<br>vue-tree ★12 - vue树视图组件<br>vue-ios-alertview ★8 - iOS7+ 风格的alertview服务<br>vue-cascading-address ★8 - vue地区选择器<br>dd-vue-component ★7 - 订单来了的公共组件库<br>paco-ui-vue ★7 - PACOUI的vue组件<br>vue-cmap ★6 - Vue China map可视化组件<br>vue-button ★4 - Vue按钮组件<br>开发框架<br>vue.js ★47739 - 流行的轻量高效的前端组件化方案<br>vue-admin ★3528 - Vue管理面板框架<br>quasar ★1599 - 响应式网站和混合移动应用程序<br>electron-vue ★1454 - Electron及VueJS快速启动样板<br>vuepack ★1395 - 现代VueJS启动器<br>N3-components ★642 - 快速构建页面和应用<br>vue-2.0-boilerplate ★263 - Vue2单页应用样板<br>vue-spa-template ★256 - 前后端分离后的单页应用开发<br>Framework7-Vue ★233 - VueJS与Framework7结合<br>vue-stack-2.0 ★152 - Vue2项目样板<br>vue-bulma ★147 - 轻量级高性能MVVM Admin UI框架<br>vue-webgulp ★103 - 仿VueJS Vue loader示例<br>vue-fullstack ★96 - 实时的用户友好的后台系统<br>jspangAdmin ★74 - 基于Vue2的后台管理系统<br>vue-element-starter ★41 - vue启动页<br>实用库<br>vuex ★6414 - 专为 Vue.js 应用程序开发的状态管理模式<br>vue-validator ★1655 - vue的验证器插件<br>vue-loader ★1540 - Vue.js 针对Webpack的组件装载插件<br>vue-lazyload ★873 - 用于懒加载的Vue模块<br>vuelidate ★851 - 简单轻量级的基于模块的Vue.js验证<br>vue-i18n ★754 - VueJS的多语言切换插件<br>qingcheng ★684 - qingcheng主题<br>vue-desktop ★470 - 创建管理面板网站的UI库<br>Vue-Socketio ★368 - VueJS的socketio实现<br>vue-awesome ★321 - VueJS字体Awesome组件<br>vue-head ★306 - head标签的meta信息操作<br>vue-meta ★292 - 管理app的meta信息<br>meteor-vue-component ★283 - vue和meteor整合<br>vue-axios ★268 - 将axios整合到VueJS的封装<br>vue-flatpickr ★204 - 封装Flatpickr的Vue组件<br>avoriaz ★152 - VueJS测试实用工具库<br>vue-timeago ★140 - VueJS的时间前组件<br>meteor-vue ★130 - VueJS和Meteor的桥接<br>vue-svg-icon ★116 - vue2的可变彩色svg图标方案<br>vue-focus ★111 - 可重用VueJS组件的焦点指令<br>vue-animate ★92 - 跨浏览器CSS3动画库<br>vue-bootstrap-modal ★88 - vue的Bootstrap样式组件<br>vue-framework7 ★84 - 结合VueJS使用的Framework7组件<br>vue-scrollTo ★81 - 滚动到元素的VueJS指令<br>vuep ★81 - 用实时编辑和预览来渲染Vue组件<br>element-admin ★76 - 支持 vuecli 的 Element UI 的后台模板<br>vue-password-strength-meter ★71 - 交互式密码强度计<br>vue-online ★71 - reactive的在线和离线组件<br>vue-lazy-render ★70 - 用于Vue组件的延迟渲染<br>vue-clipboard ★68 - VueJS的剪贴板<br>vue-recyclist ★65 - vuejs无限滚动列表<br>vue-cordova ★62 - Cordova的VueJS插件<br>vue-events ★62 - 简化事件的VueJS插件<br>portal-vue ★60 - 在组件外部渲染DOM<br>vue-electron ★57 - 将选择的API封装到Vue对象中的插件<br>cleave ★56 - 基于cleave.js的Cleave组件<br>vue-gesture ★56 - VueJS的手势事件插件<br>vue-shortkey ★55 - 应用于Vue.js的Vue-ShortKey 插件<br>vue-qart ★53 - 用于qartjs的Vue2指令<br>vuemit ★53 - 处理VueJS事件<br>vue-router-transition ★53 - 页面过渡插件<br>vue-local-storage ★52 - 具有类型支持的Vuejs本地储存插件<br>vue-property-decorator ★52 - VueJS和属性Decorator<br>vue-websocket ★50 - VueJS的Websocket插件<br>http-vue-loader ★48 - 从html及js环境加载vue文件<br>vuedeux ★44 - 轻量级开源实用用层<br>vue-aplayer ★44 - 便于配置的音乐播放器vue2组件<br>lazy-vue ★42 - 懒加载图片<br>vue-bus ★40 - VueJS的事件总线<br>vue-notifications ★36 - 非阻塞通知库<br>vue-reactive-storage ★36 - vue插件的Reactive层<br>vue-kindergarten ★35 - 将kindergarten集成到VueJS应用<br>vuex-i18n ★35 - 定位插件<br>vue-ts-loader ★35 - 在Vue装载机检查脚本<br>vue-lazy-component ★34 - 懒加载组件或者元素的Vue指令<br>v-media-query ★34 - vue中添加用于配合媒体查询的方法<br>vue-helmet ★34 - HTML标题管理器<br>voir ★33 - 保持mutation与视图组件的分离<br>vue-pagination-2 ★32 - 简单通用的分页组件<br>vue-observe-visibility ★32 - 当元素在页面上可见或隐藏时检测<br>Vue.resize ★30 - 检测HTML调整大小事件的vue指令<br>vue-acl ★26 - VueJS访问控制列表插件<br>vuex-shared-mutations ★26 - 分享某种Vuex mutations<br>vue-drag-zone ★19 - 适用于Vue2的dom拖动组件<br>modal ★18 - Vue Bulma的modal组件<br>vue-file-base64 ★18 - 将文件转换为Base64的vue组件<br>Famous-Vue ★16 - Famous库的vue组件<br>leo-vue-validator ★13 - 异步的表单验证组件<br>Vue.ImagesLoaded ★13 - 检测图片加载的VueJS指令<br>vue-methods-promise ★12 - 使vue方法支持promise<br>vue-titlecase ★12 - 用于字符串titlecased的VueJS过滤器<br>Vue-Easy-Validator ★11 - 简单的表单验证<br>vue-zoombox ★10 - 一个高级zoombox<br>vue-truncate-filter ★9 - 截断字符串的VueJS过滤器<br>vue-input-autosize ★7 - 基于内容自动调整文本输入的大小<br>vue-data-validator ★4 - Vuejs2的数据验证插件<br>vue-lazyloadImg ★4 - 图片懒加载插件<br>服务端<br>nuxt.js ★2960 - 用于服务器渲染Vue app的最小化框架<br>express-vue ★174 - 简单的使用服务器端渲染vue.js<br>unvue ★105 - 使用简单的通用VueJS应用<br>vue-ssr ★73 - 非常简单的VueJS服务器端渲染模板<br>vue-ssr ★62 - 结合Express使用Vue2服务端渲染<br>vue-easy-renderer ★29 - Nodejs服务端渲染<br>辅助工具<br>DejaVue ★580 - Vuejs可视化及压力测试<br>vue-play ★477 - 展示Vue组件的最小化框架<br>vscode-VueHelper ★198 - 目前vscode最好的vue代码提示插件<br>vue-generate-component ★41 - 轻松生成Vue js组件的CLI工具<br>vue-multipage-cli ★34 - 简单的多页CLI<br>VuejsStarterKit ★27 - vuejs starter套件<br>应用实例<br>koel ★7292 - 基于网络的个人音频流媒体服务<br>pagekit ★4065 - 轻量级的CMS建站系统<br>vue-manage-system ★1223 - 后台管理系统解决方案<br>vuedo ★1088 - 博客平台<br>jackblog-vue ★996 - 个人博客系统<br>PJ Blog ★768 - 开源博客<br>vue-cnode ★661 - 重写vue版cnode社区<br>CMS-of-Blog ★442 - 博客内容管理器<br>rss-reader ★332 - 简单的rss阅读器<br>vue-ghpages-blog ★220 - 依赖GitHub Pages无需本地生成的静态博客<br>tomato5 ★116 - 实时的协作工具<br>swoole-vue-webim ★106 - Web版的聊天应用<br>vue-dashing-js ★70 - nuvo-dashing-js的fork<br>fewords ★55 - 功能极其简单的笔记本<br>vue-blog ★53 - 使用Vue2.0 和Vuex的vue-blog<br>Demo示例<br>vue2-elm ★4389 - 重写饿了么webapp<br>Vue-cnodejs ★2226 - 基于vue重写Cnodejs.org的webapp<br>NeteaseCloudWebApp ★1294 - 高仿网易云音乐的webapp<br>vue-zhihu-daily ★905 - 知乎日报 with Vuejs<br>vue-wechat ★816 - vue.js开发微信app界面<br>vue2-demo ★773 - 从零构建vue2 + vue-router + vuex 开发环境<br>eleme ★671 - 高仿饿了么app商家详情<br>vue-demo ★634 - vue简易留言板<br>spa-starter-kit ★536 - 单页应用启动套件<br>vue-music ★527 - Vue 音乐搜索播放<br>maizuo ★525 - vue&#x2F;vuex&#x2F;redux仿卖座网<br>vue-Meizi ★449 - vue最新实战项目<br>douban ★409 - 模仿豆瓣前端<br>zhihudaily-vue ★395 - 知乎日报web版<br>VueDemo_Sell_Eleme ★377 - Vue2高仿饿了么外卖平台<br>vue-WeChat ★361 - 基于Vue2高仿微信App的单页应用<br>vue-demo-kugou ★359 - vuejs仿写酷狗音乐webapp<br>vue-shopping ★350 - 蘑菇街移动端<br>vue2.0-taopiaopiao ★287 - vue2.0与express构建淘票票页面<br>vue-leancloud-blog ★253 - 一个前后端完全分离的单页应用<br>node-vue-server-webpack ★244 - Node.js+Vue.js+webpack快速开发框架<br>mi-by-vue ★240 - VueJS仿小米官网<br>easy-vue ★239 - 使用Vue实现简易web<br>vue2.x-douban ★234 - Vue2实现简易豆瓣电影webApp<br>xyy-vue ★210 - 大学生交流平台<br>vue-fis3 ★205 - 流行开源工具集成demo<br>vue-demo-maizuo ★195 - 使用Vue2全家桶仿制卖座电影<br>vue-axios-github ★195 - 登录拦截登出功能<br>vue-163-music ★179 - vue仿网易云音乐客户端版<br>vue-adminLte-vue-router ★177 - vue和adminLte整合应用<br>vue-zhihudaily ★175 - 知乎日报 Web 版本<br>tmdb-app ★159 - TMDbVueJS应用<br>Zhihu-Daily-Vue.js ★145 - Vuejs单页网页应用<br>notepad ★138 - 本地存储的记事本<br>daily-zhihu ★127 - 基于Vue2的知乎日报单页应用<br>gouyan-movie-vue ★122 - 基于vue的在线电影影讯网站<br>hello-vue-django ★121 - 使用带有Django的vuejs的样板项目<br>vue-express-mongodb ★116 - 简单的前后端分离案例<br>x-blog ★109 - 开源的个人blog项目<br>vue-cnode ★108 - vue单页应用demo<br>vue-mini-shop ★107 - VueJS在线商店<br>websocket_chat ★101 - 基于vue和websocket的多人在线聊天室<br>Vdo ★96 - VueJS与MD重构豆瓣<br>photoShare ★94 - 基于图片分享的社交平台<br>vueBlog ★87 - 前后端分离博客<br>vue-zhihudaily-2.0 ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily<br>beauty ★81 - 豆瓣美女clone<br>generator-loopback-vue ★80 - 典型前后端分离项目模板<br>vue-ruby-china ★74 - VueJS框架搭建的rubychina平台<br>vue-koa-demo ★72 - 使用Vue2和Koa1的全栈demo<br>Zhihu_Daily ★70 - 基于Vue和Nodejs的Web单页应用<br>vue2.x-Cnode ★63 - 基于vue全家桶的Cnode社区<br>webApp ★57 - Vue2的移动端webApp音乐播放器<br>houtai ★52 - 基于vue和Element的后台管理系统<br>vue-trip ★52 - vue2做的出行webapp<br>github-explorer ★50 - 寻找最有趣的GitHub库<br>life-app-vue ★49 - 使用vue2完成多功能集合到小webapp<br>vue-bushishiren ★47 - 不是诗人应用<br>vue-ssr-boilerplate ★47 - 精简版的ofvue-hackernews-2<br>doubanMovie ★41 - 豆瓣电影展示<br>vue-cli-multipage-bootstrap ★41 - 将vue官方在线示例整合到组件中<br>ios7-vue ★40 - 使用vue2.0 vue-router vuex模拟ios7<br>vue-quasar-admin-example ★39 - 将Quasar和VueJS应用于SPA项目<br>cnode-vue ★39 - 基于vue和vue-router构建的cnodejs web网站SPA<br>iview2-management-system ★38 - 后台管理系统解决方案简单示例<br>Framework7-VueJS ★38 - 使用移动框架的示例<br>seeMusic ★36 - 跨平台云音乐播放器<br>vue-XiaoMi-Shop ★34 - 高仿小米商城的项目<br>vue-cnode ★34 - 用 Vue 做的 CNode 官网<br>HyaReader ★34 - 移动友好的阅读器<br>vue-music163 ★30 - 音乐VueJS项目<br>zhihu-daily ★29 - 轻松查看知乎日报内容<br>sls-vuex2-demo ★26 - vuex2商城购物车demo<br>vue-cnode ★22 - 使用cNode社区提供的接口<br>gank ★21 - gankio资源的阅读应用<br>zhihu-daily-vue ★21 - 知乎日报<br>vue-cnode-mobile ★21 - 搭建cnode社区<br>vue-dropload ★19 - 用以测试下拉加载与简单路由<br>Todos_Vuejs ★19 - vuejs2搭建的极简的todolist<br>Vuejs-SalePlatform ★18 - vuejs搭建的售卖平台demo<br>vue-starter ★18 - VueJs项目的简单启动页<br>v-notes ★17 - 简单美观的记事本<br>vue-h5plus ★15 - 前卫的vue及html5plus跨平台demo<br>simply-calculator-vuejs ★12 - 用VueJS实现简易计算器<br>vue-memo ★11 - 用 vue写的记事本应用</p>\n"},{"title":"常见一些前端问题","date":"2017-12-11T12:29:12.000Z","_content":"\nlink: markyun / My-blog\nFront-end-Developer-Questions/Questions-and-Answers/README.md\n\n\n只看问题点这里\n看全部问题和答案点这里\n本文由我收集总结了一些前端面试题，初学者阅后也要用心钻研其中的原理，重要知识需要系统学习、透彻学习，形成自己的知识链。万不可投机取巧，临时抱佛脚只求面试侥幸混过关是错误的！也是不可能的！不可能的！不可能的！\n前端还是一个年轻的行业，新的行业标准， 框架， 库都不断在更新和新增，正如赫门在2015深JS大会上的《前端服务化之路》主题演讲中说的一句话：“每18至24个月，前端都会难一倍”，这些变化使前端的能力更加丰富、创造的应用也会更加完美。所以关注各种前端技术，跟上快速变化的节奏，也是身为一个前端程序员必备的技能之一。\n最近也收到许多微博私信的鼓励和更正题目信息，后面会经常更新题目和答案到github博客。希望前端er达到既能使用也会表达，对理论知识有自己的理解。可根据下面的知识点一个一个去进阶学习，形成自己的职业技能链。\n面试有几点需注意：(来源寒冬winter 老师，github:@wintercn)\n1. 面试题目： 根据你的等级和职位的变化，入门级到专家级，广度和深度都会有所增加。\n2. 题目类型： 理论知识、算法、项目细节、技术视野、开放性题、工作案例。\n3. 细节追问： 可以确保问到你开始不懂或面试官开始不懂为止，这样可以大大延展题目的区分度和深度，知道你的实际能力。因为这种知识关联是长时期的学习，临时抱佛脚绝对是记不住的。\n4. 回答问题再棒，面试官（可能是你面试职位的直接领导），会考虑我要不要这个人做我的同事？所以态度很重要、除了能做事，还要会做人。（感觉更像是相亲( •̣̣̣̣̣̥́௰•̣̣̣̣̣̥̀ )）\n5. 资深的前端开发能把absolute和relative弄混，这样的人不要也罢，因为团队需要的是：你这个人具有可以依靠的才能（靠谱）。\n前端开发知识点：\nHTML&CSS：\n    对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级、\n    HTML5、CSS3、Flexbox\n\nJavaScript：\n    数据类型、运算、对象、Function、继承、闭包、作用域、原型链、事件、RegExp、JSON、Ajax、\n    DOM、BOM、内存泄漏、跨域、异步装载、模板引擎、前端MVC、路由、模块化、Canvas、ECMAScript 6、Nodejs\n\n其他：\n    移动端、响应式、自动化构建、HTTP、离线存储、WEB安全、优化、重构、团队协作、可维护、易用性、SEO、UED、架构、职业生涯、快速学习能力\n作为一名前端工程师，无论工作年头长短都应该掌握的知识点：\n此条由 王子墨 发表在 攻城师的实验室\n    1、DOM结构 —— 两个节点之间可能存在哪些关系以及如何在节点之间任意移动。\n\n    2、DOM操作 —— 如何添加、移除、移动、复制、创建和查找节点等。\n\n    3、事件 —— 如何使用事件，以及IE和标准DOM事件模型之间存在的差别。\n\n    4、XMLHttpRequest —— 这是什么、怎样完整地执行一次GET请求、怎样检测错误。\n\n    5、严格模式与混杂模式 —— 如何触发这两种模式，区分它们有何意义。\n\n    6、盒模型 —— 外边距、内边距和边框之间的关系，及IE8以下版本的浏览器中的盒模型\n\n    7、块级元素与行内元素 —— 怎么用CSS控制它们、以及如何合理的使用它们\n\n    8、浮动元素 —— 怎么使用它们、它们有什么问题以及怎么解决这些问题。\n\n    9、HTML与XHTML —— 二者有什么区别，你觉得应该使用哪一个并说出理由。\n\n    10、JSON —— 作用、用途、设计结构。\n备注：\n根据自己需要选择性阅读，面试题是对理论知识的总结，让自己学会应该如何表达。\n\n资料答案不够正确和全面，欢迎欢迎Star和提交issues。\n\n格式不断修改更新中。\n\n更新记录：\n2016年3月25日：新增ECMAScript6 相关问题\n\n\n* Doctype作用？标准模式与兼容模式各有什么区别?\n（1）、<!DOCTYPE>声明位于位于HTML文档中的第一行，处于 <html> 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。\n\n（2）、标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。\n* HTML5 为什么只需要写 <!DOCTYPE HTML>？\n HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；\n\n 而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。\n* 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？\n首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。\n\n（1）行内元素有：a b span img input select strong（强调的语气）\n（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p\n\n（3）常见的空元素：\n    \n <hr> <img> <input> <link> <meta>\n    鲜为人知的是：\n    <area> <base> <col> <command> <embed> <keygen> <param> <source> <track> <wbr>\n* 页面导入样式时，使用link和@import有什么区别？\n（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;\n\n（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;\n\n（3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;\n* 介绍一下你对浏览器内核的理解？\n主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。\n渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。\n\nJS引擎则：解析和执行javascript来实现网页的动态效果。\n\n最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。\n* 常见的浏览器内核有哪些？\nTrident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]\nGecko内核：Netscape6及以上版本，FF,MozillaSuite/SeaMonkey等\nPresto内核：Opera7及以上。      [Opera内核原为：Presto，现为：Blink;]\nWebkit内核：Safari,Chrome等。   [ Chrome的：Blink（WebKit的分支）]\n详细文章：浏览器内核的解析和对比\n* html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？\n* HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。\n      绘画 canvas;\n      用于媒介回放的 video 和 audio 元素;\n      本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;\n      sessionStorage 的数据在浏览器关闭后自动删除;\n      语意化更好的内容元素，比如 article、footer、header、nav、section;\n      表单控件，calendar、date、time、email、url、search;\n      新的技术webworker, websocket, Geolocation;\n\n  移除的元素：\n      纯表现的元素：basefont，big，center，font, s，strike，tt，u;\n      对可用性产生负面影响的元素：frame，frameset，noframes；\n\n* 支持HTML5新标签：\n     IE8/IE7/IE6支持通过document.createElement方法产生的标签，\n     可以利用这一特性让这些浏览器支持HTML5新标签，\n     浏览器支持新标签后，还需要添加标签默认的样式。\n\n     当然也可以直接使用成熟的框架、比如html5shim;\n     <!--[if lt IE 9]>\n        <script> src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"</script>\n     <![endif]-->\n\n* 如何区分HTML5： DOCTYPE声明\\新增的结构元素\\功能元素\n* 简述一下你对HTML语义化的理解？\n用正确的标签做正确的事情。\nhtml语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;\n即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;\n搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;\n使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。\n* HTML5的离线储存怎么使用，工作原理能不能解释一下？\n在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。\n原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。\n\n\n如何使用：\n1、页面头部像下面一样加入一个manifest的属性；\n2、在cache.manifest文件的编写离线存储的资源；\n    CACHE MANIFEST\n    #v0.11\n    CACHE:\n    js/app.js\n    css/style.css\n    NETWORK:\n    resourse/logo.png\n    FALLBACK:\n    / /offline.html\n3、在离线状态时，操作window.applicationCache进行需求实现。\n详细的使用请参考：有趣的HTML5：离线存储\n* 浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？\n在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。\n离线的情况下，浏览器就直接使用离线存储的资源。\n详细的使用请参考：有趣的HTML5：离线存储\n* 请描述一下 cookies，sessionStorage 和 localStorage 的区别？\ncookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。\ncookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。\nsessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。\n\n存储大小：\n    cookie数据大小不能超过4k。\n    sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。\n\n有期时间：\n    localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；\n    sessionStorage  数据在当前浏览器窗口关闭后自动删除。\n    cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭\n* iframe有那些缺点？\n*iframe会阻塞主页面的Onload事件；\n*搜索引擎的检索程序无法解读这种页面，不利于SEO;\n\n*iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。\n\n使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript\n动态给iframe添加src属性值，这样可以绕开以上两个问题。\n* Label的作用是什么？是怎么用的？\nlabel标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。\n\n<label for=\"Name\">Number:</label>\n<input type=“text“name=\"Name\" id=\"Name\"/>\n\n<label>Date:<input type=\"text\" name=\"B\"/></label>\n* HTML5的form如何关闭自动完成功能？\n给不想要提示的 form 或某个 input 设置为 autocomplete=off。\n* 如何实现浏览器内多个标签页之间的通信? (阿里)\nWebSocket、SharedWorker；\n也可以调用localstorge、cookies等本地存储方式；\n\nlocalstorge另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，\n我们通过监听事件，控制它的值来进行页面信息通信；\n注意quirks：Safari 在无痕模式下设置localstorge值时会抛出 QuotaExceededError 的异常；\n* webSocket如何兼容低浏览器？(阿里)\nAdobe Flash Socket 、\nActiveX HTMLFile (IE) 、\n基于 multipart 编码发送 XHR 、\n基于长轮询的 XHR\n* 页面可见性（Page Visibility API） 可以有哪些用途？\n通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;\n在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；\n* 如何在页面上实现一个圆形的可点击区域？\n1、map+area或者svg\n2、border-radius\n3、纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等\n* 实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。\n<div style=\"height:1px;overflow:hidden;background:red\"></div>\n* 网页验证码是干嘛的，是为了解决什么安全问题。\n区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水；\n有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。\n* title与h1的区别、b与strong的区别、i与em的区别？\ntitle属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；\n\nstrong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：<strong>会重读，而<B>是展示强调内容。\n\ni内容展示为斜体，em表示强调的文本；\n\nPhysical Style Elements -- 自然样式标签\nb, i, u, s, pre\nSemantic Style Elements -- 语义样式标签\nstrong, em, ins, del, code\n应该准确使用语义样式标签, 但不能滥用, 如果不能确定时首选使用自然样式标签。\n\n* 介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？\n（1）有两种， IE 盒子模型、W3C 盒子模型；\n（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)；\n（3）区  别： IE的content部分把 border 和 padding计算了进去;\n* CSS选择符有哪些？哪些属性可以继承？\n*   1.id选择器（ # myid）\n    2.类选择器（.myclassname）\n    3.标签选择器（div, h1, p）\n    4.相邻选择器（h1 + p）\n    5.子选择器（ul > li）\n    6.后代选择器（li a）\n    7.通配符选择器（ * ）\n    8.属性选择器（a[rel = \"external\"]）\n    9.伪类选择器（a:hover, li:nth-child）\n\n*   可继承的样式： font-size font-family color, UL LI DL DD DT;\n\n*   不可继承的样式：border padding margin width height ;\n* CSS优先级算法如何计算？\n*   优先级就近原则，同权重情况下样式定义最近者为准;\n\n*   载入样式以最后载入的定位为准;\n\n优先级为:\n   !important >  id > class > tag\n    important 比 内联优先级高\n* CSS3新增伪类有那些？\n    举例：\n    p:first-of-type 选择属于其父元素的首个 <p> 元素的每个 <p> 元素。\n    p:last-of-type  选择属于其父元素的最后 <p> 元素的每个 <p> 元素。\n    p:only-of-type  选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。\n    p:only-child        选择属于其父元素的唯一子元素的每个 <p> 元素。\n    p:nth-child(2)  选择属于其父元素的第二个子元素的每个 <p> 元素。\n\n    :after          在元素之前添加内容,也可以用来做清除浮动。\n    :before         在元素之后添加内容\n    :enabled        \n    :disabled       控制表单控件的禁用状态。\n    :checked        单选框或复选框被选中。\n* 如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？\n    * 给div设置一个宽度，然后添加margin:0 auto属性\ndiv{\n    width:200px;\n    margin:0 auto;\n }\n    * 居中一个浮动元素\n  确定容器的宽高 宽500 高 300 的层\n  设置层的外边距\n\n .div {\n      width:500px ; height:300px;//高度可以不设\n      margin: -150px 0 0 -250px;\n      position:relative;         //相对定位\n      background-color:pink;     //方便看效果\n      left:50%;\n      top:50%;\n }\n    * 让绝对定位的div居中\n  position: absolute;\n  width: 1200px;\n  background: none;\n  margin: 0 auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n* display有哪些值？说明他们的作用。\n  block         象块类型元素一样显示。\n  none          缺省值。象行内元素类型一样显示。\n  inline-block  象行内元素一样显示，但其内容象块类型元素一样显示。\n  list-item     象块类型元素一样显示，并添加样式列表标记。\n  table         此元素会作为块级表格来显示\n  inherit       规定应该从父元素继承 display 属性的值\n* pposition的值relative和absolute定位原点是？\n  absolute\n    生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。\n  fixed （老IE不支持）\n    生成绝对定位的元素，相对于浏览器窗口进行定位。\n  relative\n    生成相对定位的元素，相对于其正常位置进行定位。\n  static\n    默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。\n  inherit\n    规定从父元素继承 position 属性的值。\n* CSS3有哪些新特性？\n  新增各种CSS选择器  （: not(.input)：所有 class 不是“input”的节点）\n  圆角           （border-radius:8px）\n  多列布局        （multi-column layout）\n  阴影和反射        （Shadow\\Reflect）\n  文字特效      （text-shadow、）\n  文字渲染      （Text-decoration）\n  线性渐变      （gradient）\n  旋转          （transform）\n  增加了旋转,缩放,定位,倾斜,动画，多背景\n  transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:\n* 请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？\n .\n* 用纯CSS创建一个三角形的原理是什么？\n把上、左、右三条边隐藏掉（颜色设为 transparent）\n#demo {\n  width: 0;\n  height: 0;\n  border-width: 20px;\n  border-style: solid;\n  border-color: transparent transparent red transparent;\n}\n* 一个满屏 品 字布局 如何设计?\n简单的方式：\n    上面的div宽100%，\n    下面的两个div分别宽50%，\n    然后用float或者inline使其不换行即可\n* 经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？\n* png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.\n\n* 浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。\n\n* IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。\n\n  浮动ie产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}\n\n  这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)\n\n  渐进识别的方式，从总体中逐渐排除局部。\n\n  首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。\n  接着，再次使用“+”将IE8和IE7、IE6分离开来，这样IE8已经独立识别。\n\n  css\n      .bb{\n          background-color:#f1ee18;/*所有识别*/\n          .background-color:#00deff\\9; /*IE6、7、8识别*/\n          +background-color:#a200ff;/*IE6、7识别*/\n          _background-color:#1e0bd1;/*IE6识别*/\n      }\n\n*  IE下,可以使用获取常规属性的方法来获取自定义属性,\n   也可以使用getAttribute()获取自定义属性;\n   Firefox下,只能使用getAttribute()获取自定义属性。\n   解决方法:统一通过getAttribute()获取自定义属性。\n\n*  IE下,even对象有x,y属性,但是没有pageX,pageY属性;\n   Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。\n\n*  解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。\n\n*  Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,\n   可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。\n\n超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:\nL-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}\n* li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？\n行框的排列会受到中间空白（回车\\空格）等的影响，因为空格也属于字符,这些空白也会被应用样式，占据空间，所以会有间隔，把字符大小设为0，就没有空格了。\n* 为什么要初始化CSS样式。\n- 因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。\n\n- 当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。\n\n最简单的初始化方法： * {padding: 0; margin: 0;} （强烈不建议）\n\n淘宝的样式初始化代码：\nbody, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }\nbody, button, input, select, textarea { font:12px/1.5tahoma, arial, \\5b8b\\4f53; }\nh1, h2, h3, h4, h5, h6{ font-size:100%; }\naddress, cite, dfn, em, var { font-style:normal; }\ncode, kbd, pre, samp { font-family:couriernew, courier, monospace; }\nsmall{ font-size:12px; }\nul, ol { list-style:none; }\na { text-decoration:none; }\na:hover { text-decoration:underline; }\nsup { vertical-align:text-top; }\nsub{ vertical-align:text-bottom; }\nlegend { color:#000; }\nfieldset, img { border:0; }\nbutton, input, select, textarea { font-size:100%; }\ntable { border-collapse:collapse; border-spacing:0; }\n* absolute的containing block(容器块)计算方式跟正常流有什么不同？\n无论属于哪种，都要先找到其祖先元素中最近的 position 值不为 static 的元素，然后再判断：\n1、若此元素为 inline 元素，则 containing block 为能够包含这个元素生成的第一个和最后一个 inline box 的 padding box (除 margin, border 外的区域) 的最小矩形；\n2、否则,则由这个祖先元素的 padding box 构成。\n如果都找不到，则为 initial containing block。\n\n补充：\n1. static(默认的)/relative：简单说就是它的父元素的内容框（即去掉padding的部分）\n2. absolute: 向上找最近的定位为absolute/relative的元素\n3. fixed: 它的containing block一律为根元素(html/body)，根元素也是initial containing block\n* CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？\n* position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？\n* 对BFC规范(块级格式化上下文：block formatting context)的理解？\n（W3C CSS 2.1 规范中的一个概念,它是一个独立容器，决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用。）\n 一个页面是由很多个 Box 组成的,元素的类型和 display 属性,决定了这个 Box 的类型。\n 不同类型的 Box,会参与不同的 Formatting Context（决定如何渲染文档的容器）,因此Box内的元素会以不同的方式渲染,也就是说BFC内部的元素和外部的元素不会互相影响。\n* css定义的权重\n以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，以下例子是演示各种定义的权重值：\n\n/*权重为1*/\ndiv{\n}\n/*权重为10*/\n.class1{\n}\n/*权重为100*/\n#id1{\n}\n/*权重为100+1=101*/\n#id1 div{\n}\n/*权重为10+1=11*/\n.class1 div{\n}\n/*权重为10+10+1=21*/\n.class1 .class2 div{\n}\n\n如果权重相同，则最后定义的样式会起作用，但是应该避免这种情况出现\n* 请解释一下为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式\n* 移动端的布局用过媒体查询吗？\n* 使用 CSS 预处理器吗？喜欢那个？\nSASS (SASS、LESS没有本质区别，只因为团队前端都是用的SASS)\n* CSS优化、提高性能的方法有哪些？\n* 浏览器是怎样解析CSS选择器的？\n* 在网页中的应该使用奇数还是偶数的字体？为什么呢？\n* margin和padding分别适合什么场景使用？\n* 抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]\n* 元素竖向的百分比设定是相对于容器的高度吗？\n* 全屏滚动的原理是什么？用到了CSS的那些属性？\n* 什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？\n* 视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）\n* ::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。\n* 如何修改chrome记住密码后自动填充表单的黄色背景 ？\n* 你对line-height是如何理解的？\n* 设置元素浮动后，该元素的display值是多少？（自动变成display:block）\n* 怎么让Chrome支持小于12px 的文字？\n* 让页面里的字体变清晰，变细用CSS怎么做？（-webkit-font-smoothing: antialiased;）\n* font-style属性可以让它赋值为“oblique” oblique是什么意思？\n* position:fixed;在android下无效怎么处理？\n* 如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）\n多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms\n* display:inline-block 什么时候会显示间隙？(携程)\n移除空格、使用margin负值、使用font-size:0、letter-spacing、word-spacing\n* overflow: scroll时不能平滑滚动的问题怎么处理？\n* 有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。\n* png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？\n* 什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）\n如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，\n所以不如隔离开。\n\n因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，\n这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。\n\n同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，\n提高了webserver的http请求的解析速度。\n* style标签写在body后与body前有什么区别？\n* 什么是CSS 预处理器 / 后处理器？\n- 预处理器例如：LESS、Sass、Stylus，用来预编译Sass或less，增强了css代码的复用性，\n  还有层级、mixin、变量、循环、函数等，具有很方便的UI组件模块化开发能力，极大的提高工作效率。\n\n- 后处理器例如：PostCSS，通常被视为在完成的样式表中根据CSS规范处理CSS，让其更有效；目前最常做的\n  是给CSS属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。\n\n* 介绍js的基本数据类型。\n Undefined、Null、Boolean、Number、String、Symbol(new in ECMAScript 2015)\n* 介绍js有哪些内置对象？\nObject 是 JavaScript 中所有对象的父对象\n\n数据封装类对象：Object、Array、Boolean、Number 和 String\n其他对象：Function、Arguments、Math、Date、RegExp、Error\n* 说几条写JavaScript的基本规范？\n1.不要在同一行声明多个变量。\n2.请使用 ===/!==来比较true/false或者数值\n3.使用对象字面量替代new Array这种形式\n4.不要使用全局函数。\n5.Switch语句必须带有default分支\n6.函数不应该有时候有返回值，有时候没有返回值。\n7.For循环必须使用大括号\n8.If语句必须使用大括号\n9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。\n* JavaScript原型，原型链 ? 有什么特点？\n每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，\n如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，\n于是就这样一直找下去，也就是我们平时所说的原型链的概念。\n关系：instance.constructor.prototype = instance.__proto__\n\n特点：\nJavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。\n\n\n 当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的话，\n 就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象。\n    function Func(){}\n    Func.prototype.name = \"Sean\";\n    Func.prototype.getInfo = function() {\n      return this.name;\n    }\n    var person = new Func();//现在可以参考var person = Object.create(oldObject);\n    console.log(person.getInfo());//它拥有了Func的属性和方法\n    //\"Sean\"\n    console.log(Func.prototype);\n    // Func { name=\"Sean\", getInfo=function()}\n* JavaScript有几种类型的值？，你能画一下他们的内存图吗？\n栈：原始数据类型（Undefined，Null，Boolean，Number、String） \n堆：引用数据类型（对象、数组和函数）\n\n两种类型的区别是：存储位置不同；\n原始数据类型直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；\n引用数据类型存储在堆(heap)中的对象,占据空间大、大小不固定,如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其\n在栈中的地址，取得地址后从堆中获得实体\n* Javascript如何实现继承？\n1、构造继承\n2、原型继承\n3、实例继承\n4、拷贝继承\n\n原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。\n\n        function Parent(){\n            this.name = 'wang';\n        }\n\n        function Child(){\n            this.age = 28;\n        }\n        Child.prototype = new Parent();//继承了Parent，通过原型\n\n        var demo = new Child();\n        alert(demo.age);\n        alert(demo.name);//得到被继承的属性\n* JavaScript继承的几种实现方式？\n    * 参考：构造函数的继承，非构造函数的继承；\n* javascript创建对象的几种方式？\njavascript创建对象简单的说,无非就是使用内置对象或各种自定义对象，当然还可以用JSON；但写法有很多种，也能混合使用。\n\n\n1、对象字面量的方式   \n\n    person={firstname:\"Mark\",lastname:\"Yun\",age:25,eyecolor:\"black\"};\n\n2、用function来模拟无参的构造函数\n\n    function Person(){}\n    var person=new Person();//定义一个function，如果使用new\"实例化\",该function可以看作是一个Class\n    person.name=\"Mark\";\n    person.age=\"25\";\n    person.work=function(){\n    alert(person.name+\" hello...\");\n    }\n    person.work();\n\n3、用function来模拟参构造函数来实现（用this关键字定义构造的上下文属性）\n\n    function Pet(name,age,hobby){\n       this.name=name;//this作用域：当前对象\n       this.age=age;\n       this.hobby=hobby;\n       this.eat=function(){\n          alert(\"我叫\"+this.name+\",我喜欢\"+this.hobby+\",是个程序员\");\n       }\n    }\n    var maidou =new Pet(\"麦兜\",25,\"coding\");//实例化、创建对象\n    maidou.eat();//调用eat方法\n\n\n4、用工厂方式来创建（内置对象）\n\n     var wcDog =new Object();\n     wcDog.name=\"旺财\";\n     wcDog.age=3;\n     wcDog.work=function(){\n       alert(\"我是\"+wcDog.name+\",汪汪汪......\");\n     }\n     wcDog.work();\n\n\n5、用原型方式来创建\n\n    function Dog(){\n\n     }\n     Dog.prototype.name=\"旺财\";\n     Dog.prototype.eat=function(){\n     alert(this.name+\"是个吃货\");\n     }\n     var wangcai =new Dog();\n     wangcai.eat();\n\n\n5、用混合方式来创建\n\n    function Car(name,price){\n      this.name=name;\n      this.price=price; \n    }\n     Car.prototype.sell=function(){\n       alert(\"我是\"+this.name+\"，我现在卖\"+this.price+\"万元\");\n      }\n    var camry =new Car(\"凯美瑞\",27);\n    camry.sell(); \n* Javascript作用链域?\n全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。\n当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，\n直至全局函数，这种组织形式就是作用域链。\n* 谈谈This对象的理解。\n    * this总是指向函数的直接调用者（而非间接调用者）；\n    * 如果有new关键字，this指向new出来的那个对象；\n    * 在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；\n* eval是做什么的？\n它的功能是把对应的字符串解析成JS代码并运行；\n应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。\n由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval('('+ str +')');\n* 什么是window对象? 什么是document对象?\n* null，undefined 的区别？\nnull        表示一个对象被定义了，值为“空值”；\nundefined   表示不存在这个值。\n\n\ntypeof undefined\n    //\"undefined\"\n    undefined :是一个表示\"无\"的原始值或者说表示\"缺少值\"，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined； \n    例如变量被声明了，但没有赋值时，就等于undefined\n\ntypeof null\n    //\"object\"\n    null : 是一个对象(空对象, 没有任何属性和方法)；\n    例如作为函数的参数，表示该函数的参数不是对象；\n\n注意：\n    在验证null时，一定要使用　=== ，因为 == 无法分别 null 和　undefined\n\n\n再来一个例子：\n\n    null\n    Q：有张三这个人么？\n    A：有！\n    Q：张三有房子么？\n    A：没有！\n\n    undefined\n    Q：有张三这个人么？\n    A：没有！\n参考阅读：undefined与null的区别\n* 写一个通用的事件侦听器函数。\n    // event(事件)工具集，来源：github.com/markyun\n    markyun.Event = {\n        // 页面加载完成后\n        readyEvent : function(fn) {\n            if (fn==null) {\n                fn=document;\n            }\n            var oldonload = window.onload;\n            if (typeof window.onload != 'function') {\n                window.onload = fn;\n            } else {\n                window.onload = function() {\n                    oldonload();\n                    fn();\n                };\n            }\n        },\n        // 视能力分别使用dom0||dom2||IE方式 来绑定事件\n        // 参数： 操作的元素,事件名称 ,事件处理程序\n        addEvent : function(element, type, handler) {\n            if (element.addEventListener) {\n                //事件类型、需要执行的函数、是否捕捉\n                element.addEventListener(type, handler, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + type, function() {\n                    handler.call(element);\n                });\n            } else {\n                element['on' + type] = handler;\n            }\n        },\n        // 移除事件\n        removeEvent : function(element, type, handler) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, handler, false);\n            } else if (element.datachEvent) {\n                element.detachEvent('on' + type, handler);\n            } else {\n                element['on' + type] = null;\n            }\n        },\n        // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)\n        stopPropagation : function(ev) {\n            if (ev.stopPropagation) {\n                ev.stopPropagation();\n            } else {\n                ev.cancelBubble = true;\n            }\n        },\n        // 取消事件的默认行为\n        preventDefault : function(event) {\n            if (event.preventDefault) {\n                event.preventDefault();\n            } else {\n                event.returnValue = false;\n            }\n        },\n        // 获取事件目标\n        getTarget : function(event) {\n            return event.target || event.srcElement;\n        },\n        // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；\n        getEvent : function(e) {\n            var ev = e || window.event;\n            if (!ev) {\n                var c = this.getEvent.caller;\n                while (c) {\n                    ev = c.arguments[0];\n                    if (ev && Event == ev.constructor) {\n                        break;\n                    }\n                    c = c.caller;\n                }\n            }\n            return ev;\n        }\n    };\n* [\"1\", \"2\", \"3\"].map(parseInt) 答案是多少？\n [1, NaN, NaN] 因为 parseInt 需要两个参数 (val, radix)，\n 其中 radix 表示解析时用的基数。\n map 传了 3 个 (element, index, array)，对应的 radix 不合法导致解析失败。\n* 事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？\n 1. 我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为。\n 2. 事件处理机制：IE是事件冒泡、Firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件；\n 3. ev.stopPropagation();（旧ie的方法 ev.cancelBubble = true;）\n* 什么是闭包（closure），为什么要用它？\n闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。\n\n闭包的特性：\n\n1.函数内再嵌套函数\n2.内部函数可以引用外层的参数和变量\n3.参数和变量不会被垃圾回收机制回收\n\n//li节点的onclick事件都能正确的弹出当前被点击的li索引\n <ul id=\"testUL\">\n    <li> index = 0</li>\n    <li> index = 1</li>\n    <li> index = 2</li>\n    <li> index = 3</li>\n</ul>\n<script type=\"text/javascript\">\n    var nodes = document.getElementsByTagName(\"li\");\n    for(i = 0;i<nodes.length;i+= 1){\n        nodes[i].onclick = function(){\n            console.log(i+1);//不用闭包的话，值每次都是4\n        }(i);\n    }\n</script>\n\n\n\n执行say667()后,say667()闭包内部变量会存在,而闭包内部函数的内部变量不会存在\n使得Javascript的垃圾回收机制GC不会收回say667()所占用的资源\n因为say667()的内部函数的执行需要依赖say667()中的变量\n这是对闭包作用的非常直白的描述\n\n  function say667() {\n    // Local variable that ends up within closure\n    var num = 666;\n    var sayAlert = function() {\n        alert(num);\n    }\n    num++;\n    return sayAlert;\n}\n\n var sayAlert = say667();\n sayAlert()//执行结果应该弹出的667\n* javascript 代码中的\"use strict\";是什么意思 ? 使用它区别是什么？\nuse strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,\n\n使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为。\n默认支持的糟糕特性都会被禁用，比如不能用with，也不能在意外的情况下给全局变量赋值;\n全局变量的显示声明,函数必须声明在顶层，不允许在非函数代码块内声明函数,arguments.callee也不允许使用；\n消除代码运行的一些不安全之处，保证代码运行的安全,限制函数中的arguments修改，严格模式下的eval函数的行为和非严格模式的也不相同;\n\n提高编译器效率，增加运行速度；\n为未来新版本的Javascript标准化做铺垫。\n* 如何判断一个对象是否属于某个类？\n  使用instanceof （待完善）\n   if(a instanceof Person){\n       alert('yes');\n   }\n* new操作符具体干了什么呢?\n     1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。\n     2、属性和方法被加入到 this 引用的对象中。\n     3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。\n\nvar obj  = {};\nobj.__proto__ = Base.prototype;\nBase.call(obj);\n* 用原生JavaScript的实现过什么功能吗？\n* Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？\nhasOwnProperty\n\njavaScript中hasOwnProperty函数方法是返回一个布尔值，指出一个对象是否具有指定名称的属性。此方法无法检查该对象的原型链中是否具有该属性；该属性必须是对象本身的一个成员。\n使用方法：\nobject.hasOwnProperty(proName)\n其中参数object是必选项。一个对象的实例。\nproName是必选项。一个属性名称的字符串值。\n\n如果 object 具有指定名称的属性，那么JavaScript中hasOwnProperty函数方法返回 true，反之则返回 false。\n* JSON 的了解？\nJSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。\n它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小\n如：{\"age\":\"12\", \"name\":\"back\"}\n\nJSON字符串转换为JSON对象:\nvar obj =eval('('+ str +')');\nvar obj = str.parseJSON();\nvar obj = JSON.parse(str);\n\nJSON对象转换为JSON字符串：\nvar last=obj.toJSONString();\nvar last=JSON.stringify(obj);\n* [].forEach.call($$(\"*\"),function(a){a.style.outline=\"1px solid #\"+(~~(Math.random()*(1<<24))).toString(16)}) 能解释一下这段代码的意思吗？\n* js延迟加载的方式有哪些？\ndefer和async、动态创建DOM方式（用得最多）、按需异步载入js\n* Ajax 是什么? 如何创建一个Ajax？\najax的全称：Asynchronous Javascript And XML。\n异步传输+js+xml。\n所谓异步，在这里简单地解释就是：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验。\n\n(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象\n(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息\n(3)设置响应HTTP请求状态变化的函数\n(4)发送HTTP请求\n(5)获取异步调用返回的数据\n(6)使用JavaScript和DOM实现局部刷新\n* 同步和异步的区别?\n同步的概念应该是来自于OS中关于同步的概念:不同进程为协同完成某项工作而在先后次序上调整(通过阻塞,唤醒等方式).同步强调的是顺序性.谁先谁后.异步则不存在这种顺序性.\n同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作。\n异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。\n（待完善）\n* 如何解决跨域问题?\njsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面\n* 页面编码和被请求的资源编码如果不一致如何处理？\n* 模块化开发怎么做？\n立即执行函数,不暴露私有成员\n    var module1 = (function(){\n    　　　　var _count = 0;\n    　　　　var m1 = function(){\n    　　　　　　//...\n    　　　　};\n    　　　　var m2 = function(){\n    　　　　　　//...\n    　　　　};\n    　　　　return {\n    　　　　　　m1 : m1,\n    　　　　　　m2 : m2\n    　　　　};\n    　　})();\n（待完善）\n* AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？\nAMD 规范在这里：https://github.com/amdjs/amdjs-api/wiki/AMD\nCMD 规范在这里：https://github.com/seajs/seajs/issues/242\nAsynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。\n\n 区别：\n\n    1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.\n    2. CMD 推崇依赖就近，AMD 推崇依赖前置。看代码：\n\n// CMD\ndefine(function(require, exports, module) {\n    var a = require('./a')\n    a.doSomething()\n    // 此处略去 100 行\n    var b = require('./b') // 依赖可以就近书写\n    b.doSomething()\n    // ...\n})\n\n// AMD 默认推荐\ndefine(['./a', './b'], function(a, b) { // 依赖必须一开始就写好\n    a.doSomething()\n    // 此处略去 100 行\n    b.doSomething()\n    // ...\n})\n* requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）\n* 谈一谈你对ECMAScript6的了解？\n* ECMAScript6 怎么写class么，为什么会出现class这种东西?\n* 异步加载JS的方式有哪些？\n  (1) defer，只支持IE\n\n  (2) async：\n\n  (3) 创建script，插入到DOM中，加载完毕后callBack\n* documen.write和 innerHTML的区别\ndocument.write只能重绘整个页面\n\ninnerHTML可以重绘页面的一部分\n* DOM操作——怎样添加、移除、移动、复制、创建和查找节点?\n（1）创建新节点\n  createDocumentFragment()    //创建一个DOM片段\n  createElement()   //创建一个具体的元素\n  createTextNode()   //创建一个文本节点\n（2）添加、移除、替换、插入\n  appendChild()\n  removeChild()\n  replaceChild()\n  insertBefore() //在已有的子节点前插入一个新的子节点\n（3）查找\n  getElementsByTagName()    //通过标签名称\n  getElementsByName()    //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)\n  getElementById()    //通过元素Id，唯一性\n* .call() 和 .apply() 的区别？\n  例子中用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：alert(4);\n\n  注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。\n\n    function add(a,b)\n    {\n        alert(a+b);\n    }\n\n    function sub(a,b)\n    {\n        alert(a-b);\n    }\n\n    add.call(sub,3,1);\n* 数组和对象有哪些原生方法，列举一下？\n* JS 怎么实现一个类。怎么实例化这个类\n* JavaScript中的作用域与变量声明提升？\n* 如何编写高性能的Javascript？\n* 那些操作会造成内存泄漏？\n* JQuery的源码看过吗？能不能简单概况一下它的实现原理？\n* jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？\n* jquery中如何将数组转化为json字符串，然后再转化回来？\n* jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？\n* jquery.extend 与 jquery.fn.extend的区别？\n* jQuery 的队列是如何实现的？队列可以用在哪些地方？\n* 谈一下Jquery中的bind(),live(),delegate(),on()的区别？\n* JQuery一个对象可以同时绑定多个事件，这是如何实现的？\n* 是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？\n* jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）\n* 针对 jQuery性能的优化方法？\n* Jquery与jQuery UI 有啥区别？\n*jQuery是一个js库，主要提供的功能是选择器，属性修改和事件绑定等等。\n\n*jQuery UI则是在jQuery的基础上，利用jQuery的扩展性，设计的插件。\n 提供了一些常用的界面元素，诸如对话框、拖动行为、改变大小行为等等\n* JQuery的源码看过吗？能不能简单说一下它的实现原理？\n* jquery 中如何将数组转化为json字符串，然后再转化回来？\njQuery中没有提供这个功能，所以你需要先编写两个jQuery的扩展：\n    $.fn.stringifyArray = function(array) {\n        return JSON.stringify(array)\n    }\n\n    $.fn.parseArray = function(array) {\n        return JSON.parse(array)\n    }\n\n    然后调用：\n    $(\"\").stringifyArray(array)\n* jQuery和Zepto的区别？各自的使用场景？\n* 针对 jQuery 的优化方法？\n*基于Class的选择性的性能相对于Id选择器开销很大，因为需遍历所有DOM元素。\n\n*频繁操作的DOM，先缓存起来再操作。用Jquery的链式调用更好。\n 比如：var str=$(\"a\").attr(\"href\");\n\n*for (var i = size; i < arr.length; i++) {}\n for 循环每一次循环都查找了数组 (arr) 的.length 属性，在开始循环的时候设置一个变量来存储这个数字，可以让循环跑得更快：\n for (var i = size, length = arr.length; i < length; i++) {}\n* Zepto的点透问题如何解决？\n* jQueryUI如何自定义组件?\n* 需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？\n* 如何判断当前脚本运行在浏览器还是node环境中？（阿里）\n通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中\n* 移动端最小触控区域是多大？\n* jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?\n* 把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？\n* 移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）\n* 知道各种JS框架(Angular, Backbone, Ember, React, Meteor, Knockout...)么? 能讲出他们各自的优点和缺点么?\n* Underscore 对哪些 JS 原生对象进行了扩展以及提供了哪些好用的函数方法？\n* 解释JavaScript中的作用域与变量声明提升？\n* 那些操作会造成内存泄漏？\n内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。\n垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。\n\nsetTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。\n闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）\n* JQuery一个对象可以同时绑定多个事件，这是如何实现的？\n* Node.js的适用场景？\n* (如果会用node)知道route, middleware, cluster, nodemon, pm2, server-side rendering么?\n* 解释一下 Backbone 的 MVC 实现方式？\n* 什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?\n* 知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?\n* 如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?\n* 前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?\n* 简述一下 Handlebars 的基本用法？\n* 简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？\n* 用js实现千位分隔符?(来源：前端农民工，提示：正则+replace)\nfunction commafy(num) {\n     num = num + '';\n     var reg = /(-?d+)(d{3})/;\n\n    if(reg.test(num)){\n     num = num.replace(reg, '$1,$2');\n    }\n    return num;\n}\n* 检测浏览器版本版本有哪些方式？\n功能检测、userAgent特征检测\n\n比如：navigator.userAgent\n//\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36\n  (KHTML, like Gecko) Chrome/41.0.2272.101 Safari/537.36\"\n* What is a Polyfill?\npolyfill 是“在旧版浏览器上复制标准 API 的 JavaScript 补充”,可以动态地加载 JavaScript 代码或库，在不支持这些标准 API 的浏览器中模拟它们。\n例如，geolocation（地理位置）polyfill 可以在 navigator 对象上添加全局的 geolocation 对象，还能添加 getCurrentPosition 函数以及“坐标”回调对象，\n所有这些都是 W3C 地理位置 API 定义的对象和函数。因为 polyfill 模拟标准 API，所以能够以一种面向所有浏览器未来的方式针对这些 API 进行开发，\n一旦对这些 API 的支持变成绝对大多数，则可以方便地去掉 polyfill，无需做任何额外工作。\n* 做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？\n比如： html5shiv、Geolocation、Placeholder \n* 我们给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件，会先执行冒泡还是捕获？\n\n* Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？\n两等号判等，会在比较时进行类型转换；\n三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）； \n\nObject.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，\n但 Object.is(NaN, NaN) 会返回 true.\n\nObject.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。\n\n* react-router 路由系统的实现原理？\n* React中如何解决第三方类库的问题?\n\n* 原来公司工作流程是怎么样的，如何与其他人协作的？如何夸部门合作的？\n* 你遇到过比较难的技术问题是？你是如何解决的？\n* 设计模式 知道什么是singleton, factory, strategy, decrator么?\n* 常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？\n* 页面重构怎么操作？\n网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。\n也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。\n\n对于传统的网站来说重构通常是：\n\n表格(table)布局改为DIV+CSS\n使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)\n对于移动平台的优化\n针对于SEO进行优化\n深层次的网站重构应该考虑的方面\n\n减少代码间的耦合\n让代码保持弹性\n严格按规范编写代码\n设计可扩展的API\n代替旧有的框架、语言(如VB)\n增强用户体验\n通常来说对于速度的优化也包含在重构中\n\n压缩JS、CSS、image等前端资源(通常是由服务器来解决)\n程序的性能优化(如数据读写)\n采用CDN来加速资源加载\n对于JS DOM的优化\nHTTP服务器的文件缓存\n* 列举IE与其他浏览器不一样的特性？\n1、事件不同之处：\n\n    触发事件的元素被认为是目标（target）。而在 IE 中，目标包含在 event 对象的 srcElement 属性；\n\n    获取字符代码、如果按键代表一个字符（shift、ctrl、alt除外），IE 的 keyCode 会返回字符代码（Unicode），DOM 中按键的代码和字符是分离的，要获取字符代码，需要使用 charCode 属性；\n\n    阻止某个事件的默认行为，IE 中阻止某个事件的默认行为，必须将 returnValue 属性设置为 false，Mozilla 中，需要调用 preventDefault() 方法；\n\n    停止事件冒泡，IE 中阻止事件进一步冒泡，需要设置 cancelBubble 为 true，Mozzilla 中，需要调用 stopPropagation()；\n* 99%的网站都需要被重构是那本书上写的？\n网站重构：应用web标准进行设计（第2版）\n* 什么叫优雅降级和渐进增强？\n优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。\n如：border-shadow\n\n渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。\n如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验；\n* 是否了解公钥加密和私钥加密。\n一般情况下是指私钥用于对数据进行签名，公钥用于对签名进行验证;\nHTTP网站在浏览器端用公钥加密敏感数据，然后在服务器端再用私钥解密。\n* WEB应用从服务器主动推送Data到客户端有那些方式？\nhtml5提供的Websocket\n不可见的iframe\nWebSocket通过Flash\nXHR长时间连接\nXHR Multipart Streaming\n<script>标签的长时间连接(可跨域)\n* 对Node的优点和缺点提出了自己的看法？\n*（优点）因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，\n  因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。\n  此外，与Node代理服务器交互的客户端代码是由javascript语言编写的，\n  因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。\n\n*（缺点）Node是一个相对新的开源项目，所以不太稳定，它总是一直在变，\n  而且缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子。\n* 你有用过哪些前端性能优化的方法？\n  （1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。\n\n  （2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数\n\n  （3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。\n\n  （4） 当需要设置的样式很多时设置className而不是直接操作style。\n\n  （5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。\n\n  （6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。\n\n  （7） 图片预加载，将样式表放在顶部，将脚本放在底部  加上时间戳。\n\n  （8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。\n  对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。\n* http状态码有那些？分别代表是什么意思？\n    简单版\n    [\n        100  Continue   继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息\n        200  OK         正常返回信息\n        201  Created    请求成功并且服务器创建了新的资源\n        202  Accepted   服务器已接受请求，但尚未处理\n        301  Moved Permanently  请求的网页已永久移动到新位置。\n        302 Found       临时性重定向。\n        303 See Other   临时性重定向，且总是使用 GET 请求新的 URI。\n        304  Not Modified 自从上次请求后，请求的网页未修改过。\n\n        400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。\n        401 Unauthorized 请求未授权。\n        403 Forbidden   禁止访问。\n        404 Not Found   找不到如何与 URI 相匹配的资源。\n\n        500 Internal Server Error  最常见的服务器端错误。\n        503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。\n    ]\n\n  完整版\n  1**(信息类)：表示接收到请求并且继续处理\n    100——客户必须继续发出请求\n    101——客户要求服务器根据请求转换HTTP协议版本\n\n  2**(响应成功)：表示动作被成功接收、理解和接受\n    200——表明该请求被成功地完成，所请求的资源发送回客户端\n    201——提示知道新文件的URL\n    202——接受和处理、但处理未完成\n    203——返回信息不确定或不完整\n    204——请求收到，但返回信息为空\n    205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件\n    206——服务器已经完成了部分用户的GET请求\n\n  3**(重定向类)：为了完成指定的动作，必须接受进一步处理\n    300——请求的资源可在多处得到\n    301——本网页被永久性转移到另一个URL\n    302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。\n    303——建议客户访问其他URL或访问方式\n    304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用\n    305——请求的资源必须从服务器指定的地址得到\n    306——前一版本HTTP中使用的代码，现行版本中不再使用\n    307——申明请求的资源临时性删除\n\n  4**(客户端错误类)：请求包含错误语法或不能正确执行\n    400——客户端请求有语法错误，不能被服务器所理解\n    401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用\n    HTTP 401.1 - 未授权：登录失败\n    　　HTTP 401.2 - 未授权：服务器配置问题导致登录失败\n    　　HTTP 401.3 - ACL 禁止访问资源\n    　　HTTP 401.4 - 未授权：授权被筛选器拒绝\n    HTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败\n    402——保留有效ChargeTo头响应\n    403——禁止访问，服务器收到请求，但是拒绝提供服务\n    HTTP 403.1 禁止访问：禁止可执行访问\n    　　HTTP 403.2 - 禁止访问：禁止读访问\n    　　HTTP 403.3 - 禁止访问：禁止写访问\n    　　HTTP 403.4 - 禁止访问：要求 SSL\n    　　HTTP 403.5 - 禁止访问：要求 SSL 128\n    　　HTTP 403.6 - 禁止访问：IP 地址被拒绝\n    　　HTTP 403.7 - 禁止访问：要求客户证书\n    　　HTTP 403.8 - 禁止访问：禁止站点访问\n    　　HTTP 403.9 - 禁止访问：连接的用户过多\n    　　HTTP 403.10 - 禁止访问：配置无效\n    　　HTTP 403.11 - 禁止访问：密码更改\n    　　HTTP 403.12 - 禁止访问：映射器拒绝访问\n    　　HTTP 403.13 - 禁止访问：客户证书已被吊销\n    　　HTTP 403.15 - 禁止访问：客户访问许可过多\n    　　HTTP 403.16 - 禁止访问：客户证书不可信或者无效\n    HTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效\n    404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL\n    405——用户在Request-Line字段定义的方法不允许\n    406——根据用户发送的Accept拖，请求资源不可访问\n    407——类似401，用户必须首先在代理服务器上得到授权\n    408——客户端没有在用户指定的饿时间内完成请求\n    409——对当前资源状态，请求不能完成\n    410——服务器上不再有此资源且无进一步的参考地址\n    411——服务器拒绝用户定义的Content-Length属性请求\n    412——一个或多个请求头字段在当前请求中错误\n    413——请求的资源大于服务器允许的大小\n    414——请求的资源URL长于服务器允许的长度\n    415——请求资源不支持请求项目格式\n    416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段\n    417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。\n\n  5**(服务端错误类)：服务器不能正确执行一个正确的请求\n    HTTP 500 - 服务器遇到错误，无法完成请求\n    　　HTTP 500.100 - 内部服务器错误 - ASP 错误\n    　　HTTP 500-11 服务器关闭\n    　　HTTP 500-12 应用程序重新启动\n    　　HTTP 500-13 - 服务器太忙\n    　　HTTP 500-14 - 应用程序无效\n    　　HTTP 500-15 - 不允许请求 global.asa\n    　　Error 501 - 未实现\n  HTTP 502 - 网关错误\n  HTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常\n* 一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）\n  注：这题胜在区分度高，知识点覆盖广，再不懂的人，也能答出几句，\n  而高手可以根据自己擅长的领域自由发挥，从URL规范、HTTP协议、DNS、CDN、数据库查询、\n  到浏览器流式解析、CSS规则构建、layout、paint、onload/domready、JS执行、JS API绑定等等；\n\n  详细版：\n    1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;\n    2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;\n    3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;\n    4、进行HTTP协议会话，客户端发送报头(请求报头);\n    5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;\n    6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;\n    7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;\n    8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;\n    9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;\n    10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。\n\n  简洁版：\n    浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；\n    服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；\n    浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；\n    载入解析到的资源文件，渲染页面，完成。\n* 部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？\n* 从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?\n* 除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？\n* 你用的得心应手用的熟练地编辑器&开发环境是什么样子？\nSublime Text 3 + 相关插件编写前端代码\nGoogle chrome 、Mozilla Firefox浏览器 +firebug 兼容测试和预览页面UI、动画效果和交互功能\nNode.js+Gulp\ngit 用于版本控制和Code Review\n* 对前端工程师这个职位是怎么样理解的？它的前景会怎么样？\n前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。\n1、实现界面交互\n2、提升用户体验\n3、有了Node.js，前端可以实现服务端的一些事情\n\n\n前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，\n\n参与项目，快速高质量完成实现效果图，精确到1px；\n\n与团队成员，UI设计，产品经理的沟通；\n\n做好的页面结构，页面重构和用户体验；\n\n处理hack，兼容、写出优美的代码格式；\n\n针对服务器的优化、拥抱最新前端技术。\n* 你怎么看待Web App 、hybrid App、Native App？\n* 你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）\n* 你对加班的看法？\n加班就像借钱，原则应当是------救急不救穷\n* 平时如何管理你的项目？\n先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；\n\n编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；\n\n标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；\n\n页面进行标注（例如 页面 模块 开始和结束）；\n\nCSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；\n\nJS 分文件夹存放 命名以该JS功能为准的英文翻译。\n\n图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理\n* 如何设计突发大规模并发架构？\n* 当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？\n* 说说最近最流行的一些东西吧？常去哪些网站？\n    ES6\\WebAssembly\\Node\\MVVM\\Web Components\\React\\React Native\\Webpack 组件化\n* 知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?\n* 移动端（Android IOS）怎么做好用户体验?\n清晰的视觉纵线、\n信息的分组、极致的减法、\n利用选择代替输入、\n标签及文字的排布方式、\n依靠明文确认密码、\n合理的键盘利用、\n* 简单描述一下你做过的移动APP项目研发流程？\n* 你在现在的团队处于什么样的角色，起到了什么明显的作用？\n* 你认为怎样才是全端工程师（Full Stack developer）？\n* 介绍一个你最得意的作品吧？\n* 你有自己的技术博客吗，用了哪些技术？\n* 对前端安全有什么看法？\n* 是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？\n* 项目中遇到国哪些印象深刻的技术难题，具体是什么问题，怎么解决？。\n* 最近在学什么东西？\n* 你的优点是什么？缺点是什么？\n* 如何管理前端团队?\n* 最近在学什么？能谈谈你未来3，5年给自己的规划吗？\n\n1. 极客标签：     http://www.gbtags.com/\n\n2. 码农周刊：     http://weekly.manong.io/issues/\n\n3. 前端周刊：     http://www.feweekly.com/issues\n\n4. 慕课网：       http://www.imooc.com/\n\n5. div.io：         http://div.io\n\n6. Hacker News： https://news.ycombinator.com/news\n\n7. InfoQ：       http://www.infoq.com/\n\n8. w3cplus：     http://www.w3cplus.com/\n\n9. Stack Overflow： http://stackoverflow.com/\n\n10.w3school：    http://www.w3school.com.cn/\n\n11.mozilla：     https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\n\n1. jQuery 基本原理\n2. JavaScript 秘密花园\n3. CSS参考手册\n4. JavaScript 标准参考教程\n5. ECMAScript 6入门\n\n爱机车、爱骑行、爱旅行、爱摄影、爱阅读的前端开发攻城师。\n\n我的微博：http://weibo.com/920802999\n* Desktop version","source":"_posts/前端面试常见集合.md","raw":"---\ntitle: 常见一些前端问题\ndate: 2017-12-11 20:29:12\ntags: \n- 面试\ncategories:\n- 面试\n---\n\nlink: markyun / My-blog\nFront-end-Developer-Questions/Questions-and-Answers/README.md\n\n\n只看问题点这里\n看全部问题和答案点这里\n本文由我收集总结了一些前端面试题，初学者阅后也要用心钻研其中的原理，重要知识需要系统学习、透彻学习，形成自己的知识链。万不可投机取巧，临时抱佛脚只求面试侥幸混过关是错误的！也是不可能的！不可能的！不可能的！\n前端还是一个年轻的行业，新的行业标准， 框架， 库都不断在更新和新增，正如赫门在2015深JS大会上的《前端服务化之路》主题演讲中说的一句话：“每18至24个月，前端都会难一倍”，这些变化使前端的能力更加丰富、创造的应用也会更加完美。所以关注各种前端技术，跟上快速变化的节奏，也是身为一个前端程序员必备的技能之一。\n最近也收到许多微博私信的鼓励和更正题目信息，后面会经常更新题目和答案到github博客。希望前端er达到既能使用也会表达，对理论知识有自己的理解。可根据下面的知识点一个一个去进阶学习，形成自己的职业技能链。\n面试有几点需注意：(来源寒冬winter 老师，github:@wintercn)\n1. 面试题目： 根据你的等级和职位的变化，入门级到专家级，广度和深度都会有所增加。\n2. 题目类型： 理论知识、算法、项目细节、技术视野、开放性题、工作案例。\n3. 细节追问： 可以确保问到你开始不懂或面试官开始不懂为止，这样可以大大延展题目的区分度和深度，知道你的实际能力。因为这种知识关联是长时期的学习，临时抱佛脚绝对是记不住的。\n4. 回答问题再棒，面试官（可能是你面试职位的直接领导），会考虑我要不要这个人做我的同事？所以态度很重要、除了能做事，还要会做人。（感觉更像是相亲( •̣̣̣̣̣̥́௰•̣̣̣̣̣̥̀ )）\n5. 资深的前端开发能把absolute和relative弄混，这样的人不要也罢，因为团队需要的是：你这个人具有可以依靠的才能（靠谱）。\n前端开发知识点：\nHTML&CSS：\n    对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级、\n    HTML5、CSS3、Flexbox\n\nJavaScript：\n    数据类型、运算、对象、Function、继承、闭包、作用域、原型链、事件、RegExp、JSON、Ajax、\n    DOM、BOM、内存泄漏、跨域、异步装载、模板引擎、前端MVC、路由、模块化、Canvas、ECMAScript 6、Nodejs\n\n其他：\n    移动端、响应式、自动化构建、HTTP、离线存储、WEB安全、优化、重构、团队协作、可维护、易用性、SEO、UED、架构、职业生涯、快速学习能力\n作为一名前端工程师，无论工作年头长短都应该掌握的知识点：\n此条由 王子墨 发表在 攻城师的实验室\n    1、DOM结构 —— 两个节点之间可能存在哪些关系以及如何在节点之间任意移动。\n\n    2、DOM操作 —— 如何添加、移除、移动、复制、创建和查找节点等。\n\n    3、事件 —— 如何使用事件，以及IE和标准DOM事件模型之间存在的差别。\n\n    4、XMLHttpRequest —— 这是什么、怎样完整地执行一次GET请求、怎样检测错误。\n\n    5、严格模式与混杂模式 —— 如何触发这两种模式，区分它们有何意义。\n\n    6、盒模型 —— 外边距、内边距和边框之间的关系，及IE8以下版本的浏览器中的盒模型\n\n    7、块级元素与行内元素 —— 怎么用CSS控制它们、以及如何合理的使用它们\n\n    8、浮动元素 —— 怎么使用它们、它们有什么问题以及怎么解决这些问题。\n\n    9、HTML与XHTML —— 二者有什么区别，你觉得应该使用哪一个并说出理由。\n\n    10、JSON —— 作用、用途、设计结构。\n备注：\n根据自己需要选择性阅读，面试题是对理论知识的总结，让自己学会应该如何表达。\n\n资料答案不够正确和全面，欢迎欢迎Star和提交issues。\n\n格式不断修改更新中。\n\n更新记录：\n2016年3月25日：新增ECMAScript6 相关问题\n\n\n* Doctype作用？标准模式与兼容模式各有什么区别?\n（1）、<!DOCTYPE>声明位于位于HTML文档中的第一行，处于 <html> 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。\n\n（2）、标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。\n* HTML5 为什么只需要写 <!DOCTYPE HTML>？\n HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；\n\n 而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。\n* 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？\n首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。\n\n（1）行内元素有：a b span img input select strong（强调的语气）\n（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p\n\n（3）常见的空元素：\n    \n <hr> <img> <input> <link> <meta>\n    鲜为人知的是：\n    <area> <base> <col> <command> <embed> <keygen> <param> <source> <track> <wbr>\n* 页面导入样式时，使用link和@import有什么区别？\n（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;\n\n（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;\n\n（3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;\n* 介绍一下你对浏览器内核的理解？\n主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。\n渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。\n\nJS引擎则：解析和执行javascript来实现网页的动态效果。\n\n最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。\n* 常见的浏览器内核有哪些？\nTrident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]\nGecko内核：Netscape6及以上版本，FF,MozillaSuite/SeaMonkey等\nPresto内核：Opera7及以上。      [Opera内核原为：Presto，现为：Blink;]\nWebkit内核：Safari,Chrome等。   [ Chrome的：Blink（WebKit的分支）]\n详细文章：浏览器内核的解析和对比\n* html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？\n* HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。\n      绘画 canvas;\n      用于媒介回放的 video 和 audio 元素;\n      本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;\n      sessionStorage 的数据在浏览器关闭后自动删除;\n      语意化更好的内容元素，比如 article、footer、header、nav、section;\n      表单控件，calendar、date、time、email、url、search;\n      新的技术webworker, websocket, Geolocation;\n\n  移除的元素：\n      纯表现的元素：basefont，big，center，font, s，strike，tt，u;\n      对可用性产生负面影响的元素：frame，frameset，noframes；\n\n* 支持HTML5新标签：\n     IE8/IE7/IE6支持通过document.createElement方法产生的标签，\n     可以利用这一特性让这些浏览器支持HTML5新标签，\n     浏览器支持新标签后，还需要添加标签默认的样式。\n\n     当然也可以直接使用成熟的框架、比如html5shim;\n     <!--[if lt IE 9]>\n        <script> src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"</script>\n     <![endif]-->\n\n* 如何区分HTML5： DOCTYPE声明\\新增的结构元素\\功能元素\n* 简述一下你对HTML语义化的理解？\n用正确的标签做正确的事情。\nhtml语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;\n即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;\n搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;\n使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。\n* HTML5的离线储存怎么使用，工作原理能不能解释一下？\n在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。\n原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。\n\n\n如何使用：\n1、页面头部像下面一样加入一个manifest的属性；\n2、在cache.manifest文件的编写离线存储的资源；\n    CACHE MANIFEST\n    #v0.11\n    CACHE:\n    js/app.js\n    css/style.css\n    NETWORK:\n    resourse/logo.png\n    FALLBACK:\n    / /offline.html\n3、在离线状态时，操作window.applicationCache进行需求实现。\n详细的使用请参考：有趣的HTML5：离线存储\n* 浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？\n在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。\n离线的情况下，浏览器就直接使用离线存储的资源。\n详细的使用请参考：有趣的HTML5：离线存储\n* 请描述一下 cookies，sessionStorage 和 localStorage 的区别？\ncookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。\ncookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。\nsessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。\n\n存储大小：\n    cookie数据大小不能超过4k。\n    sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。\n\n有期时间：\n    localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；\n    sessionStorage  数据在当前浏览器窗口关闭后自动删除。\n    cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭\n* iframe有那些缺点？\n*iframe会阻塞主页面的Onload事件；\n*搜索引擎的检索程序无法解读这种页面，不利于SEO;\n\n*iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。\n\n使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript\n动态给iframe添加src属性值，这样可以绕开以上两个问题。\n* Label的作用是什么？是怎么用的？\nlabel标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。\n\n<label for=\"Name\">Number:</label>\n<input type=“text“name=\"Name\" id=\"Name\"/>\n\n<label>Date:<input type=\"text\" name=\"B\"/></label>\n* HTML5的form如何关闭自动完成功能？\n给不想要提示的 form 或某个 input 设置为 autocomplete=off。\n* 如何实现浏览器内多个标签页之间的通信? (阿里)\nWebSocket、SharedWorker；\n也可以调用localstorge、cookies等本地存储方式；\n\nlocalstorge另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，\n我们通过监听事件，控制它的值来进行页面信息通信；\n注意quirks：Safari 在无痕模式下设置localstorge值时会抛出 QuotaExceededError 的异常；\n* webSocket如何兼容低浏览器？(阿里)\nAdobe Flash Socket 、\nActiveX HTMLFile (IE) 、\n基于 multipart 编码发送 XHR 、\n基于长轮询的 XHR\n* 页面可见性（Page Visibility API） 可以有哪些用途？\n通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;\n在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；\n* 如何在页面上实现一个圆形的可点击区域？\n1、map+area或者svg\n2、border-radius\n3、纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等\n* 实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。\n<div style=\"height:1px;overflow:hidden;background:red\"></div>\n* 网页验证码是干嘛的，是为了解决什么安全问题。\n区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水；\n有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。\n* title与h1的区别、b与strong的区别、i与em的区别？\ntitle属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；\n\nstrong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：<strong>会重读，而<B>是展示强调内容。\n\ni内容展示为斜体，em表示强调的文本；\n\nPhysical Style Elements -- 自然样式标签\nb, i, u, s, pre\nSemantic Style Elements -- 语义样式标签\nstrong, em, ins, del, code\n应该准确使用语义样式标签, 但不能滥用, 如果不能确定时首选使用自然样式标签。\n\n* 介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？\n（1）有两种， IE 盒子模型、W3C 盒子模型；\n（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)；\n（3）区  别： IE的content部分把 border 和 padding计算了进去;\n* CSS选择符有哪些？哪些属性可以继承？\n*   1.id选择器（ # myid）\n    2.类选择器（.myclassname）\n    3.标签选择器（div, h1, p）\n    4.相邻选择器（h1 + p）\n    5.子选择器（ul > li）\n    6.后代选择器（li a）\n    7.通配符选择器（ * ）\n    8.属性选择器（a[rel = \"external\"]）\n    9.伪类选择器（a:hover, li:nth-child）\n\n*   可继承的样式： font-size font-family color, UL LI DL DD DT;\n\n*   不可继承的样式：border padding margin width height ;\n* CSS优先级算法如何计算？\n*   优先级就近原则，同权重情况下样式定义最近者为准;\n\n*   载入样式以最后载入的定位为准;\n\n优先级为:\n   !important >  id > class > tag\n    important 比 内联优先级高\n* CSS3新增伪类有那些？\n    举例：\n    p:first-of-type 选择属于其父元素的首个 <p> 元素的每个 <p> 元素。\n    p:last-of-type  选择属于其父元素的最后 <p> 元素的每个 <p> 元素。\n    p:only-of-type  选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。\n    p:only-child        选择属于其父元素的唯一子元素的每个 <p> 元素。\n    p:nth-child(2)  选择属于其父元素的第二个子元素的每个 <p> 元素。\n\n    :after          在元素之前添加内容,也可以用来做清除浮动。\n    :before         在元素之后添加内容\n    :enabled        \n    :disabled       控制表单控件的禁用状态。\n    :checked        单选框或复选框被选中。\n* 如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？\n    * 给div设置一个宽度，然后添加margin:0 auto属性\ndiv{\n    width:200px;\n    margin:0 auto;\n }\n    * 居中一个浮动元素\n  确定容器的宽高 宽500 高 300 的层\n  设置层的外边距\n\n .div {\n      width:500px ; height:300px;//高度可以不设\n      margin: -150px 0 0 -250px;\n      position:relative;         //相对定位\n      background-color:pink;     //方便看效果\n      left:50%;\n      top:50%;\n }\n    * 让绝对定位的div居中\n  position: absolute;\n  width: 1200px;\n  background: none;\n  margin: 0 auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n* display有哪些值？说明他们的作用。\n  block         象块类型元素一样显示。\n  none          缺省值。象行内元素类型一样显示。\n  inline-block  象行内元素一样显示，但其内容象块类型元素一样显示。\n  list-item     象块类型元素一样显示，并添加样式列表标记。\n  table         此元素会作为块级表格来显示\n  inherit       规定应该从父元素继承 display 属性的值\n* pposition的值relative和absolute定位原点是？\n  absolute\n    生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。\n  fixed （老IE不支持）\n    生成绝对定位的元素，相对于浏览器窗口进行定位。\n  relative\n    生成相对定位的元素，相对于其正常位置进行定位。\n  static\n    默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。\n  inherit\n    规定从父元素继承 position 属性的值。\n* CSS3有哪些新特性？\n  新增各种CSS选择器  （: not(.input)：所有 class 不是“input”的节点）\n  圆角           （border-radius:8px）\n  多列布局        （multi-column layout）\n  阴影和反射        （Shadow\\Reflect）\n  文字特效      （text-shadow、）\n  文字渲染      （Text-decoration）\n  线性渐变      （gradient）\n  旋转          （transform）\n  增加了旋转,缩放,定位,倾斜,动画，多背景\n  transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:\n* 请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？\n .\n* 用纯CSS创建一个三角形的原理是什么？\n把上、左、右三条边隐藏掉（颜色设为 transparent）\n#demo {\n  width: 0;\n  height: 0;\n  border-width: 20px;\n  border-style: solid;\n  border-color: transparent transparent red transparent;\n}\n* 一个满屏 品 字布局 如何设计?\n简单的方式：\n    上面的div宽100%，\n    下面的两个div分别宽50%，\n    然后用float或者inline使其不换行即可\n* 经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？\n* png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.\n\n* 浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。\n\n* IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。\n\n  浮动ie产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}\n\n  这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)\n\n  渐进识别的方式，从总体中逐渐排除局部。\n\n  首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。\n  接着，再次使用“+”将IE8和IE7、IE6分离开来，这样IE8已经独立识别。\n\n  css\n      .bb{\n          background-color:#f1ee18;/*所有识别*/\n          .background-color:#00deff\\9; /*IE6、7、8识别*/\n          +background-color:#a200ff;/*IE6、7识别*/\n          _background-color:#1e0bd1;/*IE6识别*/\n      }\n\n*  IE下,可以使用获取常规属性的方法来获取自定义属性,\n   也可以使用getAttribute()获取自定义属性;\n   Firefox下,只能使用getAttribute()获取自定义属性。\n   解决方法:统一通过getAttribute()获取自定义属性。\n\n*  IE下,even对象有x,y属性,但是没有pageX,pageY属性;\n   Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。\n\n*  解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。\n\n*  Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,\n   可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。\n\n超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:\nL-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}\n* li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？\n行框的排列会受到中间空白（回车\\空格）等的影响，因为空格也属于字符,这些空白也会被应用样式，占据空间，所以会有间隔，把字符大小设为0，就没有空格了。\n* 为什么要初始化CSS样式。\n- 因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。\n\n- 当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。\n\n最简单的初始化方法： * {padding: 0; margin: 0;} （强烈不建议）\n\n淘宝的样式初始化代码：\nbody, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }\nbody, button, input, select, textarea { font:12px/1.5tahoma, arial, \\5b8b\\4f53; }\nh1, h2, h3, h4, h5, h6{ font-size:100%; }\naddress, cite, dfn, em, var { font-style:normal; }\ncode, kbd, pre, samp { font-family:couriernew, courier, monospace; }\nsmall{ font-size:12px; }\nul, ol { list-style:none; }\na { text-decoration:none; }\na:hover { text-decoration:underline; }\nsup { vertical-align:text-top; }\nsub{ vertical-align:text-bottom; }\nlegend { color:#000; }\nfieldset, img { border:0; }\nbutton, input, select, textarea { font-size:100%; }\ntable { border-collapse:collapse; border-spacing:0; }\n* absolute的containing block(容器块)计算方式跟正常流有什么不同？\n无论属于哪种，都要先找到其祖先元素中最近的 position 值不为 static 的元素，然后再判断：\n1、若此元素为 inline 元素，则 containing block 为能够包含这个元素生成的第一个和最后一个 inline box 的 padding box (除 margin, border 外的区域) 的最小矩形；\n2、否则,则由这个祖先元素的 padding box 构成。\n如果都找不到，则为 initial containing block。\n\n补充：\n1. static(默认的)/relative：简单说就是它的父元素的内容框（即去掉padding的部分）\n2. absolute: 向上找最近的定位为absolute/relative的元素\n3. fixed: 它的containing block一律为根元素(html/body)，根元素也是initial containing block\n* CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？\n* position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？\n* 对BFC规范(块级格式化上下文：block formatting context)的理解？\n（W3C CSS 2.1 规范中的一个概念,它是一个独立容器，决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用。）\n 一个页面是由很多个 Box 组成的,元素的类型和 display 属性,决定了这个 Box 的类型。\n 不同类型的 Box,会参与不同的 Formatting Context（决定如何渲染文档的容器）,因此Box内的元素会以不同的方式渲染,也就是说BFC内部的元素和外部的元素不会互相影响。\n* css定义的权重\n以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，以下例子是演示各种定义的权重值：\n\n/*权重为1*/\ndiv{\n}\n/*权重为10*/\n.class1{\n}\n/*权重为100*/\n#id1{\n}\n/*权重为100+1=101*/\n#id1 div{\n}\n/*权重为10+1=11*/\n.class1 div{\n}\n/*权重为10+10+1=21*/\n.class1 .class2 div{\n}\n\n如果权重相同，则最后定义的样式会起作用，但是应该避免这种情况出现\n* 请解释一下为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式\n* 移动端的布局用过媒体查询吗？\n* 使用 CSS 预处理器吗？喜欢那个？\nSASS (SASS、LESS没有本质区别，只因为团队前端都是用的SASS)\n* CSS优化、提高性能的方法有哪些？\n* 浏览器是怎样解析CSS选择器的？\n* 在网页中的应该使用奇数还是偶数的字体？为什么呢？\n* margin和padding分别适合什么场景使用？\n* 抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]\n* 元素竖向的百分比设定是相对于容器的高度吗？\n* 全屏滚动的原理是什么？用到了CSS的那些属性？\n* 什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？\n* 视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）\n* ::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。\n* 如何修改chrome记住密码后自动填充表单的黄色背景 ？\n* 你对line-height是如何理解的？\n* 设置元素浮动后，该元素的display值是多少？（自动变成display:block）\n* 怎么让Chrome支持小于12px 的文字？\n* 让页面里的字体变清晰，变细用CSS怎么做？（-webkit-font-smoothing: antialiased;）\n* font-style属性可以让它赋值为“oblique” oblique是什么意思？\n* position:fixed;在android下无效怎么处理？\n* 如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）\n多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms\n* display:inline-block 什么时候会显示间隙？(携程)\n移除空格、使用margin负值、使用font-size:0、letter-spacing、word-spacing\n* overflow: scroll时不能平滑滚动的问题怎么处理？\n* 有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。\n* png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？\n* 什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）\n如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，\n所以不如隔离开。\n\n因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，\n这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。\n\n同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，\n提高了webserver的http请求的解析速度。\n* style标签写在body后与body前有什么区别？\n* 什么是CSS 预处理器 / 后处理器？\n- 预处理器例如：LESS、Sass、Stylus，用来预编译Sass或less，增强了css代码的复用性，\n  还有层级、mixin、变量、循环、函数等，具有很方便的UI组件模块化开发能力，极大的提高工作效率。\n\n- 后处理器例如：PostCSS，通常被视为在完成的样式表中根据CSS规范处理CSS，让其更有效；目前最常做的\n  是给CSS属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。\n\n* 介绍js的基本数据类型。\n Undefined、Null、Boolean、Number、String、Symbol(new in ECMAScript 2015)\n* 介绍js有哪些内置对象？\nObject 是 JavaScript 中所有对象的父对象\n\n数据封装类对象：Object、Array、Boolean、Number 和 String\n其他对象：Function、Arguments、Math、Date、RegExp、Error\n* 说几条写JavaScript的基本规范？\n1.不要在同一行声明多个变量。\n2.请使用 ===/!==来比较true/false或者数值\n3.使用对象字面量替代new Array这种形式\n4.不要使用全局函数。\n5.Switch语句必须带有default分支\n6.函数不应该有时候有返回值，有时候没有返回值。\n7.For循环必须使用大括号\n8.If语句必须使用大括号\n9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。\n* JavaScript原型，原型链 ? 有什么特点？\n每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，\n如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，\n于是就这样一直找下去，也就是我们平时所说的原型链的概念。\n关系：instance.constructor.prototype = instance.__proto__\n\n特点：\nJavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。\n\n\n 当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的话，\n 就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象。\n    function Func(){}\n    Func.prototype.name = \"Sean\";\n    Func.prototype.getInfo = function() {\n      return this.name;\n    }\n    var person = new Func();//现在可以参考var person = Object.create(oldObject);\n    console.log(person.getInfo());//它拥有了Func的属性和方法\n    //\"Sean\"\n    console.log(Func.prototype);\n    // Func { name=\"Sean\", getInfo=function()}\n* JavaScript有几种类型的值？，你能画一下他们的内存图吗？\n栈：原始数据类型（Undefined，Null，Boolean，Number、String） \n堆：引用数据类型（对象、数组和函数）\n\n两种类型的区别是：存储位置不同；\n原始数据类型直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；\n引用数据类型存储在堆(heap)中的对象,占据空间大、大小不固定,如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其\n在栈中的地址，取得地址后从堆中获得实体\n* Javascript如何实现继承？\n1、构造继承\n2、原型继承\n3、实例继承\n4、拷贝继承\n\n原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。\n\n        function Parent(){\n            this.name = 'wang';\n        }\n\n        function Child(){\n            this.age = 28;\n        }\n        Child.prototype = new Parent();//继承了Parent，通过原型\n\n        var demo = new Child();\n        alert(demo.age);\n        alert(demo.name);//得到被继承的属性\n* JavaScript继承的几种实现方式？\n    * 参考：构造函数的继承，非构造函数的继承；\n* javascript创建对象的几种方式？\njavascript创建对象简单的说,无非就是使用内置对象或各种自定义对象，当然还可以用JSON；但写法有很多种，也能混合使用。\n\n\n1、对象字面量的方式   \n\n    person={firstname:\"Mark\",lastname:\"Yun\",age:25,eyecolor:\"black\"};\n\n2、用function来模拟无参的构造函数\n\n    function Person(){}\n    var person=new Person();//定义一个function，如果使用new\"实例化\",该function可以看作是一个Class\n    person.name=\"Mark\";\n    person.age=\"25\";\n    person.work=function(){\n    alert(person.name+\" hello...\");\n    }\n    person.work();\n\n3、用function来模拟参构造函数来实现（用this关键字定义构造的上下文属性）\n\n    function Pet(name,age,hobby){\n       this.name=name;//this作用域：当前对象\n       this.age=age;\n       this.hobby=hobby;\n       this.eat=function(){\n          alert(\"我叫\"+this.name+\",我喜欢\"+this.hobby+\",是个程序员\");\n       }\n    }\n    var maidou =new Pet(\"麦兜\",25,\"coding\");//实例化、创建对象\n    maidou.eat();//调用eat方法\n\n\n4、用工厂方式来创建（内置对象）\n\n     var wcDog =new Object();\n     wcDog.name=\"旺财\";\n     wcDog.age=3;\n     wcDog.work=function(){\n       alert(\"我是\"+wcDog.name+\",汪汪汪......\");\n     }\n     wcDog.work();\n\n\n5、用原型方式来创建\n\n    function Dog(){\n\n     }\n     Dog.prototype.name=\"旺财\";\n     Dog.prototype.eat=function(){\n     alert(this.name+\"是个吃货\");\n     }\n     var wangcai =new Dog();\n     wangcai.eat();\n\n\n5、用混合方式来创建\n\n    function Car(name,price){\n      this.name=name;\n      this.price=price; \n    }\n     Car.prototype.sell=function(){\n       alert(\"我是\"+this.name+\"，我现在卖\"+this.price+\"万元\");\n      }\n    var camry =new Car(\"凯美瑞\",27);\n    camry.sell(); \n* Javascript作用链域?\n全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。\n当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，\n直至全局函数，这种组织形式就是作用域链。\n* 谈谈This对象的理解。\n    * this总是指向函数的直接调用者（而非间接调用者）；\n    * 如果有new关键字，this指向new出来的那个对象；\n    * 在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；\n* eval是做什么的？\n它的功能是把对应的字符串解析成JS代码并运行；\n应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。\n由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval('('+ str +')');\n* 什么是window对象? 什么是document对象?\n* null，undefined 的区别？\nnull        表示一个对象被定义了，值为“空值”；\nundefined   表示不存在这个值。\n\n\ntypeof undefined\n    //\"undefined\"\n    undefined :是一个表示\"无\"的原始值或者说表示\"缺少值\"，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined； \n    例如变量被声明了，但没有赋值时，就等于undefined\n\ntypeof null\n    //\"object\"\n    null : 是一个对象(空对象, 没有任何属性和方法)；\n    例如作为函数的参数，表示该函数的参数不是对象；\n\n注意：\n    在验证null时，一定要使用　=== ，因为 == 无法分别 null 和　undefined\n\n\n再来一个例子：\n\n    null\n    Q：有张三这个人么？\n    A：有！\n    Q：张三有房子么？\n    A：没有！\n\n    undefined\n    Q：有张三这个人么？\n    A：没有！\n参考阅读：undefined与null的区别\n* 写一个通用的事件侦听器函数。\n    // event(事件)工具集，来源：github.com/markyun\n    markyun.Event = {\n        // 页面加载完成后\n        readyEvent : function(fn) {\n            if (fn==null) {\n                fn=document;\n            }\n            var oldonload = window.onload;\n            if (typeof window.onload != 'function') {\n                window.onload = fn;\n            } else {\n                window.onload = function() {\n                    oldonload();\n                    fn();\n                };\n            }\n        },\n        // 视能力分别使用dom0||dom2||IE方式 来绑定事件\n        // 参数： 操作的元素,事件名称 ,事件处理程序\n        addEvent : function(element, type, handler) {\n            if (element.addEventListener) {\n                //事件类型、需要执行的函数、是否捕捉\n                element.addEventListener(type, handler, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + type, function() {\n                    handler.call(element);\n                });\n            } else {\n                element['on' + type] = handler;\n            }\n        },\n        // 移除事件\n        removeEvent : function(element, type, handler) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, handler, false);\n            } else if (element.datachEvent) {\n                element.detachEvent('on' + type, handler);\n            } else {\n                element['on' + type] = null;\n            }\n        },\n        // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)\n        stopPropagation : function(ev) {\n            if (ev.stopPropagation) {\n                ev.stopPropagation();\n            } else {\n                ev.cancelBubble = true;\n            }\n        },\n        // 取消事件的默认行为\n        preventDefault : function(event) {\n            if (event.preventDefault) {\n                event.preventDefault();\n            } else {\n                event.returnValue = false;\n            }\n        },\n        // 获取事件目标\n        getTarget : function(event) {\n            return event.target || event.srcElement;\n        },\n        // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；\n        getEvent : function(e) {\n            var ev = e || window.event;\n            if (!ev) {\n                var c = this.getEvent.caller;\n                while (c) {\n                    ev = c.arguments[0];\n                    if (ev && Event == ev.constructor) {\n                        break;\n                    }\n                    c = c.caller;\n                }\n            }\n            return ev;\n        }\n    };\n* [\"1\", \"2\", \"3\"].map(parseInt) 答案是多少？\n [1, NaN, NaN] 因为 parseInt 需要两个参数 (val, radix)，\n 其中 radix 表示解析时用的基数。\n map 传了 3 个 (element, index, array)，对应的 radix 不合法导致解析失败。\n* 事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？\n 1. 我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为。\n 2. 事件处理机制：IE是事件冒泡、Firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件；\n 3. ev.stopPropagation();（旧ie的方法 ev.cancelBubble = true;）\n* 什么是闭包（closure），为什么要用它？\n闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。\n\n闭包的特性：\n\n1.函数内再嵌套函数\n2.内部函数可以引用外层的参数和变量\n3.参数和变量不会被垃圾回收机制回收\n\n//li节点的onclick事件都能正确的弹出当前被点击的li索引\n <ul id=\"testUL\">\n    <li> index = 0</li>\n    <li> index = 1</li>\n    <li> index = 2</li>\n    <li> index = 3</li>\n</ul>\n<script type=\"text/javascript\">\n    var nodes = document.getElementsByTagName(\"li\");\n    for(i = 0;i<nodes.length;i+= 1){\n        nodes[i].onclick = function(){\n            console.log(i+1);//不用闭包的话，值每次都是4\n        }(i);\n    }\n</script>\n\n\n\n执行say667()后,say667()闭包内部变量会存在,而闭包内部函数的内部变量不会存在\n使得Javascript的垃圾回收机制GC不会收回say667()所占用的资源\n因为say667()的内部函数的执行需要依赖say667()中的变量\n这是对闭包作用的非常直白的描述\n\n  function say667() {\n    // Local variable that ends up within closure\n    var num = 666;\n    var sayAlert = function() {\n        alert(num);\n    }\n    num++;\n    return sayAlert;\n}\n\n var sayAlert = say667();\n sayAlert()//执行结果应该弹出的667\n* javascript 代码中的\"use strict\";是什么意思 ? 使用它区别是什么？\nuse strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,\n\n使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为。\n默认支持的糟糕特性都会被禁用，比如不能用with，也不能在意外的情况下给全局变量赋值;\n全局变量的显示声明,函数必须声明在顶层，不允许在非函数代码块内声明函数,arguments.callee也不允许使用；\n消除代码运行的一些不安全之处，保证代码运行的安全,限制函数中的arguments修改，严格模式下的eval函数的行为和非严格模式的也不相同;\n\n提高编译器效率，增加运行速度；\n为未来新版本的Javascript标准化做铺垫。\n* 如何判断一个对象是否属于某个类？\n  使用instanceof （待完善）\n   if(a instanceof Person){\n       alert('yes');\n   }\n* new操作符具体干了什么呢?\n     1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。\n     2、属性和方法被加入到 this 引用的对象中。\n     3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。\n\nvar obj  = {};\nobj.__proto__ = Base.prototype;\nBase.call(obj);\n* 用原生JavaScript的实现过什么功能吗？\n* Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？\nhasOwnProperty\n\njavaScript中hasOwnProperty函数方法是返回一个布尔值，指出一个对象是否具有指定名称的属性。此方法无法检查该对象的原型链中是否具有该属性；该属性必须是对象本身的一个成员。\n使用方法：\nobject.hasOwnProperty(proName)\n其中参数object是必选项。一个对象的实例。\nproName是必选项。一个属性名称的字符串值。\n\n如果 object 具有指定名称的属性，那么JavaScript中hasOwnProperty函数方法返回 true，反之则返回 false。\n* JSON 的了解？\nJSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。\n它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小\n如：{\"age\":\"12\", \"name\":\"back\"}\n\nJSON字符串转换为JSON对象:\nvar obj =eval('('+ str +')');\nvar obj = str.parseJSON();\nvar obj = JSON.parse(str);\n\nJSON对象转换为JSON字符串：\nvar last=obj.toJSONString();\nvar last=JSON.stringify(obj);\n* [].forEach.call($$(\"*\"),function(a){a.style.outline=\"1px solid #\"+(~~(Math.random()*(1<<24))).toString(16)}) 能解释一下这段代码的意思吗？\n* js延迟加载的方式有哪些？\ndefer和async、动态创建DOM方式（用得最多）、按需异步载入js\n* Ajax 是什么? 如何创建一个Ajax？\najax的全称：Asynchronous Javascript And XML。\n异步传输+js+xml。\n所谓异步，在这里简单地解释就是：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验。\n\n(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象\n(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息\n(3)设置响应HTTP请求状态变化的函数\n(4)发送HTTP请求\n(5)获取异步调用返回的数据\n(6)使用JavaScript和DOM实现局部刷新\n* 同步和异步的区别?\n同步的概念应该是来自于OS中关于同步的概念:不同进程为协同完成某项工作而在先后次序上调整(通过阻塞,唤醒等方式).同步强调的是顺序性.谁先谁后.异步则不存在这种顺序性.\n同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作。\n异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。\n（待完善）\n* 如何解决跨域问题?\njsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面\n* 页面编码和被请求的资源编码如果不一致如何处理？\n* 模块化开发怎么做？\n立即执行函数,不暴露私有成员\n    var module1 = (function(){\n    　　　　var _count = 0;\n    　　　　var m1 = function(){\n    　　　　　　//...\n    　　　　};\n    　　　　var m2 = function(){\n    　　　　　　//...\n    　　　　};\n    　　　　return {\n    　　　　　　m1 : m1,\n    　　　　　　m2 : m2\n    　　　　};\n    　　})();\n（待完善）\n* AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？\nAMD 规范在这里：https://github.com/amdjs/amdjs-api/wiki/AMD\nCMD 规范在这里：https://github.com/seajs/seajs/issues/242\nAsynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。\n\n 区别：\n\n    1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.\n    2. CMD 推崇依赖就近，AMD 推崇依赖前置。看代码：\n\n// CMD\ndefine(function(require, exports, module) {\n    var a = require('./a')\n    a.doSomething()\n    // 此处略去 100 行\n    var b = require('./b') // 依赖可以就近书写\n    b.doSomething()\n    // ...\n})\n\n// AMD 默认推荐\ndefine(['./a', './b'], function(a, b) { // 依赖必须一开始就写好\n    a.doSomething()\n    // 此处略去 100 行\n    b.doSomething()\n    // ...\n})\n* requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）\n* 谈一谈你对ECMAScript6的了解？\n* ECMAScript6 怎么写class么，为什么会出现class这种东西?\n* 异步加载JS的方式有哪些？\n  (1) defer，只支持IE\n\n  (2) async：\n\n  (3) 创建script，插入到DOM中，加载完毕后callBack\n* documen.write和 innerHTML的区别\ndocument.write只能重绘整个页面\n\ninnerHTML可以重绘页面的一部分\n* DOM操作——怎样添加、移除、移动、复制、创建和查找节点?\n（1）创建新节点\n  createDocumentFragment()    //创建一个DOM片段\n  createElement()   //创建一个具体的元素\n  createTextNode()   //创建一个文本节点\n（2）添加、移除、替换、插入\n  appendChild()\n  removeChild()\n  replaceChild()\n  insertBefore() //在已有的子节点前插入一个新的子节点\n（3）查找\n  getElementsByTagName()    //通过标签名称\n  getElementsByName()    //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)\n  getElementById()    //通过元素Id，唯一性\n* .call() 和 .apply() 的区别？\n  例子中用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：alert(4);\n\n  注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。\n\n    function add(a,b)\n    {\n        alert(a+b);\n    }\n\n    function sub(a,b)\n    {\n        alert(a-b);\n    }\n\n    add.call(sub,3,1);\n* 数组和对象有哪些原生方法，列举一下？\n* JS 怎么实现一个类。怎么实例化这个类\n* JavaScript中的作用域与变量声明提升？\n* 如何编写高性能的Javascript？\n* 那些操作会造成内存泄漏？\n* JQuery的源码看过吗？能不能简单概况一下它的实现原理？\n* jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？\n* jquery中如何将数组转化为json字符串，然后再转化回来？\n* jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？\n* jquery.extend 与 jquery.fn.extend的区别？\n* jQuery 的队列是如何实现的？队列可以用在哪些地方？\n* 谈一下Jquery中的bind(),live(),delegate(),on()的区别？\n* JQuery一个对象可以同时绑定多个事件，这是如何实现的？\n* 是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？\n* jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）\n* 针对 jQuery性能的优化方法？\n* Jquery与jQuery UI 有啥区别？\n*jQuery是一个js库，主要提供的功能是选择器，属性修改和事件绑定等等。\n\n*jQuery UI则是在jQuery的基础上，利用jQuery的扩展性，设计的插件。\n 提供了一些常用的界面元素，诸如对话框、拖动行为、改变大小行为等等\n* JQuery的源码看过吗？能不能简单说一下它的实现原理？\n* jquery 中如何将数组转化为json字符串，然后再转化回来？\njQuery中没有提供这个功能，所以你需要先编写两个jQuery的扩展：\n    $.fn.stringifyArray = function(array) {\n        return JSON.stringify(array)\n    }\n\n    $.fn.parseArray = function(array) {\n        return JSON.parse(array)\n    }\n\n    然后调用：\n    $(\"\").stringifyArray(array)\n* jQuery和Zepto的区别？各自的使用场景？\n* 针对 jQuery 的优化方法？\n*基于Class的选择性的性能相对于Id选择器开销很大，因为需遍历所有DOM元素。\n\n*频繁操作的DOM，先缓存起来再操作。用Jquery的链式调用更好。\n 比如：var str=$(\"a\").attr(\"href\");\n\n*for (var i = size; i < arr.length; i++) {}\n for 循环每一次循环都查找了数组 (arr) 的.length 属性，在开始循环的时候设置一个变量来存储这个数字，可以让循环跑得更快：\n for (var i = size, length = arr.length; i < length; i++) {}\n* Zepto的点透问题如何解决？\n* jQueryUI如何自定义组件?\n* 需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？\n* 如何判断当前脚本运行在浏览器还是node环境中？（阿里）\n通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中\n* 移动端最小触控区域是多大？\n* jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?\n* 把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？\n* 移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）\n* 知道各种JS框架(Angular, Backbone, Ember, React, Meteor, Knockout...)么? 能讲出他们各自的优点和缺点么?\n* Underscore 对哪些 JS 原生对象进行了扩展以及提供了哪些好用的函数方法？\n* 解释JavaScript中的作用域与变量声明提升？\n* 那些操作会造成内存泄漏？\n内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。\n垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。\n\nsetTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。\n闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）\n* JQuery一个对象可以同时绑定多个事件，这是如何实现的？\n* Node.js的适用场景？\n* (如果会用node)知道route, middleware, cluster, nodemon, pm2, server-side rendering么?\n* 解释一下 Backbone 的 MVC 实现方式？\n* 什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?\n* 知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?\n* 如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?\n* 前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?\n* 简述一下 Handlebars 的基本用法？\n* 简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？\n* 用js实现千位分隔符?(来源：前端农民工，提示：正则+replace)\nfunction commafy(num) {\n     num = num + '';\n     var reg = /(-?d+)(d{3})/;\n\n    if(reg.test(num)){\n     num = num.replace(reg, '$1,$2');\n    }\n    return num;\n}\n* 检测浏览器版本版本有哪些方式？\n功能检测、userAgent特征检测\n\n比如：navigator.userAgent\n//\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36\n  (KHTML, like Gecko) Chrome/41.0.2272.101 Safari/537.36\"\n* What is a Polyfill?\npolyfill 是“在旧版浏览器上复制标准 API 的 JavaScript 补充”,可以动态地加载 JavaScript 代码或库，在不支持这些标准 API 的浏览器中模拟它们。\n例如，geolocation（地理位置）polyfill 可以在 navigator 对象上添加全局的 geolocation 对象，还能添加 getCurrentPosition 函数以及“坐标”回调对象，\n所有这些都是 W3C 地理位置 API 定义的对象和函数。因为 polyfill 模拟标准 API，所以能够以一种面向所有浏览器未来的方式针对这些 API 进行开发，\n一旦对这些 API 的支持变成绝对大多数，则可以方便地去掉 polyfill，无需做任何额外工作。\n* 做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？\n比如： html5shiv、Geolocation、Placeholder \n* 我们给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件，会先执行冒泡还是捕获？\n\n* Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？\n两等号判等，会在比较时进行类型转换；\n三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）； \n\nObject.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，\n但 Object.is(NaN, NaN) 会返回 true.\n\nObject.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。\n\n* react-router 路由系统的实现原理？\n* React中如何解决第三方类库的问题?\n\n* 原来公司工作流程是怎么样的，如何与其他人协作的？如何夸部门合作的？\n* 你遇到过比较难的技术问题是？你是如何解决的？\n* 设计模式 知道什么是singleton, factory, strategy, decrator么?\n* 常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？\n* 页面重构怎么操作？\n网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。\n也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。\n\n对于传统的网站来说重构通常是：\n\n表格(table)布局改为DIV+CSS\n使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)\n对于移动平台的优化\n针对于SEO进行优化\n深层次的网站重构应该考虑的方面\n\n减少代码间的耦合\n让代码保持弹性\n严格按规范编写代码\n设计可扩展的API\n代替旧有的框架、语言(如VB)\n增强用户体验\n通常来说对于速度的优化也包含在重构中\n\n压缩JS、CSS、image等前端资源(通常是由服务器来解决)\n程序的性能优化(如数据读写)\n采用CDN来加速资源加载\n对于JS DOM的优化\nHTTP服务器的文件缓存\n* 列举IE与其他浏览器不一样的特性？\n1、事件不同之处：\n\n    触发事件的元素被认为是目标（target）。而在 IE 中，目标包含在 event 对象的 srcElement 属性；\n\n    获取字符代码、如果按键代表一个字符（shift、ctrl、alt除外），IE 的 keyCode 会返回字符代码（Unicode），DOM 中按键的代码和字符是分离的，要获取字符代码，需要使用 charCode 属性；\n\n    阻止某个事件的默认行为，IE 中阻止某个事件的默认行为，必须将 returnValue 属性设置为 false，Mozilla 中，需要调用 preventDefault() 方法；\n\n    停止事件冒泡，IE 中阻止事件进一步冒泡，需要设置 cancelBubble 为 true，Mozzilla 中，需要调用 stopPropagation()；\n* 99%的网站都需要被重构是那本书上写的？\n网站重构：应用web标准进行设计（第2版）\n* 什么叫优雅降级和渐进增强？\n优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。\n如：border-shadow\n\n渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。\n如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验；\n* 是否了解公钥加密和私钥加密。\n一般情况下是指私钥用于对数据进行签名，公钥用于对签名进行验证;\nHTTP网站在浏览器端用公钥加密敏感数据，然后在服务器端再用私钥解密。\n* WEB应用从服务器主动推送Data到客户端有那些方式？\nhtml5提供的Websocket\n不可见的iframe\nWebSocket通过Flash\nXHR长时间连接\nXHR Multipart Streaming\n<script>标签的长时间连接(可跨域)\n* 对Node的优点和缺点提出了自己的看法？\n*（优点）因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，\n  因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。\n  此外，与Node代理服务器交互的客户端代码是由javascript语言编写的，\n  因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。\n\n*（缺点）Node是一个相对新的开源项目，所以不太稳定，它总是一直在变，\n  而且缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子。\n* 你有用过哪些前端性能优化的方法？\n  （1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。\n\n  （2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数\n\n  （3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。\n\n  （4） 当需要设置的样式很多时设置className而不是直接操作style。\n\n  （5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。\n\n  （6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。\n\n  （7） 图片预加载，将样式表放在顶部，将脚本放在底部  加上时间戳。\n\n  （8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。\n  对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。\n* http状态码有那些？分别代表是什么意思？\n    简单版\n    [\n        100  Continue   继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息\n        200  OK         正常返回信息\n        201  Created    请求成功并且服务器创建了新的资源\n        202  Accepted   服务器已接受请求，但尚未处理\n        301  Moved Permanently  请求的网页已永久移动到新位置。\n        302 Found       临时性重定向。\n        303 See Other   临时性重定向，且总是使用 GET 请求新的 URI。\n        304  Not Modified 自从上次请求后，请求的网页未修改过。\n\n        400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。\n        401 Unauthorized 请求未授权。\n        403 Forbidden   禁止访问。\n        404 Not Found   找不到如何与 URI 相匹配的资源。\n\n        500 Internal Server Error  最常见的服务器端错误。\n        503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。\n    ]\n\n  完整版\n  1**(信息类)：表示接收到请求并且继续处理\n    100——客户必须继续发出请求\n    101——客户要求服务器根据请求转换HTTP协议版本\n\n  2**(响应成功)：表示动作被成功接收、理解和接受\n    200——表明该请求被成功地完成，所请求的资源发送回客户端\n    201——提示知道新文件的URL\n    202——接受和处理、但处理未完成\n    203——返回信息不确定或不完整\n    204——请求收到，但返回信息为空\n    205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件\n    206——服务器已经完成了部分用户的GET请求\n\n  3**(重定向类)：为了完成指定的动作，必须接受进一步处理\n    300——请求的资源可在多处得到\n    301——本网页被永久性转移到另一个URL\n    302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。\n    303——建议客户访问其他URL或访问方式\n    304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用\n    305——请求的资源必须从服务器指定的地址得到\n    306——前一版本HTTP中使用的代码，现行版本中不再使用\n    307——申明请求的资源临时性删除\n\n  4**(客户端错误类)：请求包含错误语法或不能正确执行\n    400——客户端请求有语法错误，不能被服务器所理解\n    401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用\n    HTTP 401.1 - 未授权：登录失败\n    　　HTTP 401.2 - 未授权：服务器配置问题导致登录失败\n    　　HTTP 401.3 - ACL 禁止访问资源\n    　　HTTP 401.4 - 未授权：授权被筛选器拒绝\n    HTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败\n    402——保留有效ChargeTo头响应\n    403——禁止访问，服务器收到请求，但是拒绝提供服务\n    HTTP 403.1 禁止访问：禁止可执行访问\n    　　HTTP 403.2 - 禁止访问：禁止读访问\n    　　HTTP 403.3 - 禁止访问：禁止写访问\n    　　HTTP 403.4 - 禁止访问：要求 SSL\n    　　HTTP 403.5 - 禁止访问：要求 SSL 128\n    　　HTTP 403.6 - 禁止访问：IP 地址被拒绝\n    　　HTTP 403.7 - 禁止访问：要求客户证书\n    　　HTTP 403.8 - 禁止访问：禁止站点访问\n    　　HTTP 403.9 - 禁止访问：连接的用户过多\n    　　HTTP 403.10 - 禁止访问：配置无效\n    　　HTTP 403.11 - 禁止访问：密码更改\n    　　HTTP 403.12 - 禁止访问：映射器拒绝访问\n    　　HTTP 403.13 - 禁止访问：客户证书已被吊销\n    　　HTTP 403.15 - 禁止访问：客户访问许可过多\n    　　HTTP 403.16 - 禁止访问：客户证书不可信或者无效\n    HTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效\n    404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL\n    405——用户在Request-Line字段定义的方法不允许\n    406——根据用户发送的Accept拖，请求资源不可访问\n    407——类似401，用户必须首先在代理服务器上得到授权\n    408——客户端没有在用户指定的饿时间内完成请求\n    409——对当前资源状态，请求不能完成\n    410——服务器上不再有此资源且无进一步的参考地址\n    411——服务器拒绝用户定义的Content-Length属性请求\n    412——一个或多个请求头字段在当前请求中错误\n    413——请求的资源大于服务器允许的大小\n    414——请求的资源URL长于服务器允许的长度\n    415——请求资源不支持请求项目格式\n    416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段\n    417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。\n\n  5**(服务端错误类)：服务器不能正确执行一个正确的请求\n    HTTP 500 - 服务器遇到错误，无法完成请求\n    　　HTTP 500.100 - 内部服务器错误 - ASP 错误\n    　　HTTP 500-11 服务器关闭\n    　　HTTP 500-12 应用程序重新启动\n    　　HTTP 500-13 - 服务器太忙\n    　　HTTP 500-14 - 应用程序无效\n    　　HTTP 500-15 - 不允许请求 global.asa\n    　　Error 501 - 未实现\n  HTTP 502 - 网关错误\n  HTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常\n* 一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）\n  注：这题胜在区分度高，知识点覆盖广，再不懂的人，也能答出几句，\n  而高手可以根据自己擅长的领域自由发挥，从URL规范、HTTP协议、DNS、CDN、数据库查询、\n  到浏览器流式解析、CSS规则构建、layout、paint、onload/domready、JS执行、JS API绑定等等；\n\n  详细版：\n    1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;\n    2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;\n    3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;\n    4、进行HTTP协议会话，客户端发送报头(请求报头);\n    5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;\n    6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;\n    7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;\n    8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;\n    9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;\n    10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。\n\n  简洁版：\n    浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；\n    服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；\n    浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；\n    载入解析到的资源文件，渲染页面，完成。\n* 部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？\n* 从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?\n* 除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？\n* 你用的得心应手用的熟练地编辑器&开发环境是什么样子？\nSublime Text 3 + 相关插件编写前端代码\nGoogle chrome 、Mozilla Firefox浏览器 +firebug 兼容测试和预览页面UI、动画效果和交互功能\nNode.js+Gulp\ngit 用于版本控制和Code Review\n* 对前端工程师这个职位是怎么样理解的？它的前景会怎么样？\n前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。\n1、实现界面交互\n2、提升用户体验\n3、有了Node.js，前端可以实现服务端的一些事情\n\n\n前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，\n\n参与项目，快速高质量完成实现效果图，精确到1px；\n\n与团队成员，UI设计，产品经理的沟通；\n\n做好的页面结构，页面重构和用户体验；\n\n处理hack，兼容、写出优美的代码格式；\n\n针对服务器的优化、拥抱最新前端技术。\n* 你怎么看待Web App 、hybrid App、Native App？\n* 你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）\n* 你对加班的看法？\n加班就像借钱，原则应当是------救急不救穷\n* 平时如何管理你的项目？\n先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；\n\n编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；\n\n标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；\n\n页面进行标注（例如 页面 模块 开始和结束）；\n\nCSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；\n\nJS 分文件夹存放 命名以该JS功能为准的英文翻译。\n\n图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理\n* 如何设计突发大规模并发架构？\n* 当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？\n* 说说最近最流行的一些东西吧？常去哪些网站？\n    ES6\\WebAssembly\\Node\\MVVM\\Web Components\\React\\React Native\\Webpack 组件化\n* 知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?\n* 移动端（Android IOS）怎么做好用户体验?\n清晰的视觉纵线、\n信息的分组、极致的减法、\n利用选择代替输入、\n标签及文字的排布方式、\n依靠明文确认密码、\n合理的键盘利用、\n* 简单描述一下你做过的移动APP项目研发流程？\n* 你在现在的团队处于什么样的角色，起到了什么明显的作用？\n* 你认为怎样才是全端工程师（Full Stack developer）？\n* 介绍一个你最得意的作品吧？\n* 你有自己的技术博客吗，用了哪些技术？\n* 对前端安全有什么看法？\n* 是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？\n* 项目中遇到国哪些印象深刻的技术难题，具体是什么问题，怎么解决？。\n* 最近在学什么东西？\n* 你的优点是什么？缺点是什么？\n* 如何管理前端团队?\n* 最近在学什么？能谈谈你未来3，5年给自己的规划吗？\n\n1. 极客标签：     http://www.gbtags.com/\n\n2. 码农周刊：     http://weekly.manong.io/issues/\n\n3. 前端周刊：     http://www.feweekly.com/issues\n\n4. 慕课网：       http://www.imooc.com/\n\n5. div.io：         http://div.io\n\n6. Hacker News： https://news.ycombinator.com/news\n\n7. InfoQ：       http://www.infoq.com/\n\n8. w3cplus：     http://www.w3cplus.com/\n\n9. Stack Overflow： http://stackoverflow.com/\n\n10.w3school：    http://www.w3school.com.cn/\n\n11.mozilla：     https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\n\n1. jQuery 基本原理\n2. JavaScript 秘密花园\n3. CSS参考手册\n4. JavaScript 标准参考教程\n5. ECMAScript 6入门\n\n爱机车、爱骑行、爱旅行、爱摄影、爱阅读的前端开发攻城师。\n\n我的微博：http://weibo.com/920802999\n* Desktop version","slug":"前端面试常见集合","published":1,"updated":"2023-05-30T03:52:46.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa42o001hjza5bi9p2up4","content":"<p>link: markyun &#x2F; My-blog<br>Front-end-Developer-Questions&#x2F;Questions-and-Answers&#x2F;README.md</p>\n<p>只看问题点这里<br>看全部问题和答案点这里<br>本文由我收集总结了一些前端面试题，初学者阅后也要用心钻研其中的原理，重要知识需要系统学习、透彻学习，形成自己的知识链。万不可投机取巧，临时抱佛脚只求面试侥幸混过关是错误的！也是不可能的！不可能的！不可能的！<br>前端还是一个年轻的行业，新的行业标准， 框架， 库都不断在更新和新增，正如赫门在2015深JS大会上的《前端服务化之路》主题演讲中说的一句话：“每18至24个月，前端都会难一倍”，这些变化使前端的能力更加丰富、创造的应用也会更加完美。所以关注各种前端技术，跟上快速变化的节奏，也是身为一个前端程序员必备的技能之一。<br>最近也收到许多微博私信的鼓励和更正题目信息，后面会经常更新题目和答案到github博客。希望前端er达到既能使用也会表达，对理论知识有自己的理解。可根据下面的知识点一个一个去进阶学习，形成自己的职业技能链。<br>面试有几点需注意：(来源寒冬winter 老师，github:@wintercn)</p>\n<ol>\n<li>面试题目： 根据你的等级和职位的变化，入门级到专家级，广度和深度都会有所增加。</li>\n<li>题目类型： 理论知识、算法、项目细节、技术视野、开放性题、工作案例。</li>\n<li>细节追问： 可以确保问到你开始不懂或面试官开始不懂为止，这样可以大大延展题目的区分度和深度，知道你的实际能力。因为这种知识关联是长时期的学习，临时抱佛脚绝对是记不住的。</li>\n<li>回答问题再棒，面试官（可能是你面试职位的直接领导），会考虑我要不要这个人做我的同事？所以态度很重要、除了能做事，还要会做人。（感觉更像是相亲( •̣̣̣̣̣̥́௰•̣̣̣̣̣̥̀ )）</li>\n<li>资深的前端开发能把absolute和relative弄混，这样的人不要也罢，因为团队需要的是：你这个人具有可以依靠的才能（靠谱）。<br>前端开发知识点：<br>HTML&amp;CSS：<br> 对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级、<br> HTML5、CSS3、Flexbox</li>\n</ol>\n<p>JavaScript：<br>    数据类型、运算、对象、Function、继承、闭包、作用域、原型链、事件、RegExp、JSON、Ajax、<br>    DOM、BOM、内存泄漏、跨域、异步装载、模板引擎、前端MVC、路由、模块化、Canvas、ECMAScript 6、Nodejs</p>\n<p>其他：<br>    移动端、响应式、自动化构建、HTTP、离线存储、WEB安全、优化、重构、团队协作、可维护、易用性、SEO、UED、架构、职业生涯、快速学习能力<br>作为一名前端工程师，无论工作年头长短都应该掌握的知识点：<br>此条由 王子墨 发表在 攻城师的实验室<br>    1、DOM结构 —— 两个节点之间可能存在哪些关系以及如何在节点之间任意移动。</p>\n<pre><code>2、DOM操作 —— 如何添加、移除、移动、复制、创建和查找节点等。\n\n3、事件 —— 如何使用事件，以及IE和标准DOM事件模型之间存在的差别。\n\n4、XMLHttpRequest —— 这是什么、怎样完整地执行一次GET请求、怎样检测错误。\n\n5、严格模式与混杂模式 —— 如何触发这两种模式，区分它们有何意义。\n\n6、盒模型 —— 外边距、内边距和边框之间的关系，及IE8以下版本的浏览器中的盒模型\n\n7、块级元素与行内元素 —— 怎么用CSS控制它们、以及如何合理的使用它们\n\n8、浮动元素 —— 怎么使用它们、它们有什么问题以及怎么解决这些问题。\n\n9、HTML与XHTML —— 二者有什么区别，你觉得应该使用哪一个并说出理由。\n\n10、JSON —— 作用、用途、设计结构。\n</code></pre>\n<p>备注：<br>根据自己需要选择性阅读，面试题是对理论知识的总结，让自己学会应该如何表达。</p>\n<p>资料答案不够正确和全面，欢迎欢迎Star和提交issues。</p>\n<p>格式不断修改更新中。</p>\n<p>更新记录：<br>2016年3月25日：新增ECMAScript6 相关问题</p>\n<ul>\n<li>Doctype作用？标准模式与兼容模式各有什么区别?<br>（1）、&lt;!DOCTYPE&gt;声明位于位于HTML文档中的第一行，处于 <html> 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。</html></li>\n</ul>\n<p>（2）、标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。</p>\n<ul>\n<li>HTML5 为什么只需要写 <!DOCTYPE HTML>？<br> HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；</li>\n</ul>\n<p> 而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。</p>\n<ul>\n<li>行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？<br>首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。</li>\n</ul>\n<p>（1）行内元素有：a b span img input select strong（强调的语气）<br>（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p</p>\n<p>（3）常见的空元素：</p>\n <hr> <img> <input> <link> <meta>\n    鲜为人知的是：\n    <area> <base> <col> <command> <embed> <keygen> <param> <source> <track> <wbr>\n* 页面导入样式时，使用link和@import有什么区别？\n（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;\n\n<p>（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;</p>\n<p>（3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;</p>\n<ul>\n<li>介绍一下你对浏览器内核的理解？<br>主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。<br>渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。</li>\n</ul>\n<p>JS引擎则：解析和执行javascript来实现网页的动态效果。</p>\n<p>最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。</p>\n<ul>\n<li><p>常见的浏览器内核有哪些？<br>Trident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]<br>Gecko内核：Netscape6及以上版本，FF,MozillaSuite&#x2F;SeaMonkey等<br>Presto内核：Opera7及以上。      [Opera内核原为：Presto，现为：Blink;]<br>Webkit内核：Safari,Chrome等。   [ Chrome的：Blink（WebKit的分支）]<br>详细文章：浏览器内核的解析和对比</p>\n</li>\n<li><p>html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？</p>\n</li>\n<li><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。<br>绘画 canvas;<br>用于媒介回放的 video 和 audio 元素;<br>本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;<br>sessionStorage 的数据在浏览器关闭后自动删除;<br>语意化更好的内容元素，比如 article、footer、header、nav、section;<br>表单控件，calendar、date、time、email、url、search;<br>新的技术webworker, websocket, Geolocation;<br>移除的元素：<br>纯表现的元素：basefont，big，center，font, s，strike，tt，u;<br>对可用性产生负面影响的元素：frame，frameset，noframes；</p>\n</li>\n<li><p>支持HTML5新标签：<br>   IE8&#x2F;IE7&#x2F;IE6支持通过document.createElement方法产生的标签，<br>   可以利用这一特性让这些浏览器支持HTML5新标签，<br>   浏览器支持新标签后，还需要添加标签默认的样式。</p>\n<p>   当然也可以直接使用成熟的框架、比如html5shim;</p>\n   <!--[if lt IE 9]>\n      <script> src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"</script>\n   <![endif]-->\n</li>\n<li><p>如何区分HTML5： DOCTYPE声明\\新增的结构元素\\功能元素</p>\n</li>\n<li><p>简述一下你对HTML语义化的理解？<br>用正确的标签做正确的事情。<br>html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;<br>即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;<br>搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;<br>使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</p>\n</li>\n<li><p>HTML5的离线储存怎么使用，工作原理能不能解释一下？<br>在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。<br>原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。</p>\n</li>\n</ul>\n<p>如何使用：<br>1、页面头部像下面一样加入一个manifest的属性；<br>2、在cache.manifest文件的编写离线存储的资源；<br>    CACHE MANIFEST<br>    #v0.11<br>    CACHE:<br>    js&#x2F;app.js<br>    css&#x2F;style.css<br>    NETWORK:<br>    resourse&#x2F;logo.png<br>    FALLBACK:<br>    &#x2F; &#x2F;offline.html<br>3、在离线状态时，操作window.applicationCache进行需求实现。<br>详细的使用请参考：有趣的HTML5：离线存储</p>\n<ul>\n<li>浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？<br>在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。<br>离线的情况下，浏览器就直接使用离线存储的资源。<br>详细的使用请参考：有趣的HTML5：离线存储</li>\n<li>请描述一下 cookies，sessionStorage 和 localStorage 的区别？<br>cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。<br>cookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。<br>sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。</li>\n</ul>\n<p>存储大小：<br>    cookie数据大小不能超过4k。<br>    sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。</p>\n<p>有期时间：<br>    localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；<br>    sessionStorage  数据在当前浏览器窗口关闭后自动删除。<br>    cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭</p>\n<ul>\n<li>iframe有那些缺点？<br>*iframe会阻塞主页面的Onload事件；<br>*搜索引擎的检索程序无法解读这种页面，不利于SEO;</li>\n</ul>\n<p>*iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</p>\n<p>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript<br>动态给iframe添加src属性值，这样可以绕开以上两个问题。</p>\n<ul>\n<li>Label的作用是什么？是怎么用的？<br>label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</li>\n</ul>\n<p><label for=\"Name\">Number:</label><br>&lt;input type&#x3D;“text“name&#x3D;”Name” id&#x3D;”Name”&#x2F;&gt;</p>\n<p><label>Date:<input type=\"text\" name=\"B\"></label></p>\n<ul>\n<li>HTML5的form如何关闭自动完成功能？<br>给不想要提示的 form 或某个 input 设置为 autocomplete&#x3D;off。</li>\n<li>如何实现浏览器内多个标签页之间的通信? (阿里)<br>WebSocket、SharedWorker；<br>也可以调用localstorge、cookies等本地存储方式；</li>\n</ul>\n<p>localstorge另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，<br>我们通过监听事件，控制它的值来进行页面信息通信；<br>注意quirks：Safari 在无痕模式下设置localstorge值时会抛出 QuotaExceededError 的异常；</p>\n<ul>\n<li>webSocket如何兼容低浏览器？(阿里)<br>Adobe Flash Socket 、<br>ActiveX HTMLFile (IE) 、<br>基于 multipart 编码发送 XHR 、<br>基于长轮询的 XHR</li>\n<li>页面可见性（Page Visibility API） 可以有哪些用途？<br>通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;<br>在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；</li>\n<li>如何在页面上实现一个圆形的可点击区域？<br>1、map+area或者svg<br>2、border-radius<br>3、纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</li>\n<li>实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。<div style=\"height:1px;overflow:hidden;background:red\"></div></li>\n<li>网页验证码是干嘛的，是为了解决什么安全问题。<br>区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水；<br>有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。</li>\n<li>title与h1的区别、b与strong的区别、i与em的区别？<br>title属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；</li>\n</ul>\n<p>strong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：<strong>会重读，而<B>是展示强调内容。</B></strong></p>\n<p>i内容展示为斜体，em表示强调的文本；</p>\n<p>Physical Style Elements – 自然样式标签<br>b, i, u, s, pre<br>Semantic Style Elements – 语义样式标签<br>strong, em, ins, del, code<br>应该准确使用语义样式标签, 但不能滥用, 如果不能确定时首选使用自然样式标签。</p>\n<ul>\n<li><p>介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？<br>（1）有两种， IE 盒子模型、W3C 盒子模型；<br>（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)；<br>（3）区  别： IE的content部分把 border 和 padding计算了进去;</p>\n</li>\n<li><p>CSS选择符有哪些？哪些属性可以继承？</p>\n</li>\n<li><p>1.id选择器（ # myid）<br>2.类选择器（.myclassname）<br>3.标签选择器（div, h1, p）<br>4.相邻选择器（h1 + p）<br>5.子选择器（ul &gt; li）<br>6.后代选择器（li a）<br>7.通配符选择器（ * ）<br>8.属性选择器（a[rel &#x3D; “external”]）<br>9.伪类选择器（a:hover, li:nth-child）</p>\n</li>\n<li><p>可继承的样式： font-size font-family color, UL LI DL DD DT;</p>\n</li>\n<li><p>不可继承的样式：border padding margin width height ;</p>\n</li>\n<li><p>CSS优先级算法如何计算？</p>\n</li>\n<li><p>优先级就近原则，同权重情况下样式定义最近者为准;</p>\n</li>\n<li><p>载入样式以最后载入的定位为准;</p>\n</li>\n</ul>\n<p>优先级为:<br>   !important &gt;  id &gt; class &gt; tag<br>    important 比 内联优先级高</p>\n<ul>\n<li><p>CSS3新增伪类有那些？<br>  举例：<br>  p:first-of-type 选择属于其父元素的首个 </p><p> 元素的每个 </p><p> 元素。<br>  p:last-of-type  选择属于其父元素的最后 </p><p> 元素的每个 </p><p> 元素。<br>  p:only-of-type  选择属于其父元素唯一的 </p><p> 元素的每个 </p><p> 元素。<br>  p:only-child        选择属于其父元素的唯一子元素的每个 </p><p> 元素。<br>  p:nth-child(2)  选择属于其父元素的第二个子元素的每个 </p><p> 元素。</p>\n<p>  :after          在元素之前添加内容,也可以用来做清除浮动。<br>  :before         在元素之后添加内容<br>  :enabled<br>  :disabled       控制表单控件的禁用状态。<br>  :checked        单选框或复选框被选中。</p>\n</li>\n<li><p>如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？</p>\n<ul>\n<li>给div设置一个宽度，然后添加margin:0 auto属性<br>div{<br>  width:200px;<br>  margin:0 auto;<br> }</li>\n<li>居中一个浮动元素<br>确定容器的宽高 宽500 高 300 的层<br>设置层的外边距</li>\n</ul>\n</li>\n</ul>\n<p> .div {<br>      width:500px ; height:300px;&#x2F;&#x2F;高度可以不设<br>      margin: -150px 0 0 -250px;<br>      position:relative;         &#x2F;&#x2F;相对定位<br>      background-color:pink;     &#x2F;&#x2F;方便看效果<br>      left:50%;<br>      top:50%;<br> }<br>    * 让绝对定位的div居中<br>  position: absolute;<br>  width: 1200px;<br>  background: none;<br>  margin: 0 auto;<br>  top: 0;<br>  left: 0;<br>  bottom: 0;<br>  right: 0;</p>\n<ul>\n<li>display有哪些值？说明他们的作用。<br>block         象块类型元素一样显示。<br>none          缺省值。象行内元素类型一样显示。<br>inline-block  象行内元素一样显示，但其内容象块类型元素一样显示。<br>list-item     象块类型元素一样显示，并添加样式列表标记。<br>table         此元素会作为块级表格来显示<br>inherit       规定应该从父元素继承 display 属性的值</li>\n<li>pposition的值relative和absolute定位原点是？<br>absolute<br>  生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。<br>fixed （老IE不支持）<br>  生成绝对定位的元素，相对于浏览器窗口进行定位。<br>relative<br>  生成相对定位的元素，相对于其正常位置进行定位。<br>static<br>  默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。<br>inherit<br>  规定从父元素继承 position 属性的值。</li>\n<li>CSS3有哪些新特性？<br>新增各种CSS选择器  （: not(.input)：所有 class 不是“input”的节点）<br>圆角           （border-radius:8px）<br>多列布局        （multi-column layout）<br>阴影和反射        （Shadow\\Reflect）<br>文字特效      （text-shadow、）<br>文字渲染      （Text-decoration）<br>线性渐变      （gradient）<br>旋转          （transform）<br>增加了旋转,缩放,定位,倾斜,动画，多背景<br>transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:</li>\n<li>请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？<br> .</li>\n<li>用纯CSS创建一个三角形的原理是什么？<br>把上、左、右三条边隐藏掉（颜色设为 transparent）</li>\n</ul>\n<p>#demo {<br>  width: 0;<br>  height: 0;<br>  border-width: 20px;<br>  border-style: solid;<br>  border-color: transparent transparent red transparent;<br>}</p>\n<ul>\n<li><p>一个满屏 品 字布局 如何设计?<br>简单的方式：<br>  上面的div宽100%，<br>  下面的两个div分别宽50%，<br>  然后用float或者inline使其不换行即可</p>\n</li>\n<li><p>经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？</p>\n</li>\n<li><p>png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.</p>\n</li>\n<li><p>浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。</p>\n</li>\n<li><p>IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。</p>\n<p>浮动ie产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}</p>\n<p>这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)</p>\n<p>渐进识别的方式，从总体中逐渐排除局部。</p>\n<p>首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。<br>接着，再次使用“+”将IE8和IE7、IE6分离开来，这样IE8已经独立识别。</p>\n<p>css<br>.bb{<br>    background-color:#f1ee18;&#x2F;<em>所有识别</em>&#x2F;<br>    .background-color:#00deff\\9; &#x2F;<em>IE6、7、8识别</em>&#x2F;<br>    +background-color:#a200ff;&#x2F;<em>IE6、7识别</em>&#x2F;<br>    _background-color:#1e0bd1;&#x2F;<em>IE6识别</em>&#x2F;<br>}</p>\n</li>\n<li><p>IE下,可以使用获取常规属性的方法来获取自定义属性,<br>也可以使用getAttribute()获取自定义属性;<br>Firefox下,只能使用getAttribute()获取自定义属性。<br>解决方法:统一通过getAttribute()获取自定义属性。</p>\n</li>\n<li><p>IE下,even对象有x,y属性,但是没有pageX,pageY属性;<br>Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。</p>\n</li>\n<li><p>解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。</p>\n</li>\n<li><p>Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,<br>可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。</p>\n</li>\n</ul>\n<p>超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:<br>L-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}</p>\n<ul>\n<li>li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？<br>行框的排列会受到中间空白（回车\\空格）等的影响，因为空格也属于字符,这些空白也会被应用样式，占据空间，所以会有间隔，把字符大小设为0，就没有空格了。</li>\n<li>为什么要初始化CSS样式。</li>\n</ul>\n<ul>\n<li><p>因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。</p>\n</li>\n<li><p>当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。</p>\n</li>\n</ul>\n<p>最简单的初始化方法： * {padding: 0; margin: 0;} （强烈不建议）</p>\n<p>淘宝的样式初始化代码：<br>body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }<br>body, button, input, select, textarea { font:12px&#x2F;1.5tahoma, arial, \\5b8b\\4f53; }<br>h1, h2, h3, h4, h5, h6{ font-size:100%; }<br>address, cite, dfn, em, var { font-style:normal; }<br>code, kbd, pre, samp { font-family:couriernew, courier, monospace; }<br>small{ font-size:12px; }<br>ul, ol { list-style:none; }<br>a { text-decoration:none; }<br>a:hover { text-decoration:underline; }<br>sup { vertical-align:text-top; }<br>sub{ vertical-align:text-bottom; }<br>legend { color:#000; }<br>fieldset, img { border:0; }<br>button, input, select, textarea { font-size:100%; }<br>table { border-collapse:collapse; border-spacing:0; }</p>\n<ul>\n<li>absolute的containing block(容器块)计算方式跟正常流有什么不同？<br>无论属于哪种，都要先找到其祖先元素中最近的 position 值不为 static 的元素，然后再判断：<br>1、若此元素为 inline 元素，则 containing block 为能够包含这个元素生成的第一个和最后一个 inline box 的 padding box (除 margin, border 外的区域) 的最小矩形；<br>2、否则,则由这个祖先元素的 padding box 构成。<br>如果都找不到，则为 initial containing block。</li>\n</ul>\n<p>补充：</p>\n<ol>\n<li>static(默认的)&#x2F;relative：简单说就是它的父元素的内容框（即去掉padding的部分）</li>\n<li>absolute: 向上找最近的定位为absolute&#x2F;relative的元素</li>\n<li>fixed: 它的containing block一律为根元素(html&#x2F;body)，根元素也是initial containing block</li>\n</ol>\n<ul>\n<li>CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？</li>\n<li>position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？</li>\n<li>对BFC规范(块级格式化上下文：block formatting context)的理解？<br>（W3C CSS 2.1 规范中的一个概念,它是一个独立容器，决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用。）<br> 一个页面是由很多个 Box 组成的,元素的类型和 display 属性,决定了这个 Box 的类型。<br> 不同类型的 Box,会参与不同的 Formatting Context（决定如何渲染文档的容器）,因此Box内的元素会以不同的方式渲染,也就是说BFC内部的元素和外部的元素不会互相影响。</li>\n<li>css定义的权重<br>以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，以下例子是演示各种定义的权重值：</li>\n</ul>\n<p>&#x2F;<em>权重为1</em>&#x2F;<br>div{<br>}<br>&#x2F;<em>权重为10</em>&#x2F;<br>.class1{<br>}<br>&#x2F;<em>权重为100</em>&#x2F;<br>#id1{<br>}<br>&#x2F;<em>权重为100+1&#x3D;101</em>&#x2F;<br>#id1 div{<br>}<br>&#x2F;<em>权重为10+1&#x3D;11</em>&#x2F;<br>.class1 div{<br>}<br>&#x2F;<em>权重为10+10+1&#x3D;21</em>&#x2F;<br>.class1 .class2 div{<br>}</p>\n<p>如果权重相同，则最后定义的样式会起作用，但是应该避免这种情况出现</p>\n<ul>\n<li>请解释一下为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式</li>\n<li>移动端的布局用过媒体查询吗？</li>\n<li>使用 CSS 预处理器吗？喜欢那个？<br>SASS (SASS、LESS没有本质区别，只因为团队前端都是用的SASS)</li>\n<li>CSS优化、提高性能的方法有哪些？</li>\n<li>浏览器是怎样解析CSS选择器的？</li>\n<li>在网页中的应该使用奇数还是偶数的字体？为什么呢？</li>\n<li>margin和padding分别适合什么场景使用？</li>\n<li>抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]</li>\n<li>元素竖向的百分比设定是相对于容器的高度吗？</li>\n<li>全屏滚动的原理是什么？用到了CSS的那些属性？</li>\n<li>什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？</li>\n<li>视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）</li>\n<li>::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。</li>\n<li>如何修改chrome记住密码后自动填充表单的黄色背景 ？</li>\n<li>你对line-height是如何理解的？</li>\n<li>设置元素浮动后，该元素的display值是多少？（自动变成display:block）</li>\n<li>怎么让Chrome支持小于12px 的文字？</li>\n<li>让页面里的字体变清晰，变细用CSS怎么做？（-webkit-font-smoothing: antialiased;）</li>\n<li>font-style属性可以让它赋值为“oblique” oblique是什么意思？</li>\n<li>position:fixed;在android下无效怎么处理？</li>\n<li>如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）<br>多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1&#x2F;60＊1000ms ＝ 16.7ms</li>\n<li>display:inline-block 什么时候会显示间隙？(携程)<br>移除空格、使用margin负值、使用font-size:0、letter-spacing、word-spacing</li>\n<li>overflow: scroll时不能平滑滚动的问题怎么处理？</li>\n<li>有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。</li>\n<li>png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？</li>\n<li>什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）<br>如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，<br>所以不如隔离开。</li>\n</ul>\n<p>因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，<br>这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。</p>\n<p>同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，<br>提高了webserver的http请求的解析速度。</p>\n<ul>\n<li>style标签写在body后与body前有什么区别？</li>\n<li>什么是CSS 预处理器 &#x2F; 后处理器？</li>\n</ul>\n<ul>\n<li><p>预处理器例如：LESS、Sass、Stylus，用来预编译Sass或less，增强了css代码的复用性，<br>还有层级、mixin、变量、循环、函数等，具有很方便的UI组件模块化开发能力，极大的提高工作效率。</p>\n</li>\n<li><p>后处理器例如：PostCSS，通常被视为在完成的样式表中根据CSS规范处理CSS，让其更有效；目前最常做的<br>是给CSS属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。</p>\n</li>\n</ul>\n<ul>\n<li>介绍js的基本数据类型。<br> Undefined、Null、Boolean、Number、String、Symbol(new in ECMAScript 2015)</li>\n<li>介绍js有哪些内置对象？<br>Object 是 JavaScript 中所有对象的父对象</li>\n</ul>\n<p>数据封装类对象：Object、Array、Boolean、Number 和 String<br>其他对象：Function、Arguments、Math、Date、RegExp、Error</p>\n<ul>\n<li>说几条写JavaScript的基本规范？<br>1.不要在同一行声明多个变量。<br>2.请使用 &#x3D;&#x3D;&#x3D;&#x2F;!&#x3D;&#x3D;来比较true&#x2F;false或者数值<br>3.使用对象字面量替代new Array这种形式<br>4.不要使用全局函数。<br>5.Switch语句必须带有default分支<br>6.函数不应该有时候有返回值，有时候没有返回值。<br>7.For循环必须使用大括号<br>8.If语句必须使用大括号<br>9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。</li>\n<li>JavaScript原型，原型链 ? 有什么特点？<br>每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，<br>如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，<br>于是就这样一直找下去，也就是我们平时所说的原型链的概念。<br>关系：instance.constructor.prototype &#x3D; instance.<strong>proto</strong></li>\n</ul>\n<p>特点：<br>JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。</p>\n<p> 当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的话，<br> 就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象。<br>    function Func(){}<br>    Func.prototype.name &#x3D; “Sean”;<br>    Func.prototype.getInfo &#x3D; function() {<br>      return this.name;<br>    }<br>    var person &#x3D; new Func();&#x2F;&#x2F;现在可以参考var person &#x3D; Object.create(oldObject);<br>    console.log(person.getInfo());&#x2F;&#x2F;它拥有了Func的属性和方法<br>    &#x2F;&#x2F;“Sean”<br>    console.log(Func.prototype);<br>    &#x2F;&#x2F; Func { name&#x3D;”Sean”, getInfo&#x3D;function()}</p>\n<ul>\n<li>JavaScript有几种类型的值？，你能画一下他们的内存图吗？<br>栈：原始数据类型（Undefined，Null，Boolean，Number、String）<br>堆：引用数据类型（对象、数组和函数）</li>\n</ul>\n<p>两种类型的区别是：存储位置不同；<br>原始数据类型直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；<br>引用数据类型存储在堆(heap)中的对象,占据空间大、大小不固定,如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其<br>在栈中的地址，取得地址后从堆中获得实体</p>\n<ul>\n<li>Javascript如何实现继承？<br>1、构造继承<br>2、原型继承<br>3、实例继承<br>4、拷贝继承</li>\n</ul>\n<p>原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。</p>\n<pre><code>    function Parent()&#123;\n        this.name = &#39;wang&#39;;\n    &#125;\n\n    function Child()&#123;\n        this.age = 28;\n    &#125;\n    Child.prototype = new Parent();//继承了Parent，通过原型\n\n    var demo = new Child();\n    alert(demo.age);\n    alert(demo.name);//得到被继承的属性\n</code></pre>\n<ul>\n<li>JavaScript继承的几种实现方式？<ul>\n<li>参考：构造函数的继承，非构造函数的继承；</li>\n</ul>\n</li>\n<li>javascript创建对象的几种方式？<br>javascript创建对象简单的说,无非就是使用内置对象或各种自定义对象，当然还可以用JSON；但写法有很多种，也能混合使用。</li>\n</ul>\n<p>1、对象字面量的方式   </p>\n<pre><code>person=&#123;firstname:&quot;Mark&quot;,lastname:&quot;Yun&quot;,age:25,eyecolor:&quot;black&quot;&#125;;\n</code></pre>\n<p>2、用function来模拟无参的构造函数</p>\n<pre><code>function Person()&#123;&#125;\nvar person=new Person();//定义一个function，如果使用new&quot;实例化&quot;,该function可以看作是一个Class\nperson.name=&quot;Mark&quot;;\nperson.age=&quot;25&quot;;\nperson.work=function()&#123;\nalert(person.name+&quot; hello...&quot;);\n&#125;\nperson.work();\n</code></pre>\n<p>3、用function来模拟参构造函数来实现（用this关键字定义构造的上下文属性）</p>\n<pre><code>function Pet(name,age,hobby)&#123;\n   this.name=name;//this作用域：当前对象\n   this.age=age;\n   this.hobby=hobby;\n   this.eat=function()&#123;\n      alert(&quot;我叫&quot;+this.name+&quot;,我喜欢&quot;+this.hobby+&quot;,是个程序员&quot;);\n   &#125;\n&#125;\nvar maidou =new Pet(&quot;麦兜&quot;,25,&quot;coding&quot;);//实例化、创建对象\nmaidou.eat();//调用eat方法\n</code></pre>\n<p>4、用工厂方式来创建（内置对象）</p>\n<pre><code> var wcDog =new Object();\n wcDog.name=&quot;旺财&quot;;\n wcDog.age=3;\n wcDog.work=function()&#123;\n   alert(&quot;我是&quot;+wcDog.name+&quot;,汪汪汪......&quot;);\n &#125;\n wcDog.work();\n</code></pre>\n<p>5、用原型方式来创建</p>\n<pre><code>function Dog()&#123;\n\n &#125;\n Dog.prototype.name=&quot;旺财&quot;;\n Dog.prototype.eat=function()&#123;\n alert(this.name+&quot;是个吃货&quot;);\n &#125;\n var wangcai =new Dog();\n wangcai.eat();\n</code></pre>\n<p>5、用混合方式来创建</p>\n<pre><code>function Car(name,price)&#123;\n  this.name=name;\n  this.price=price; \n&#125;\n Car.prototype.sell=function()&#123;\n   alert(&quot;我是&quot;+this.name+&quot;，我现在卖&quot;+this.price+&quot;万元&quot;);\n  &#125;\nvar camry =new Car(&quot;凯美瑞&quot;,27);\ncamry.sell(); \n</code></pre>\n<ul>\n<li>Javascript作用链域?<br>全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。<br>当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，<br>直至全局函数，这种组织形式就是作用域链。</li>\n<li>谈谈This对象的理解。<ul>\n<li>this总是指向函数的直接调用者（而非间接调用者）；</li>\n<li>如果有new关键字，this指向new出来的那个对象；</li>\n<li>在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；</li>\n</ul>\n</li>\n<li>eval是做什么的？<br>它的功能是把对应的字符串解析成JS代码并运行；<br>应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。<br>由JSON字符串转换为JSON对象的时候可以用eval，var obj &#x3D;eval(‘(‘+ str +’)’);</li>\n<li>什么是window对象? 什么是document对象?</li>\n<li>null，undefined 的区别？<br>null        表示一个对象被定义了，值为“空值”；<br>undefined   表示不存在这个值。</li>\n</ul>\n<p>typeof undefined<br>    &#x2F;&#x2F;“undefined”<br>    undefined :是一个表示”无”的原始值或者说表示”缺少值”，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined；<br>    例如变量被声明了，但没有赋值时，就等于undefined</p>\n<p>typeof null<br>    &#x2F;&#x2F;“object”<br>    null : 是一个对象(空对象, 没有任何属性和方法)；<br>    例如作为函数的参数，表示该函数的参数不是对象；</p>\n<p>注意：<br>    在验证null时，一定要使用　&#x3D;&#x3D;&#x3D; ，因为 &#x3D;&#x3D; 无法分别 null 和　undefined</p>\n<p>再来一个例子：</p>\n<pre><code>null\nQ：有张三这个人么？\nA：有！\nQ：张三有房子么？\nA：没有！\n\nundefined\nQ：有张三这个人么？\nA：没有！\n</code></pre>\n<p>参考阅读：undefined与null的区别</p>\n<ul>\n<li>写一个通用的事件侦听器函数。<br>  &#x2F;&#x2F; event(事件)工具集，来源：github.com&#x2F;markyun<br>  markyun.Event &#x3D; {<br>  &#x2F;&#x2F; 页面加载完成后<br>  readyEvent : function(fn) {<br>      if (fn&#x3D;&#x3D;null) {<br>          fn&#x3D;document;<br>      }<br>      var oldonload &#x3D; window.onload;<br>      if (typeof window.onload !&#x3D; ‘function’) {<br>          window.onload &#x3D; fn;<br>      } else {<br>          window.onload &#x3D; function() {<br>              oldonload();<br>              fn();<br>          };<br>      }<br>  },<br>  &#x2F;&#x2F; 视能力分别使用dom0||dom2||IE方式 来绑定事件<br>  &#x2F;&#x2F; 参数： 操作的元素,事件名称 ,事件处理程序<br>  addEvent : function(element, type, handler) {<br>      if (element.addEventListener) {<br>          &#x2F;&#x2F;事件类型、需要执行的函数、是否捕捉<br>          element.addEventListener(type, handler, false);<br>      } else if (element.attachEvent) {<br>          element.attachEvent(‘on’ + type, function() {<br>              handler.call(element);<br>          });<br>      } else {<br>          element[‘on’ + type] &#x3D; handler;<br>      }<br>  },<br>  &#x2F;&#x2F; 移除事件<br>  removeEvent : function(element, type, handler) {<br>      if (element.removeEventListener) {<br>          element.removeEventListener(type, handler, false);<br>      } else if (element.datachEvent) {<br>          element.detachEvent(‘on’ + type, handler);<br>      } else {<br>          element[‘on’ + type] &#x3D; null;<br>      }<br>  },<br>  &#x2F;&#x2F; 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)<br>  stopPropagation : function(ev) {<br>      if (ev.stopPropagation) {<br>          ev.stopPropagation();<br>      } else {<br>          ev.cancelBubble &#x3D; true;<br>      }<br>  },<br>  &#x2F;&#x2F; 取消事件的默认行为<br>  preventDefault : function(event) {<br>      if (event.preventDefault) {<br>          event.preventDefault();<br>      } else {<br>          event.returnValue &#x3D; false;<br>      }<br>  },<br>  &#x2F;&#x2F; 获取事件目标<br>  getTarget : function(event) {<br>      return event.target || event.srcElement;<br>  },<br>  &#x2F;&#x2F; 获取event对象的引用，取到事件的所有信息，确保随时能使用event；<br>  getEvent : function(e) {<br>      var ev &#x3D; e || window.event;<br>      if (!ev) {<br>          var c &#x3D; this.getEvent.caller;<br>          while (c) {<br>              ev &#x3D; c.arguments[0];<br>              if (ev &amp;&amp; Event &#x3D;&#x3D; ev.constructor) {<br>                  break;<br>              }<br>              c &#x3D; c.caller;<br>          }<br>      }<br>      return ev;<br>  }<br>  };</li>\n<li>[“1”, “2”, “3”].map(parseInt) 答案是多少？<br> [1, NaN, NaN] 因为 parseInt 需要两个参数 (val, radix)，<br> 其中 radix 表示解析时用的基数。<br> map 传了 3 个 (element, index, array)，对应的 radix 不合法导致解析失败。</li>\n<li>事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？</li>\n</ul>\n<ol>\n<li>我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为。</li>\n<li>事件处理机制：IE是事件冒泡、Firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件；</li>\n<li>ev.stopPropagation();（旧ie的方法 ev.cancelBubble &#x3D; true;）</li>\n</ol>\n<ul>\n<li>什么是闭包（closure），为什么要用它？<br>闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。</li>\n</ul>\n<p>闭包的特性：</p>\n<p>1.函数内再嵌套函数<br>2.内部函数可以引用外层的参数和变量<br>3.参数和变量不会被垃圾回收机制回收</p>\n<p>&#x2F;&#x2F;li节点的onclick事件都能正确的弹出当前被点击的li索引<br> <ul id=\"testUL\"><br>    <li> index &#x3D; 0</li><br>    <li> index &#x3D; 1</li><br>    <li> index &#x3D; 2</li><br>    <li> index &#x3D; 3</li></ul></p>\n\n<script type=\"text/javascript\">\n    var nodes = document.getElementsByTagName(\"li\");\n    for(i = 0;i<nodes.length;i+= 1){\n        nodes[i].onclick = function(){\n            console.log(i+1);//不用闭包的话，值每次都是4\n        }(i);\n    }\n</script>\n\n\n\n<p>执行say667()后,say667()闭包内部变量会存在,而闭包内部函数的内部变量不会存在<br>使得Javascript的垃圾回收机制GC不会收回say667()所占用的资源<br>因为say667()的内部函数的执行需要依赖say667()中的变量<br>这是对闭包作用的非常直白的描述</p>\n<p>  function say667() {<br>    &#x2F;&#x2F; Local variable that ends up within closure<br>    var num &#x3D; 666;<br>    var sayAlert &#x3D; function() {<br>        alert(num);<br>    }<br>    num++;<br>    return sayAlert;<br>}</p>\n<p> var sayAlert &#x3D; say667();<br> sayAlert()&#x2F;&#x2F;执行结果应该弹出的667</p>\n<ul>\n<li>javascript 代码中的”use strict”;是什么意思 ? 使用它区别是什么？<br>use strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,</li>\n</ul>\n<p>使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为。<br>默认支持的糟糕特性都会被禁用，比如不能用with，也不能在意外的情况下给全局变量赋值;<br>全局变量的显示声明,函数必须声明在顶层，不允许在非函数代码块内声明函数,arguments.callee也不允许使用；<br>消除代码运行的一些不安全之处，保证代码运行的安全,限制函数中的arguments修改，严格模式下的eval函数的行为和非严格模式的也不相同;</p>\n<p>提高编译器效率，增加运行速度；<br>为未来新版本的Javascript标准化做铺垫。</p>\n<ul>\n<li>如何判断一个对象是否属于某个类？<br>使用instanceof （待完善）<br> if(a instanceof Person){<br> alert(‘yes’);<br> }</li>\n<li>new操作符具体干了什么呢?<br>   1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。<br>   2、属性和方法被加入到 this 引用的对象中。<br>   3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。</li>\n</ul>\n<p>var obj  &#x3D; {};<br>obj.<strong>proto</strong> &#x3D; Base.prototype;<br>Base.call(obj);</p>\n<ul>\n<li>用原生JavaScript的实现过什么功能吗？</li>\n<li>Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？<br>hasOwnProperty</li>\n</ul>\n<p>javaScript中hasOwnProperty函数方法是返回一个布尔值，指出一个对象是否具有指定名称的属性。此方法无法检查该对象的原型链中是否具有该属性；该属性必须是对象本身的一个成员。<br>使用方法：<br>object.hasOwnProperty(proName)<br>其中参数object是必选项。一个对象的实例。<br>proName是必选项。一个属性名称的字符串值。</p>\n<p>如果 object 具有指定名称的属性，那么JavaScript中hasOwnProperty函数方法返回 true，反之则返回 false。</p>\n<ul>\n<li>JSON 的了解？<br>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。<br>它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小<br>如：{“age”:”12”, “name”:”back”}</li>\n</ul>\n<p>JSON字符串转换为JSON对象:<br>var obj &#x3D;eval(‘(‘+ str +’)’);<br>var obj &#x3D; str.parseJSON();<br>var obj &#x3D; JSON.parse(str);</p>\n<p>JSON对象转换为JSON字符串：<br>var last&#x3D;obj.toJSONString();<br>var last&#x3D;JSON.stringify(obj);</p>\n<ul>\n<li>[].forEach.call($$(“<em>“),function(a){a.style.outline&#x3D;”1px solid #”+(~~(Math.random()</em>(1&lt;&lt;24))).toString(16)}) 能解释一下这段代码的意思吗？</li>\n<li>js延迟加载的方式有哪些？<br>defer和async、动态创建DOM方式（用得最多）、按需异步载入js</li>\n<li>Ajax 是什么? 如何创建一个Ajax？<br>ajax的全称：Asynchronous Javascript And XML。<br>异步传输+js+xml。<br>所谓异步，在这里简单地解释就是：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验。</li>\n</ul>\n<p>(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象<br>(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息<br>(3)设置响应HTTP请求状态变化的函数<br>(4)发送HTTP请求<br>(5)获取异步调用返回的数据<br>(6)使用JavaScript和DOM实现局部刷新</p>\n<ul>\n<li>同步和异步的区别?<br>同步的概念应该是来自于OS中关于同步的概念:不同进程为协同完成某项工作而在先后次序上调整(通过阻塞,唤醒等方式).同步强调的是顺序性.谁先谁后.异步则不存在这种顺序性.<br>同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作。<br>异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。<br>（待完善）</li>\n<li>如何解决跨域问题?<br>jsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面</li>\n<li>页面编码和被请求的资源编码如果不一致如何处理？</li>\n<li>模块化开发怎么做？<br>立即执行函数,不暴露私有成员<br>  var module1 &#x3D; (function(){<br>  　　　　var _count &#x3D; 0;<br>  　　　　var m1 &#x3D; function(){<br>  　　　　　　&#x2F;&#x2F;…<br>  　　　　};<br>  　　　　var m2 &#x3D; function(){<br>  　　　　　　&#x2F;&#x2F;…<br>  　　　　};<br>  　　　　return {<br>  　　　　　　m1 : m1,<br>  　　　　　　m2 : m2<br>  　　　　};<br>  　　})();<br>（待完善）</li>\n<li>AMD（Modules&#x2F;Asynchronous-Definition）、CMD（Common Module Definition）规范区别？<br>AMD 规范在这里：<a href=\"https://github.com/amdjs/amdjs-api/wiki/AMD\">https://github.com/amdjs/amdjs-api/wiki/AMD</a><br>CMD 规范在这里：<a href=\"https://github.com/seajs/seajs/issues/242\">https://github.com/seajs/seajs/issues/242</a><br>Asynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。</li>\n</ul>\n<p> 区别：</p>\n<pre><code>1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.\n2. CMD 推崇依赖就近，AMD 推崇依赖前置。看代码：\n</code></pre>\n<p>&#x2F;&#x2F; CMD<br>define(function(require, exports, module) {<br>    var a &#x3D; require(‘.&#x2F;a’)<br>    a.doSomething()<br>    &#x2F;&#x2F; 此处略去 100 行<br>    var b &#x3D; require(‘.&#x2F;b’) &#x2F;&#x2F; 依赖可以就近书写<br>    b.doSomething()<br>    &#x2F;&#x2F; …<br>})</p>\n<p>&#x2F;&#x2F; AMD 默认推荐<br>define([‘.&#x2F;a’, ‘.&#x2F;b’], function(a, b) { &#x2F;&#x2F; 依赖必须一开始就写好<br>    a.doSomething()<br>    &#x2F;&#x2F; 此处略去 100 行<br>    b.doSomething()<br>    &#x2F;&#x2F; …<br>})</p>\n<ul>\n<li><p>requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）</p>\n</li>\n<li><p>谈一谈你对ECMAScript6的了解？</p>\n</li>\n<li><p>ECMAScript6 怎么写class么，为什么会出现class这种东西?</p>\n</li>\n<li><p>异步加载JS的方式有哪些？<br>(1) defer，只支持IE</p>\n<p>(2) async：</p>\n<p>(3) 创建script，插入到DOM中，加载完毕后callBack</p>\n</li>\n<li><p>documen.write和 innerHTML的区别<br>document.write只能重绘整个页面</p>\n</li>\n</ul>\n<p>innerHTML可以重绘页面的一部分</p>\n<ul>\n<li><p>DOM操作——怎样添加、移除、移动、复制、创建和查找节点?<br>（1）创建新节点<br>createDocumentFragment()    &#x2F;&#x2F;创建一个DOM片段<br>createElement()   &#x2F;&#x2F;创建一个具体的元素<br>createTextNode()   &#x2F;&#x2F;创建一个文本节点<br>（2）添加、移除、替换、插入<br>appendChild()<br>removeChild()<br>replaceChild()<br>insertBefore() &#x2F;&#x2F;在已有的子节点前插入一个新的子节点<br>（3）查找<br>getElementsByTagName()    &#x2F;&#x2F;通过标签名称<br>getElementsByName()    &#x2F;&#x2F;通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)<br>getElementById()    &#x2F;&#x2F;通过元素Id，唯一性</p>\n</li>\n<li><p>.call() 和 .apply() 的区别？<br>例子中用 add 来替换 sub，add.call(sub,3,1) &#x3D;&#x3D; add(3,1) ，所以运行结果为：alert(4);</p>\n<p>注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。</p>\n<p>  function add(a,b)<br>  {<br>  alert(a+b);<br>  }</p>\n<p>  function sub(a,b)<br>  {<br>  alert(a-b);<br>  }</p>\n<p>  add.call(sub,3,1);</p>\n</li>\n<li><p>数组和对象有哪些原生方法，列举一下？</p>\n</li>\n<li><p>JS 怎么实现一个类。怎么实例化这个类</p>\n</li>\n<li><p>JavaScript中的作用域与变量声明提升？</p>\n</li>\n<li><p>如何编写高性能的Javascript？</p>\n</li>\n<li><p>那些操作会造成内存泄漏？</p>\n</li>\n<li><p>JQuery的源码看过吗？能不能简单概况一下它的实现原理？</p>\n</li>\n<li><p>jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？</p>\n</li>\n<li><p>jquery中如何将数组转化为json字符串，然后再转化回来？</p>\n</li>\n<li><p>jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？</p>\n</li>\n<li><p>jquery.extend 与 jquery.fn.extend的区别？</p>\n</li>\n<li><p>jQuery 的队列是如何实现的？队列可以用在哪些地方？</p>\n</li>\n<li><p>谈一下Jquery中的bind(),live(),delegate(),on()的区别？</p>\n</li>\n<li><p>JQuery一个对象可以同时绑定多个事件，这是如何实现的？</p>\n</li>\n<li><p>是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？</p>\n</li>\n<li><p>jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）</p>\n</li>\n<li><p>针对 jQuery性能的优化方法？</p>\n</li>\n<li><p>Jquery与jQuery UI 有啥区别？<br>*jQuery是一个js库，主要提供的功能是选择器，属性修改和事件绑定等等。</p>\n</li>\n</ul>\n<p>*jQuery UI则是在jQuery的基础上，利用jQuery的扩展性，设计的插件。<br> 提供了一些常用的界面元素，诸如对话框、拖动行为、改变大小行为等等</p>\n<ul>\n<li><p>JQuery的源码看过吗？能不能简单说一下它的实现原理？</p>\n</li>\n<li><p>jquery 中如何将数组转化为json字符串，然后再转化回来？<br>jQuery中没有提供这个功能，所以你需要先编写两个jQuery的扩展：<br>  $.fn.stringifyArray &#x3D; function(array) {<br>  return JSON.stringify(array)<br>  }</p>\n<p>  $.fn.parseArray &#x3D; function(array) {<br>  return JSON.parse(array)<br>  }</p>\n<p>  然后调用：<br>  $(“”).stringifyArray(array)</p>\n</li>\n<li><p>jQuery和Zepto的区别？各自的使用场景？</p>\n</li>\n<li><p>针对 jQuery 的优化方法？<br>*基于Class的选择性的性能相对于Id选择器开销很大，因为需遍历所有DOM元素。</p>\n</li>\n</ul>\n<p>*频繁操作的DOM，先缓存起来再操作。用Jquery的链式调用更好。<br> 比如：var str&#x3D;$(“a”).attr(“href”);</p>\n<p>*for (var i &#x3D; size; i &lt; arr.length; i++) {}<br> for 循环每一次循环都查找了数组 (arr) 的.length 属性，在开始循环的时候设置一个变量来存储这个数字，可以让循环跑得更快：<br> for (var i &#x3D; size, length &#x3D; arr.length; i &lt; length; i++) {}</p>\n<ul>\n<li>Zepto的点透问题如何解决？</li>\n<li>jQueryUI如何自定义组件?</li>\n<li>需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？</li>\n<li>如何判断当前脚本运行在浏览器还是node环境中？（阿里）<br>通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中</li>\n<li>移动端最小触控区域是多大？</li>\n<li>jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?</li>\n<li>把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？</li>\n<li>移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）</li>\n<li>知道各种JS框架(Angular, Backbone, Ember, React, Meteor, Knockout…)么? 能讲出他们各自的优点和缺点么?</li>\n<li>Underscore 对哪些 JS 原生对象进行了扩展以及提供了哪些好用的函数方法？</li>\n<li>解释JavaScript中的作用域与变量声明提升？</li>\n<li>那些操作会造成内存泄漏？<br>内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。<br>垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。</li>\n</ul>\n<p>setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。<br>闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）</p>\n<ul>\n<li><p>JQuery一个对象可以同时绑定多个事件，这是如何实现的？</p>\n</li>\n<li><p>Node.js的适用场景？</p>\n</li>\n<li><p>(如果会用node)知道route, middleware, cluster, nodemon, pm2, server-side rendering么?</p>\n</li>\n<li><p>解释一下 Backbone 的 MVC 实现方式？</p>\n</li>\n<li><p>什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?</p>\n</li>\n<li><p>知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?</p>\n</li>\n<li><p>如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?</p>\n</li>\n<li><p>前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?</p>\n</li>\n<li><p>简述一下 Handlebars 的基本用法？</p>\n</li>\n<li><p>简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？</p>\n</li>\n<li><p>用js实现千位分隔符?(来源：前端农民工，提示：正则+replace)<br>function commafy(num) {<br>   num &#x3D; num + ‘’;<br>   var reg &#x3D; &#x2F;(-?d+)(d{3})&#x2F;;</p>\n<p>  if(reg.test(num)){<br>   num &#x3D; num.replace(reg, ‘$1,$2’);<br>  }<br>  return num;</p>\n</li>\n</ul>\n<p>}</p>\n<ul>\n<li>检测浏览器版本版本有哪些方式？<br>功能检测、userAgent特征检测</li>\n</ul>\n<p>比如：navigator.userAgent<br>&#x2F;&#x2F;“Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit&#x2F;537.36<br>  (KHTML, like Gecko) Chrome&#x2F;41.0.2272.101 Safari&#x2F;537.36”</p>\n<ul>\n<li><p>What is a Polyfill?<br>polyfill 是“在旧版浏览器上复制标准 API 的 JavaScript 补充”,可以动态地加载 JavaScript 代码或库，在不支持这些标准 API 的浏览器中模拟它们。<br>例如，geolocation（地理位置）polyfill 可以在 navigator 对象上添加全局的 geolocation 对象，还能添加 getCurrentPosition 函数以及“坐标”回调对象，<br>所有这些都是 W3C 地理位置 API 定义的对象和函数。因为 polyfill 模拟标准 API，所以能够以一种面向所有浏览器未来的方式针对这些 API 进行开发，<br>一旦对这些 API 的支持变成绝对大多数，则可以方便地去掉 polyfill，无需做任何额外工作。</p>\n</li>\n<li><p>做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？<br>比如： html5shiv、Geolocation、Placeholder </p>\n</li>\n<li><p>我们给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件，会先执行冒泡还是捕获？</p>\n</li>\n<li><p>Object.is() 与原来的比较操作符“ &#x3D;&#x3D;&#x3D;”、“ &#x3D;&#x3D;”的区别？<br>两等号判等，会在比较时进行类型转换；<br>三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）；</p>\n</li>\n</ul>\n<p>Object.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，<br>但 Object.is(NaN, NaN) 会返回 true.</p>\n<p>Object.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。</p>\n<ul>\n<li><p>react-router 路由系统的实现原理？</p>\n</li>\n<li><p>React中如何解决第三方类库的问题?</p>\n</li>\n<li><p>原来公司工作流程是怎么样的，如何与其他人协作的？如何夸部门合作的？</p>\n</li>\n<li><p>你遇到过比较难的技术问题是？你是如何解决的？</p>\n</li>\n<li><p>设计模式 知道什么是singleton, factory, strategy, decrator么?</p>\n</li>\n<li><p>常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？</p>\n</li>\n<li><p>页面重构怎么操作？<br>网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。<br>也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。</p>\n</li>\n</ul>\n<p>对于传统的网站来说重构通常是：</p>\n<p>表格(table)布局改为DIV+CSS<br>使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)<br>对于移动平台的优化<br>针对于SEO进行优化<br>深层次的网站重构应该考虑的方面</p>\n<p>减少代码间的耦合<br>让代码保持弹性<br>严格按规范编写代码<br>设计可扩展的API<br>代替旧有的框架、语言(如VB)<br>增强用户体验<br>通常来说对于速度的优化也包含在重构中</p>\n<p>压缩JS、CSS、image等前端资源(通常是由服务器来解决)<br>程序的性能优化(如数据读写)<br>采用CDN来加速资源加载<br>对于JS DOM的优化<br>HTTP服务器的文件缓存</p>\n<ul>\n<li><p>列举IE与其他浏览器不一样的特性？<br>1、事件不同之处：</p>\n<p>  触发事件的元素被认为是目标（target）。而在 IE 中，目标包含在 event 对象的 srcElement 属性；</p>\n<p>  获取字符代码、如果按键代表一个字符（shift、ctrl、alt除外），IE 的 keyCode 会返回字符代码（Unicode），DOM 中按键的代码和字符是分离的，要获取字符代码，需要使用 charCode 属性；</p>\n<p>  阻止某个事件的默认行为，IE 中阻止某个事件的默认行为，必须将 returnValue 属性设置为 false，Mozilla 中，需要调用 preventDefault() 方法；</p>\n<p>  停止事件冒泡，IE 中阻止事件进一步冒泡，需要设置 cancelBubble 为 true，Mozzilla 中，需要调用 stopPropagation()；</p>\n</li>\n<li><p>99%的网站都需要被重构是那本书上写的？<br>网站重构：应用web标准进行设计（第2版）</p>\n</li>\n<li><p>什么叫优雅降级和渐进增强？<br>优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。<br>如：border-shadow</p>\n</li>\n</ul>\n<p>渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。<br>如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验；</p>\n<ul>\n<li>是否了解公钥加密和私钥加密。<br>一般情况下是指私钥用于对数据进行签名，公钥用于对签名进行验证;<br>HTTP网站在浏览器端用公钥加密敏感数据，然后在服务器端再用私钥解密。</li>\n<li>WEB应用从服务器主动推送Data到客户端有那些方式？<br>html5提供的Websocket<br>不可见的iframe<br>WebSocket通过Flash<br>XHR长时间连接<br>XHR Multipart Streaming<script>标签的长时间连接(可跨域)</li>\n<li>对Node的优点和缺点提出了自己的看法？<br>*（优点）因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，<br>因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。<br>此外，与Node代理服务器交互的客户端代码是由javascript语言编写的，<br>因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。</li>\n</ul>\n<p>*（缺点）Node是一个相对新的开源项目，所以不太稳定，它总是一直在变，<br>  而且缺少足够多的第三方库支持。看起来，就像是Ruby&#x2F;Rails当年的样子。</p>\n<ul>\n<li><p>你有用过哪些前端性能优化的方法？<br>（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。</p>\n<p>（2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数</p>\n<p>（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。</p>\n<p>（4） 当需要设置的样式很多时设置className而不是直接操作style。</p>\n<p>（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。</p>\n<p>（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。</p>\n<p>（7） 图片预加载，将样式表放在顶部，将脚本放在底部  加上时间戳。</p>\n<p>（8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。<br>对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。</p>\n</li>\n<li><p>http状态码有那些？分别代表是什么意思？<br>  简单版<br>  [<br>  100  Continue   继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息<br>  200  OK         正常返回信息<br>  201  Created    请求成功并且服务器创建了新的资源<br>  202  Accepted   服务器已接受请求，但尚未处理<br>  301  Moved Permanently  请求的网页已永久移动到新位置。<br>  302 Found       临时性重定向。<br>  303 See Other   临时性重定向，且总是使用 GET 请求新的 URI。<br>  304  Not Modified 自从上次请求后，请求的网页未修改过。<br><br>  400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。<br>  401 Unauthorized 请求未授权。<br>  403 Forbidden   禁止访问。<br>  404 Not Found   找不到如何与 URI 相匹配的资源。<br><br>  500 Internal Server Error  最常见的服务器端错误。<br>  503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。<br>  ]</p>\n<p>完整版<br>1**(信息类)：表示接收到请求并且继续处理<br>  100——客户必须继续发出请求<br>  101——客户要求服务器根据请求转换HTTP协议版本</p>\n<p>2**(响应成功)：表示动作被成功接收、理解和接受<br>  200——表明该请求被成功地完成，所请求的资源发送回客户端<br>  201——提示知道新文件的URL<br>  202——接受和处理、但处理未完成<br>  203——返回信息不确定或不完整<br>  204——请求收到，但返回信息为空<br>  205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件<br>  206——服务器已经完成了部分用户的GET请求</p>\n<p>3**(重定向类)：为了完成指定的动作，必须接受进一步处理<br>  300——请求的资源可在多处得到<br>  301——本网页被永久性转移到另一个URL<br>  302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。<br>  303——建议客户访问其他URL或访问方式<br>  304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用<br>  305——请求的资源必须从服务器指定的地址得到<br>  306——前一版本HTTP中使用的代码，现行版本中不再使用<br>  307——申明请求的资源临时性删除</p>\n<p>4**(客户端错误类)：请求包含错误语法或不能正确执行<br>  400——客户端请求有语法错误，不能被服务器所理解<br>  401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用<br>  HTTP 401.1 - 未授权：登录失败<br>  　　HTTP 401.2 - 未授权：服务器配置问题导致登录失败<br>  　　HTTP 401.3 - ACL 禁止访问资源<br>  　　HTTP 401.4 - 未授权：授权被筛选器拒绝<br>  HTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败<br>  402——保留有效ChargeTo头响应<br>  403——禁止访问，服务器收到请求，但是拒绝提供服务<br>  HTTP 403.1 禁止访问：禁止可执行访问<br>  　　HTTP 403.2 - 禁止访问：禁止读访问<br>  　　HTTP 403.3 - 禁止访问：禁止写访问<br>  　　HTTP 403.4 - 禁止访问：要求 SSL<br>  　　HTTP 403.5 - 禁止访问：要求 SSL 128<br>  　　HTTP 403.6 - 禁止访问：IP 地址被拒绝<br>  　　HTTP 403.7 - 禁止访问：要求客户证书<br>  　　HTTP 403.8 - 禁止访问：禁止站点访问<br>  　　HTTP 403.9 - 禁止访问：连接的用户过多<br>  　　HTTP 403.10 - 禁止访问：配置无效<br>  　　HTTP 403.11 - 禁止访问：密码更改<br>  　　HTTP 403.12 - 禁止访问：映射器拒绝访问<br>  　　HTTP 403.13 - 禁止访问：客户证书已被吊销<br>  　　HTTP 403.15 - 禁止访问：客户访问许可过多<br>  　　HTTP 403.16 - 禁止访问：客户证书不可信或者无效<br>  HTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效<br>  404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL<br>  405——用户在Request-Line字段定义的方法不允许<br>  406——根据用户发送的Accept拖，请求资源不可访问<br>  407——类似401，用户必须首先在代理服务器上得到授权<br>  408——客户端没有在用户指定的饿时间内完成请求<br>  409——对当前资源状态，请求不能完成<br>  410——服务器上不再有此资源且无进一步的参考地址<br>  411——服务器拒绝用户定义的Content-Length属性请求<br>  412——一个或多个请求头字段在当前请求中错误<br>  413——请求的资源大于服务器允许的大小<br>  414——请求的资源URL长于服务器允许的长度<br>  415——请求资源不支持请求项目格式<br>  416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段<br>  417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。</p>\n<p>5**(服务端错误类)：服务器不能正确执行一个正确的请求<br>  HTTP 500 - 服务器遇到错误，无法完成请求<br>  　　HTTP 500.100 - 内部服务器错误 - ASP 错误<br>  　　HTTP 500-11 服务器关闭<br>  　　HTTP 500-12 应用程序重新启动<br>  　　HTTP 500-13 - 服务器太忙<br>  　　HTTP 500-14 - 应用程序无效<br>  　　HTTP 500-15 - 不允许请求 global.asa<br>  　　Error 501 - 未实现<br>HTTP 502 - 网关错误<br>HTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常</p>\n</li>\n<li><p>一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）<br>注：这题胜在区分度高，知识点覆盖广，再不懂的人，也能答出几句，<br>而高手可以根据自己擅长的领域自由发挥，从URL规范、HTTP协议、DNS、CDN、数据库查询、<br>到浏览器流式解析、CSS规则构建、layout、paint、onload&#x2F;domready、JS执行、JS API绑定等等；</p>\n<p>详细版：<br>  1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;<br>  2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;<br>  3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;<br>  4、进行HTTP协议会话，客户端发送报头(请求报头);<br>  5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;<br>  6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;<br>  7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;<br>  8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;<br>  9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;<br>  10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。</p>\n<p>简洁版：<br>  浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；<br>  服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；<br>  浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；<br>  载入解析到的资源文件，渲染页面，完成。</p>\n</li>\n<li><p>部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？</p>\n</li>\n<li><p>从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?</p>\n</li>\n<li><p>除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？</p>\n</li>\n<li><p>你用的得心应手用的熟练地编辑器&amp;开发环境是什么样子？<br>Sublime Text 3 + 相关插件编写前端代码<br>Google chrome 、Mozilla Firefox浏览器 +firebug 兼容测试和预览页面UI、动画效果和交互功能<br>Node.js+Gulp<br>git 用于版本控制和Code Review</p>\n</li>\n<li><p>对前端工程师这个职位是怎么样理解的？它的前景会怎么样？<br>前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。<br>1、实现界面交互<br>2、提升用户体验<br>3、有了Node.js，前端可以实现服务端的一些事情</p>\n</li>\n</ul>\n<p>前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，</p>\n<p>参与项目，快速高质量完成实现效果图，精确到1px；</p>\n<p>与团队成员，UI设计，产品经理的沟通；</p>\n<p>做好的页面结构，页面重构和用户体验；</p>\n<p>处理hack，兼容、写出优美的代码格式；</p>\n<p>针对服务器的优化、拥抱最新前端技术。</p>\n<ul>\n<li>你怎么看待Web App 、hybrid App、Native App？</li>\n<li>你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）</li>\n<li>你对加班的看法？<br>加班就像借钱，原则应当是——救急不救穷</li>\n<li>平时如何管理你的项目？<br>先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；</li>\n</ul>\n<p>编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；</p>\n<p>标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；</p>\n<p>页面进行标注（例如 页面 模块 开始和结束）；</p>\n<p>CSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；</p>\n<p>JS 分文件夹存放 命名以该JS功能为准的英文翻译。</p>\n<p>图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理</p>\n<ul>\n<li>如何设计突发大规模并发架构？</li>\n<li>当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？</li>\n<li>说说最近最流行的一些东西吧？常去哪些网站？<br>  ES6\\WebAssembly\\Node\\MVVM\\Web Components\\React\\React Native\\Webpack 组件化</li>\n<li>知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?</li>\n<li>移动端（Android IOS）怎么做好用户体验?<br>清晰的视觉纵线、<br>信息的分组、极致的减法、<br>利用选择代替输入、<br>标签及文字的排布方式、<br>依靠明文确认密码、<br>合理的键盘利用、</li>\n<li>简单描述一下你做过的移动APP项目研发流程？</li>\n<li>你在现在的团队处于什么样的角色，起到了什么明显的作用？</li>\n<li>你认为怎样才是全端工程师（Full Stack developer）？</li>\n<li>介绍一个你最得意的作品吧？</li>\n<li>你有自己的技术博客吗，用了哪些技术？</li>\n<li>对前端安全有什么看法？</li>\n<li>是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？</li>\n<li>项目中遇到国哪些印象深刻的技术难题，具体是什么问题，怎么解决？。</li>\n<li>最近在学什么东西？</li>\n<li>你的优点是什么？缺点是什么？</li>\n<li>如何管理前端团队?</li>\n<li>最近在学什么？能谈谈你未来3，5年给自己的规划吗？</li>\n</ul>\n<ol>\n<li><p>极客标签：     <a href=\"http://www.gbtags.com/\">http://www.gbtags.com/</a></p>\n</li>\n<li><p>码农周刊：     <a href=\"http://weekly.manong.io/issues/\">http://weekly.manong.io/issues/</a></p>\n</li>\n<li><p>前端周刊：     <a href=\"http://www.feweekly.com/issues\">http://www.feweekly.com/issues</a></p>\n</li>\n<li><p>慕课网：       <a href=\"http://www.imooc.com/\">http://www.imooc.com/</a></p>\n</li>\n<li><p>div.io：         <a href=\"http://div.io/\">http://div.io</a></p>\n</li>\n<li><p>Hacker News： <a href=\"https://news.ycombinator.com/news\">https://news.ycombinator.com/news</a></p>\n</li>\n<li><p>InfoQ：       <a href=\"http://www.infoq.com/\">http://www.infoq.com/</a></p>\n</li>\n<li><p>w3cplus：     <a href=\"http://www.w3cplus.com/\">http://www.w3cplus.com/</a></p>\n</li>\n<li><p>Stack Overflow： <a href=\"http://stackoverflow.com/\">http://stackoverflow.com/</a></p>\n</li>\n</ol>\n<p>10.w3school：    <a href=\"http://www.w3school.com.cn/\">http://www.w3school.com.cn/</a></p>\n<p>11.mozilla：     <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a></p>\n<ol>\n<li>jQuery 基本原理</li>\n<li>JavaScript 秘密花园</li>\n<li>CSS参考手册</li>\n<li>JavaScript 标准参考教程</li>\n<li>ECMAScript 6入门</li>\n</ol>\n<p>爱机车、爱骑行、爱旅行、爱摄影、爱阅读的前端开发攻城师。</p>\n<p>我的微博：<a href=\"http://weibo.com/920802999\">http://weibo.com/920802999</a></p>\n<ul>\n<li>Desktop version</li>\n</ul>\n</script></li></ul>","site":{"data":{}},"excerpt":"","more":"<p>link: markyun &#x2F; My-blog<br>Front-end-Developer-Questions&#x2F;Questions-and-Answers&#x2F;README.md</p>\n<p>只看问题点这里<br>看全部问题和答案点这里<br>本文由我收集总结了一些前端面试题，初学者阅后也要用心钻研其中的原理，重要知识需要系统学习、透彻学习，形成自己的知识链。万不可投机取巧，临时抱佛脚只求面试侥幸混过关是错误的！也是不可能的！不可能的！不可能的！<br>前端还是一个年轻的行业，新的行业标准， 框架， 库都不断在更新和新增，正如赫门在2015深JS大会上的《前端服务化之路》主题演讲中说的一句话：“每18至24个月，前端都会难一倍”，这些变化使前端的能力更加丰富、创造的应用也会更加完美。所以关注各种前端技术，跟上快速变化的节奏，也是身为一个前端程序员必备的技能之一。<br>最近也收到许多微博私信的鼓励和更正题目信息，后面会经常更新题目和答案到github博客。希望前端er达到既能使用也会表达，对理论知识有自己的理解。可根据下面的知识点一个一个去进阶学习，形成自己的职业技能链。<br>面试有几点需注意：(来源寒冬winter 老师，github:@wintercn)</p>\n<ol>\n<li>面试题目： 根据你的等级和职位的变化，入门级到专家级，广度和深度都会有所增加。</li>\n<li>题目类型： 理论知识、算法、项目细节、技术视野、开放性题、工作案例。</li>\n<li>细节追问： 可以确保问到你开始不懂或面试官开始不懂为止，这样可以大大延展题目的区分度和深度，知道你的实际能力。因为这种知识关联是长时期的学习，临时抱佛脚绝对是记不住的。</li>\n<li>回答问题再棒，面试官（可能是你面试职位的直接领导），会考虑我要不要这个人做我的同事？所以态度很重要、除了能做事，还要会做人。（感觉更像是相亲( •̣̣̣̣̣̥́௰•̣̣̣̣̣̥̀ )）</li>\n<li>资深的前端开发能把absolute和relative弄混，这样的人不要也罢，因为团队需要的是：你这个人具有可以依靠的才能（靠谱）。<br>前端开发知识点：<br>HTML&amp;CSS：<br> 对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级、<br> HTML5、CSS3、Flexbox</li>\n</ol>\n<p>JavaScript：<br>    数据类型、运算、对象、Function、继承、闭包、作用域、原型链、事件、RegExp、JSON、Ajax、<br>    DOM、BOM、内存泄漏、跨域、异步装载、模板引擎、前端MVC、路由、模块化、Canvas、ECMAScript 6、Nodejs</p>\n<p>其他：<br>    移动端、响应式、自动化构建、HTTP、离线存储、WEB安全、优化、重构、团队协作、可维护、易用性、SEO、UED、架构、职业生涯、快速学习能力<br>作为一名前端工程师，无论工作年头长短都应该掌握的知识点：<br>此条由 王子墨 发表在 攻城师的实验室<br>    1、DOM结构 —— 两个节点之间可能存在哪些关系以及如何在节点之间任意移动。</p>\n<pre><code>2、DOM操作 —— 如何添加、移除、移动、复制、创建和查找节点等。\n\n3、事件 —— 如何使用事件，以及IE和标准DOM事件模型之间存在的差别。\n\n4、XMLHttpRequest —— 这是什么、怎样完整地执行一次GET请求、怎样检测错误。\n\n5、严格模式与混杂模式 —— 如何触发这两种模式，区分它们有何意义。\n\n6、盒模型 —— 外边距、内边距和边框之间的关系，及IE8以下版本的浏览器中的盒模型\n\n7、块级元素与行内元素 —— 怎么用CSS控制它们、以及如何合理的使用它们\n\n8、浮动元素 —— 怎么使用它们、它们有什么问题以及怎么解决这些问题。\n\n9、HTML与XHTML —— 二者有什么区别，你觉得应该使用哪一个并说出理由。\n\n10、JSON —— 作用、用途、设计结构。\n</code></pre>\n<p>备注：<br>根据自己需要选择性阅读，面试题是对理论知识的总结，让自己学会应该如何表达。</p>\n<p>资料答案不够正确和全面，欢迎欢迎Star和提交issues。</p>\n<p>格式不断修改更新中。</p>\n<p>更新记录：<br>2016年3月25日：新增ECMAScript6 相关问题</p>\n<ul>\n<li>Doctype作用？标准模式与兼容模式各有什么区别?<br>（1）、&lt;!DOCTYPE&gt;声明位于位于HTML文档中的第一行，处于 <html> 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。</html></li>\n</ul>\n<p>（2）、标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。</p>\n<ul>\n<li>HTML5 为什么只需要写 <!DOCTYPE HTML>？<br> HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；</li>\n</ul>\n<p> 而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。</p>\n<ul>\n<li>行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？<br>首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。</li>\n</ul>\n<p>（1）行内元素有：a b span img input select strong（强调的语气）<br>（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p</p>\n<p>（3）常见的空元素：</p>\n <hr> <img> <input> <link> <meta>\n    鲜为人知的是：\n    <area> <base> <col> <command> <embed> <keygen> <param> <source> <track> <wbr>\n* 页面导入样式时，使用link和@import有什么区别？\n（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;\n\n<p>（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;</p>\n<p>（3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;</p>\n<ul>\n<li>介绍一下你对浏览器内核的理解？<br>主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。<br>渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。</li>\n</ul>\n<p>JS引擎则：解析和执行javascript来实现网页的动态效果。</p>\n<p>最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。</p>\n<ul>\n<li><p>常见的浏览器内核有哪些？<br>Trident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]<br>Gecko内核：Netscape6及以上版本，FF,MozillaSuite&#x2F;SeaMonkey等<br>Presto内核：Opera7及以上。      [Opera内核原为：Presto，现为：Blink;]<br>Webkit内核：Safari,Chrome等。   [ Chrome的：Blink（WebKit的分支）]<br>详细文章：浏览器内核的解析和对比</p>\n</li>\n<li><p>html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？</p>\n</li>\n<li><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。<br>绘画 canvas;<br>用于媒介回放的 video 和 audio 元素;<br>本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;<br>sessionStorage 的数据在浏览器关闭后自动删除;<br>语意化更好的内容元素，比如 article、footer、header、nav、section;<br>表单控件，calendar、date、time、email、url、search;<br>新的技术webworker, websocket, Geolocation;<br>移除的元素：<br>纯表现的元素：basefont，big，center，font, s，strike，tt，u;<br>对可用性产生负面影响的元素：frame，frameset，noframes；</p>\n</li>\n<li><p>支持HTML5新标签：<br>   IE8&#x2F;IE7&#x2F;IE6支持通过document.createElement方法产生的标签，<br>   可以利用这一特性让这些浏览器支持HTML5新标签，<br>   浏览器支持新标签后，还需要添加标签默认的样式。</p>\n<p>   当然也可以直接使用成熟的框架、比如html5shim;</p>\n   <!--[if lt IE 9]>\n      <script> src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"</script>\n   <![endif]-->\n</li>\n<li><p>如何区分HTML5： DOCTYPE声明\\新增的结构元素\\功能元素</p>\n</li>\n<li><p>简述一下你对HTML语义化的理解？<br>用正确的标签做正确的事情。<br>html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;<br>即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;<br>搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;<br>使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</p>\n</li>\n<li><p>HTML5的离线储存怎么使用，工作原理能不能解释一下？<br>在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。<br>原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。</p>\n</li>\n</ul>\n<p>如何使用：<br>1、页面头部像下面一样加入一个manifest的属性；<br>2、在cache.manifest文件的编写离线存储的资源；<br>    CACHE MANIFEST<br>    #v0.11<br>    CACHE:<br>    js&#x2F;app.js<br>    css&#x2F;style.css<br>    NETWORK:<br>    resourse&#x2F;logo.png<br>    FALLBACK:<br>    &#x2F; &#x2F;offline.html<br>3、在离线状态时，操作window.applicationCache进行需求实现。<br>详细的使用请参考：有趣的HTML5：离线存储</p>\n<ul>\n<li>浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？<br>在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。<br>离线的情况下，浏览器就直接使用离线存储的资源。<br>详细的使用请参考：有趣的HTML5：离线存储</li>\n<li>请描述一下 cookies，sessionStorage 和 localStorage 的区别？<br>cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。<br>cookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。<br>sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。</li>\n</ul>\n<p>存储大小：<br>    cookie数据大小不能超过4k。<br>    sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。</p>\n<p>有期时间：<br>    localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；<br>    sessionStorage  数据在当前浏览器窗口关闭后自动删除。<br>    cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭</p>\n<ul>\n<li>iframe有那些缺点？<br>*iframe会阻塞主页面的Onload事件；<br>*搜索引擎的检索程序无法解读这种页面，不利于SEO;</li>\n</ul>\n<p>*iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</p>\n<p>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript<br>动态给iframe添加src属性值，这样可以绕开以上两个问题。</p>\n<ul>\n<li>Label的作用是什么？是怎么用的？<br>label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</li>\n</ul>\n<p><label for=\"Name\">Number:</label><br>&lt;input type&#x3D;“text“name&#x3D;”Name” id&#x3D;”Name”&#x2F;&gt;</p>\n<p><label>Date:<input type=\"text\" name=\"B\"></label></p>\n<ul>\n<li>HTML5的form如何关闭自动完成功能？<br>给不想要提示的 form 或某个 input 设置为 autocomplete&#x3D;off。</li>\n<li>如何实现浏览器内多个标签页之间的通信? (阿里)<br>WebSocket、SharedWorker；<br>也可以调用localstorge、cookies等本地存储方式；</li>\n</ul>\n<p>localstorge另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，<br>我们通过监听事件，控制它的值来进行页面信息通信；<br>注意quirks：Safari 在无痕模式下设置localstorge值时会抛出 QuotaExceededError 的异常；</p>\n<ul>\n<li>webSocket如何兼容低浏览器？(阿里)<br>Adobe Flash Socket 、<br>ActiveX HTMLFile (IE) 、<br>基于 multipart 编码发送 XHR 、<br>基于长轮询的 XHR</li>\n<li>页面可见性（Page Visibility API） 可以有哪些用途？<br>通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;<br>在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；</li>\n<li>如何在页面上实现一个圆形的可点击区域？<br>1、map+area或者svg<br>2、border-radius<br>3、纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</li>\n<li>实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。<div style=\"height:1px;overflow:hidden;background:red\"></div></li>\n<li>网页验证码是干嘛的，是为了解决什么安全问题。<br>区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水；<br>有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。</li>\n<li>title与h1的区别、b与strong的区别、i与em的区别？<br>title属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；</li>\n</ul>\n<p>strong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：<strong>会重读，而<B>是展示强调内容。</B></strong></p>\n<p>i内容展示为斜体，em表示强调的文本；</p>\n<p>Physical Style Elements – 自然样式标签<br>b, i, u, s, pre<br>Semantic Style Elements – 语义样式标签<br>strong, em, ins, del, code<br>应该准确使用语义样式标签, 但不能滥用, 如果不能确定时首选使用自然样式标签。</p>\n<ul>\n<li><p>介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？<br>（1）有两种， IE 盒子模型、W3C 盒子模型；<br>（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)；<br>（3）区  别： IE的content部分把 border 和 padding计算了进去;</p>\n</li>\n<li><p>CSS选择符有哪些？哪些属性可以继承？</p>\n</li>\n<li><p>1.id选择器（ # myid）<br>2.类选择器（.myclassname）<br>3.标签选择器（div, h1, p）<br>4.相邻选择器（h1 + p）<br>5.子选择器（ul &gt; li）<br>6.后代选择器（li a）<br>7.通配符选择器（ * ）<br>8.属性选择器（a[rel &#x3D; “external”]）<br>9.伪类选择器（a:hover, li:nth-child）</p>\n</li>\n<li><p>可继承的样式： font-size font-family color, UL LI DL DD DT;</p>\n</li>\n<li><p>不可继承的样式：border padding margin width height ;</p>\n</li>\n<li><p>CSS优先级算法如何计算？</p>\n</li>\n<li><p>优先级就近原则，同权重情况下样式定义最近者为准;</p>\n</li>\n<li><p>载入样式以最后载入的定位为准;</p>\n</li>\n</ul>\n<p>优先级为:<br>   !important &gt;  id &gt; class &gt; tag<br>    important 比 内联优先级高</p>\n<ul>\n<li><p>CSS3新增伪类有那些？<br>  举例：<br>  p:first-of-type 选择属于其父元素的首个 </p><p> 元素的每个 </p><p> 元素。<br>  p:last-of-type  选择属于其父元素的最后 </p><p> 元素的每个 </p><p> 元素。<br>  p:only-of-type  选择属于其父元素唯一的 </p><p> 元素的每个 </p><p> 元素。<br>  p:only-child        选择属于其父元素的唯一子元素的每个 </p><p> 元素。<br>  p:nth-child(2)  选择属于其父元素的第二个子元素的每个 </p><p> 元素。</p>\n<p>  :after          在元素之前添加内容,也可以用来做清除浮动。<br>  :before         在元素之后添加内容<br>  :enabled<br>  :disabled       控制表单控件的禁用状态。<br>  :checked        单选框或复选框被选中。</p>\n</li>\n<li><p>如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？</p>\n<ul>\n<li>给div设置一个宽度，然后添加margin:0 auto属性<br>div{<br>  width:200px;<br>  margin:0 auto;<br> }</li>\n<li>居中一个浮动元素<br>确定容器的宽高 宽500 高 300 的层<br>设置层的外边距</li>\n</ul>\n</li>\n</ul>\n<p> .div {<br>      width:500px ; height:300px;&#x2F;&#x2F;高度可以不设<br>      margin: -150px 0 0 -250px;<br>      position:relative;         &#x2F;&#x2F;相对定位<br>      background-color:pink;     &#x2F;&#x2F;方便看效果<br>      left:50%;<br>      top:50%;<br> }<br>    * 让绝对定位的div居中<br>  position: absolute;<br>  width: 1200px;<br>  background: none;<br>  margin: 0 auto;<br>  top: 0;<br>  left: 0;<br>  bottom: 0;<br>  right: 0;</p>\n<ul>\n<li>display有哪些值？说明他们的作用。<br>block         象块类型元素一样显示。<br>none          缺省值。象行内元素类型一样显示。<br>inline-block  象行内元素一样显示，但其内容象块类型元素一样显示。<br>list-item     象块类型元素一样显示，并添加样式列表标记。<br>table         此元素会作为块级表格来显示<br>inherit       规定应该从父元素继承 display 属性的值</li>\n<li>pposition的值relative和absolute定位原点是？<br>absolute<br>  生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。<br>fixed （老IE不支持）<br>  生成绝对定位的元素，相对于浏览器窗口进行定位。<br>relative<br>  生成相对定位的元素，相对于其正常位置进行定位。<br>static<br>  默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。<br>inherit<br>  规定从父元素继承 position 属性的值。</li>\n<li>CSS3有哪些新特性？<br>新增各种CSS选择器  （: not(.input)：所有 class 不是“input”的节点）<br>圆角           （border-radius:8px）<br>多列布局        （multi-column layout）<br>阴影和反射        （Shadow\\Reflect）<br>文字特效      （text-shadow、）<br>文字渲染      （Text-decoration）<br>线性渐变      （gradient）<br>旋转          （transform）<br>增加了旋转,缩放,定位,倾斜,动画，多背景<br>transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:</li>\n<li>请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？<br> .</li>\n<li>用纯CSS创建一个三角形的原理是什么？<br>把上、左、右三条边隐藏掉（颜色设为 transparent）</li>\n</ul>\n<p>#demo {<br>  width: 0;<br>  height: 0;<br>  border-width: 20px;<br>  border-style: solid;<br>  border-color: transparent transparent red transparent;<br>}</p>\n<ul>\n<li><p>一个满屏 品 字布局 如何设计?<br>简单的方式：<br>  上面的div宽100%，<br>  下面的两个div分别宽50%，<br>  然后用float或者inline使其不换行即可</p>\n</li>\n<li><p>经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？</p>\n</li>\n<li><p>png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.</p>\n</li>\n<li><p>浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。</p>\n</li>\n<li><p>IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。</p>\n<p>浮动ie产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}</p>\n<p>这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)</p>\n<p>渐进识别的方式，从总体中逐渐排除局部。</p>\n<p>首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。<br>接着，再次使用“+”将IE8和IE7、IE6分离开来，这样IE8已经独立识别。</p>\n<p>css<br>.bb{<br>    background-color:#f1ee18;&#x2F;<em>所有识别</em>&#x2F;<br>    .background-color:#00deff\\9; &#x2F;<em>IE6、7、8识别</em>&#x2F;<br>    +background-color:#a200ff;&#x2F;<em>IE6、7识别</em>&#x2F;<br>    _background-color:#1e0bd1;&#x2F;<em>IE6识别</em>&#x2F;<br>}</p>\n</li>\n<li><p>IE下,可以使用获取常规属性的方法来获取自定义属性,<br>也可以使用getAttribute()获取自定义属性;<br>Firefox下,只能使用getAttribute()获取自定义属性。<br>解决方法:统一通过getAttribute()获取自定义属性。</p>\n</li>\n<li><p>IE下,even对象有x,y属性,但是没有pageX,pageY属性;<br>Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。</p>\n</li>\n<li><p>解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。</p>\n</li>\n<li><p>Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,<br>可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。</p>\n</li>\n</ul>\n<p>超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:<br>L-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}</p>\n<ul>\n<li>li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？<br>行框的排列会受到中间空白（回车\\空格）等的影响，因为空格也属于字符,这些空白也会被应用样式，占据空间，所以会有间隔，把字符大小设为0，就没有空格了。</li>\n<li>为什么要初始化CSS样式。</li>\n</ul>\n<ul>\n<li><p>因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。</p>\n</li>\n<li><p>当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。</p>\n</li>\n</ul>\n<p>最简单的初始化方法： * {padding: 0; margin: 0;} （强烈不建议）</p>\n<p>淘宝的样式初始化代码：<br>body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }<br>body, button, input, select, textarea { font:12px&#x2F;1.5tahoma, arial, \\5b8b\\4f53; }<br>h1, h2, h3, h4, h5, h6{ font-size:100%; }<br>address, cite, dfn, em, var { font-style:normal; }<br>code, kbd, pre, samp { font-family:couriernew, courier, monospace; }<br>small{ font-size:12px; }<br>ul, ol { list-style:none; }<br>a { text-decoration:none; }<br>a:hover { text-decoration:underline; }<br>sup { vertical-align:text-top; }<br>sub{ vertical-align:text-bottom; }<br>legend { color:#000; }<br>fieldset, img { border:0; }<br>button, input, select, textarea { font-size:100%; }<br>table { border-collapse:collapse; border-spacing:0; }</p>\n<ul>\n<li>absolute的containing block(容器块)计算方式跟正常流有什么不同？<br>无论属于哪种，都要先找到其祖先元素中最近的 position 值不为 static 的元素，然后再判断：<br>1、若此元素为 inline 元素，则 containing block 为能够包含这个元素生成的第一个和最后一个 inline box 的 padding box (除 margin, border 外的区域) 的最小矩形；<br>2、否则,则由这个祖先元素的 padding box 构成。<br>如果都找不到，则为 initial containing block。</li>\n</ul>\n<p>补充：</p>\n<ol>\n<li>static(默认的)&#x2F;relative：简单说就是它的父元素的内容框（即去掉padding的部分）</li>\n<li>absolute: 向上找最近的定位为absolute&#x2F;relative的元素</li>\n<li>fixed: 它的containing block一律为根元素(html&#x2F;body)，根元素也是initial containing block</li>\n</ol>\n<ul>\n<li>CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？</li>\n<li>position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？</li>\n<li>对BFC规范(块级格式化上下文：block formatting context)的理解？<br>（W3C CSS 2.1 规范中的一个概念,它是一个独立容器，决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用。）<br> 一个页面是由很多个 Box 组成的,元素的类型和 display 属性,决定了这个 Box 的类型。<br> 不同类型的 Box,会参与不同的 Formatting Context（决定如何渲染文档的容器）,因此Box内的元素会以不同的方式渲染,也就是说BFC内部的元素和外部的元素不会互相影响。</li>\n<li>css定义的权重<br>以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，以下例子是演示各种定义的权重值：</li>\n</ul>\n<p>&#x2F;<em>权重为1</em>&#x2F;<br>div{<br>}<br>&#x2F;<em>权重为10</em>&#x2F;<br>.class1{<br>}<br>&#x2F;<em>权重为100</em>&#x2F;<br>#id1{<br>}<br>&#x2F;<em>权重为100+1&#x3D;101</em>&#x2F;<br>#id1 div{<br>}<br>&#x2F;<em>权重为10+1&#x3D;11</em>&#x2F;<br>.class1 div{<br>}<br>&#x2F;<em>权重为10+10+1&#x3D;21</em>&#x2F;<br>.class1 .class2 div{<br>}</p>\n<p>如果权重相同，则最后定义的样式会起作用，但是应该避免这种情况出现</p>\n<ul>\n<li>请解释一下为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式</li>\n<li>移动端的布局用过媒体查询吗？</li>\n<li>使用 CSS 预处理器吗？喜欢那个？<br>SASS (SASS、LESS没有本质区别，只因为团队前端都是用的SASS)</li>\n<li>CSS优化、提高性能的方法有哪些？</li>\n<li>浏览器是怎样解析CSS选择器的？</li>\n<li>在网页中的应该使用奇数还是偶数的字体？为什么呢？</li>\n<li>margin和padding分别适合什么场景使用？</li>\n<li>抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]</li>\n<li>元素竖向的百分比设定是相对于容器的高度吗？</li>\n<li>全屏滚动的原理是什么？用到了CSS的那些属性？</li>\n<li>什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？</li>\n<li>视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）</li>\n<li>::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。</li>\n<li>如何修改chrome记住密码后自动填充表单的黄色背景 ？</li>\n<li>你对line-height是如何理解的？</li>\n<li>设置元素浮动后，该元素的display值是多少？（自动变成display:block）</li>\n<li>怎么让Chrome支持小于12px 的文字？</li>\n<li>让页面里的字体变清晰，变细用CSS怎么做？（-webkit-font-smoothing: antialiased;）</li>\n<li>font-style属性可以让它赋值为“oblique” oblique是什么意思？</li>\n<li>position:fixed;在android下无效怎么处理？</li>\n<li>如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）<br>多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1&#x2F;60＊1000ms ＝ 16.7ms</li>\n<li>display:inline-block 什么时候会显示间隙？(携程)<br>移除空格、使用margin负值、使用font-size:0、letter-spacing、word-spacing</li>\n<li>overflow: scroll时不能平滑滚动的问题怎么处理？</li>\n<li>有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。</li>\n<li>png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？</li>\n<li>什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）<br>如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，<br>所以不如隔离开。</li>\n</ul>\n<p>因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，<br>这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。</p>\n<p>同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，<br>提高了webserver的http请求的解析速度。</p>\n<ul>\n<li>style标签写在body后与body前有什么区别？</li>\n<li>什么是CSS 预处理器 &#x2F; 后处理器？</li>\n</ul>\n<ul>\n<li><p>预处理器例如：LESS、Sass、Stylus，用来预编译Sass或less，增强了css代码的复用性，<br>还有层级、mixin、变量、循环、函数等，具有很方便的UI组件模块化开发能力，极大的提高工作效率。</p>\n</li>\n<li><p>后处理器例如：PostCSS，通常被视为在完成的样式表中根据CSS规范处理CSS，让其更有效；目前最常做的<br>是给CSS属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。</p>\n</li>\n</ul>\n<ul>\n<li>介绍js的基本数据类型。<br> Undefined、Null、Boolean、Number、String、Symbol(new in ECMAScript 2015)</li>\n<li>介绍js有哪些内置对象？<br>Object 是 JavaScript 中所有对象的父对象</li>\n</ul>\n<p>数据封装类对象：Object、Array、Boolean、Number 和 String<br>其他对象：Function、Arguments、Math、Date、RegExp、Error</p>\n<ul>\n<li>说几条写JavaScript的基本规范？<br>1.不要在同一行声明多个变量。<br>2.请使用 &#x3D;&#x3D;&#x3D;&#x2F;!&#x3D;&#x3D;来比较true&#x2F;false或者数值<br>3.使用对象字面量替代new Array这种形式<br>4.不要使用全局函数。<br>5.Switch语句必须带有default分支<br>6.函数不应该有时候有返回值，有时候没有返回值。<br>7.For循环必须使用大括号<br>8.If语句必须使用大括号<br>9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。</li>\n<li>JavaScript原型，原型链 ? 有什么特点？<br>每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，<br>如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，<br>于是就这样一直找下去，也就是我们平时所说的原型链的概念。<br>关系：instance.constructor.prototype &#x3D; instance.<strong>proto</strong></li>\n</ul>\n<p>特点：<br>JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。</p>\n<p> 当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的话，<br> 就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象。<br>    function Func(){}<br>    Func.prototype.name &#x3D; “Sean”;<br>    Func.prototype.getInfo &#x3D; function() {<br>      return this.name;<br>    }<br>    var person &#x3D; new Func();&#x2F;&#x2F;现在可以参考var person &#x3D; Object.create(oldObject);<br>    console.log(person.getInfo());&#x2F;&#x2F;它拥有了Func的属性和方法<br>    &#x2F;&#x2F;“Sean”<br>    console.log(Func.prototype);<br>    &#x2F;&#x2F; Func { name&#x3D;”Sean”, getInfo&#x3D;function()}</p>\n<ul>\n<li>JavaScript有几种类型的值？，你能画一下他们的内存图吗？<br>栈：原始数据类型（Undefined，Null，Boolean，Number、String）<br>堆：引用数据类型（对象、数组和函数）</li>\n</ul>\n<p>两种类型的区别是：存储位置不同；<br>原始数据类型直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；<br>引用数据类型存储在堆(heap)中的对象,占据空间大、大小不固定,如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其<br>在栈中的地址，取得地址后从堆中获得实体</p>\n<ul>\n<li>Javascript如何实现继承？<br>1、构造继承<br>2、原型继承<br>3、实例继承<br>4、拷贝继承</li>\n</ul>\n<p>原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。</p>\n<pre><code>    function Parent()&#123;\n        this.name = &#39;wang&#39;;\n    &#125;\n\n    function Child()&#123;\n        this.age = 28;\n    &#125;\n    Child.prototype = new Parent();//继承了Parent，通过原型\n\n    var demo = new Child();\n    alert(demo.age);\n    alert(demo.name);//得到被继承的属性\n</code></pre>\n<ul>\n<li>JavaScript继承的几种实现方式？<ul>\n<li>参考：构造函数的继承，非构造函数的继承；</li>\n</ul>\n</li>\n<li>javascript创建对象的几种方式？<br>javascript创建对象简单的说,无非就是使用内置对象或各种自定义对象，当然还可以用JSON；但写法有很多种，也能混合使用。</li>\n</ul>\n<p>1、对象字面量的方式   </p>\n<pre><code>person=&#123;firstname:&quot;Mark&quot;,lastname:&quot;Yun&quot;,age:25,eyecolor:&quot;black&quot;&#125;;\n</code></pre>\n<p>2、用function来模拟无参的构造函数</p>\n<pre><code>function Person()&#123;&#125;\nvar person=new Person();//定义一个function，如果使用new&quot;实例化&quot;,该function可以看作是一个Class\nperson.name=&quot;Mark&quot;;\nperson.age=&quot;25&quot;;\nperson.work=function()&#123;\nalert(person.name+&quot; hello...&quot;);\n&#125;\nperson.work();\n</code></pre>\n<p>3、用function来模拟参构造函数来实现（用this关键字定义构造的上下文属性）</p>\n<pre><code>function Pet(name,age,hobby)&#123;\n   this.name=name;//this作用域：当前对象\n   this.age=age;\n   this.hobby=hobby;\n   this.eat=function()&#123;\n      alert(&quot;我叫&quot;+this.name+&quot;,我喜欢&quot;+this.hobby+&quot;,是个程序员&quot;);\n   &#125;\n&#125;\nvar maidou =new Pet(&quot;麦兜&quot;,25,&quot;coding&quot;);//实例化、创建对象\nmaidou.eat();//调用eat方法\n</code></pre>\n<p>4、用工厂方式来创建（内置对象）</p>\n<pre><code> var wcDog =new Object();\n wcDog.name=&quot;旺财&quot;;\n wcDog.age=3;\n wcDog.work=function()&#123;\n   alert(&quot;我是&quot;+wcDog.name+&quot;,汪汪汪......&quot;);\n &#125;\n wcDog.work();\n</code></pre>\n<p>5、用原型方式来创建</p>\n<pre><code>function Dog()&#123;\n\n &#125;\n Dog.prototype.name=&quot;旺财&quot;;\n Dog.prototype.eat=function()&#123;\n alert(this.name+&quot;是个吃货&quot;);\n &#125;\n var wangcai =new Dog();\n wangcai.eat();\n</code></pre>\n<p>5、用混合方式来创建</p>\n<pre><code>function Car(name,price)&#123;\n  this.name=name;\n  this.price=price; \n&#125;\n Car.prototype.sell=function()&#123;\n   alert(&quot;我是&quot;+this.name+&quot;，我现在卖&quot;+this.price+&quot;万元&quot;);\n  &#125;\nvar camry =new Car(&quot;凯美瑞&quot;,27);\ncamry.sell(); \n</code></pre>\n<ul>\n<li>Javascript作用链域?<br>全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。<br>当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，<br>直至全局函数，这种组织形式就是作用域链。</li>\n<li>谈谈This对象的理解。<ul>\n<li>this总是指向函数的直接调用者（而非间接调用者）；</li>\n<li>如果有new关键字，this指向new出来的那个对象；</li>\n<li>在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；</li>\n</ul>\n</li>\n<li>eval是做什么的？<br>它的功能是把对应的字符串解析成JS代码并运行；<br>应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。<br>由JSON字符串转换为JSON对象的时候可以用eval，var obj &#x3D;eval(‘(‘+ str +’)’);</li>\n<li>什么是window对象? 什么是document对象?</li>\n<li>null，undefined 的区别？<br>null        表示一个对象被定义了，值为“空值”；<br>undefined   表示不存在这个值。</li>\n</ul>\n<p>typeof undefined<br>    &#x2F;&#x2F;“undefined”<br>    undefined :是一个表示”无”的原始值或者说表示”缺少值”，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined；<br>    例如变量被声明了，但没有赋值时，就等于undefined</p>\n<p>typeof null<br>    &#x2F;&#x2F;“object”<br>    null : 是一个对象(空对象, 没有任何属性和方法)；<br>    例如作为函数的参数，表示该函数的参数不是对象；</p>\n<p>注意：<br>    在验证null时，一定要使用　&#x3D;&#x3D;&#x3D; ，因为 &#x3D;&#x3D; 无法分别 null 和　undefined</p>\n<p>再来一个例子：</p>\n<pre><code>null\nQ：有张三这个人么？\nA：有！\nQ：张三有房子么？\nA：没有！\n\nundefined\nQ：有张三这个人么？\nA：没有！\n</code></pre>\n<p>参考阅读：undefined与null的区别</p>\n<ul>\n<li>写一个通用的事件侦听器函数。<br>  &#x2F;&#x2F; event(事件)工具集，来源：github.com&#x2F;markyun<br>  markyun.Event &#x3D; {<br>  &#x2F;&#x2F; 页面加载完成后<br>  readyEvent : function(fn) {<br>      if (fn&#x3D;&#x3D;null) {<br>          fn&#x3D;document;<br>      }<br>      var oldonload &#x3D; window.onload;<br>      if (typeof window.onload !&#x3D; ‘function’) {<br>          window.onload &#x3D; fn;<br>      } else {<br>          window.onload &#x3D; function() {<br>              oldonload();<br>              fn();<br>          };<br>      }<br>  },<br>  &#x2F;&#x2F; 视能力分别使用dom0||dom2||IE方式 来绑定事件<br>  &#x2F;&#x2F; 参数： 操作的元素,事件名称 ,事件处理程序<br>  addEvent : function(element, type, handler) {<br>      if (element.addEventListener) {<br>          &#x2F;&#x2F;事件类型、需要执行的函数、是否捕捉<br>          element.addEventListener(type, handler, false);<br>      } else if (element.attachEvent) {<br>          element.attachEvent(‘on’ + type, function() {<br>              handler.call(element);<br>          });<br>      } else {<br>          element[‘on’ + type] &#x3D; handler;<br>      }<br>  },<br>  &#x2F;&#x2F; 移除事件<br>  removeEvent : function(element, type, handler) {<br>      if (element.removeEventListener) {<br>          element.removeEventListener(type, handler, false);<br>      } else if (element.datachEvent) {<br>          element.detachEvent(‘on’ + type, handler);<br>      } else {<br>          element[‘on’ + type] &#x3D; null;<br>      }<br>  },<br>  &#x2F;&#x2F; 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)<br>  stopPropagation : function(ev) {<br>      if (ev.stopPropagation) {<br>          ev.stopPropagation();<br>      } else {<br>          ev.cancelBubble &#x3D; true;<br>      }<br>  },<br>  &#x2F;&#x2F; 取消事件的默认行为<br>  preventDefault : function(event) {<br>      if (event.preventDefault) {<br>          event.preventDefault();<br>      } else {<br>          event.returnValue &#x3D; false;<br>      }<br>  },<br>  &#x2F;&#x2F; 获取事件目标<br>  getTarget : function(event) {<br>      return event.target || event.srcElement;<br>  },<br>  &#x2F;&#x2F; 获取event对象的引用，取到事件的所有信息，确保随时能使用event；<br>  getEvent : function(e) {<br>      var ev &#x3D; e || window.event;<br>      if (!ev) {<br>          var c &#x3D; this.getEvent.caller;<br>          while (c) {<br>              ev &#x3D; c.arguments[0];<br>              if (ev &amp;&amp; Event &#x3D;&#x3D; ev.constructor) {<br>                  break;<br>              }<br>              c &#x3D; c.caller;<br>          }<br>      }<br>      return ev;<br>  }<br>  };</li>\n<li>[“1”, “2”, “3”].map(parseInt) 答案是多少？<br> [1, NaN, NaN] 因为 parseInt 需要两个参数 (val, radix)，<br> 其中 radix 表示解析时用的基数。<br> map 传了 3 个 (element, index, array)，对应的 radix 不合法导致解析失败。</li>\n<li>事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？</li>\n</ul>\n<ol>\n<li>我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为。</li>\n<li>事件处理机制：IE是事件冒泡、Firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件；</li>\n<li>ev.stopPropagation();（旧ie的方法 ev.cancelBubble &#x3D; true;）</li>\n</ol>\n<ul>\n<li>什么是闭包（closure），为什么要用它？<br>闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。</li>\n</ul>\n<p>闭包的特性：</p>\n<p>1.函数内再嵌套函数<br>2.内部函数可以引用外层的参数和变量<br>3.参数和变量不会被垃圾回收机制回收</p>\n<p>&#x2F;&#x2F;li节点的onclick事件都能正确的弹出当前被点击的li索引<br> <ul id=\"testUL\"><br>    <li> index &#x3D; 0</li><br>    <li> index &#x3D; 1</li><br>    <li> index &#x3D; 2</li><br>    <li> index &#x3D; 3</li></ul></p>\n\n<script type=\"text/javascript\">\n    var nodes = document.getElementsByTagName(\"li\");\n    for(i = 0;i<nodes.length;i+= 1){\n        nodes[i].onclick = function(){\n            console.log(i+1);//不用闭包的话，值每次都是4\n        }(i);\n    }\n</script>\n\n\n\n<p>执行say667()后,say667()闭包内部变量会存在,而闭包内部函数的内部变量不会存在<br>使得Javascript的垃圾回收机制GC不会收回say667()所占用的资源<br>因为say667()的内部函数的执行需要依赖say667()中的变量<br>这是对闭包作用的非常直白的描述</p>\n<p>  function say667() {<br>    &#x2F;&#x2F; Local variable that ends up within closure<br>    var num &#x3D; 666;<br>    var sayAlert &#x3D; function() {<br>        alert(num);<br>    }<br>    num++;<br>    return sayAlert;<br>}</p>\n<p> var sayAlert &#x3D; say667();<br> sayAlert()&#x2F;&#x2F;执行结果应该弹出的667</p>\n<ul>\n<li>javascript 代码中的”use strict”;是什么意思 ? 使用它区别是什么？<br>use strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,</li>\n</ul>\n<p>使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为。<br>默认支持的糟糕特性都会被禁用，比如不能用with，也不能在意外的情况下给全局变量赋值;<br>全局变量的显示声明,函数必须声明在顶层，不允许在非函数代码块内声明函数,arguments.callee也不允许使用；<br>消除代码运行的一些不安全之处，保证代码运行的安全,限制函数中的arguments修改，严格模式下的eval函数的行为和非严格模式的也不相同;</p>\n<p>提高编译器效率，增加运行速度；<br>为未来新版本的Javascript标准化做铺垫。</p>\n<ul>\n<li>如何判断一个对象是否属于某个类？<br>使用instanceof （待完善）<br> if(a instanceof Person){<br> alert(‘yes’);<br> }</li>\n<li>new操作符具体干了什么呢?<br>   1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。<br>   2、属性和方法被加入到 this 引用的对象中。<br>   3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。</li>\n</ul>\n<p>var obj  &#x3D; {};<br>obj.<strong>proto</strong> &#x3D; Base.prototype;<br>Base.call(obj);</p>\n<ul>\n<li>用原生JavaScript的实现过什么功能吗？</li>\n<li>Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？<br>hasOwnProperty</li>\n</ul>\n<p>javaScript中hasOwnProperty函数方法是返回一个布尔值，指出一个对象是否具有指定名称的属性。此方法无法检查该对象的原型链中是否具有该属性；该属性必须是对象本身的一个成员。<br>使用方法：<br>object.hasOwnProperty(proName)<br>其中参数object是必选项。一个对象的实例。<br>proName是必选项。一个属性名称的字符串值。</p>\n<p>如果 object 具有指定名称的属性，那么JavaScript中hasOwnProperty函数方法返回 true，反之则返回 false。</p>\n<ul>\n<li>JSON 的了解？<br>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。<br>它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小<br>如：{“age”:”12”, “name”:”back”}</li>\n</ul>\n<p>JSON字符串转换为JSON对象:<br>var obj &#x3D;eval(‘(‘+ str +’)’);<br>var obj &#x3D; str.parseJSON();<br>var obj &#x3D; JSON.parse(str);</p>\n<p>JSON对象转换为JSON字符串：<br>var last&#x3D;obj.toJSONString();<br>var last&#x3D;JSON.stringify(obj);</p>\n<ul>\n<li>[].forEach.call($$(“<em>“),function(a){a.style.outline&#x3D;”1px solid #”+(~~(Math.random()</em>(1&lt;&lt;24))).toString(16)}) 能解释一下这段代码的意思吗？</li>\n<li>js延迟加载的方式有哪些？<br>defer和async、动态创建DOM方式（用得最多）、按需异步载入js</li>\n<li>Ajax 是什么? 如何创建一个Ajax？<br>ajax的全称：Asynchronous Javascript And XML。<br>异步传输+js+xml。<br>所谓异步，在这里简单地解释就是：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验。</li>\n</ul>\n<p>(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象<br>(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息<br>(3)设置响应HTTP请求状态变化的函数<br>(4)发送HTTP请求<br>(5)获取异步调用返回的数据<br>(6)使用JavaScript和DOM实现局部刷新</p>\n<ul>\n<li>同步和异步的区别?<br>同步的概念应该是来自于OS中关于同步的概念:不同进程为协同完成某项工作而在先后次序上调整(通过阻塞,唤醒等方式).同步强调的是顺序性.谁先谁后.异步则不存在这种顺序性.<br>同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作。<br>异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。<br>（待完善）</li>\n<li>如何解决跨域问题?<br>jsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面</li>\n<li>页面编码和被请求的资源编码如果不一致如何处理？</li>\n<li>模块化开发怎么做？<br>立即执行函数,不暴露私有成员<br>  var module1 &#x3D; (function(){<br>  　　　　var _count &#x3D; 0;<br>  　　　　var m1 &#x3D; function(){<br>  　　　　　　&#x2F;&#x2F;…<br>  　　　　};<br>  　　　　var m2 &#x3D; function(){<br>  　　　　　　&#x2F;&#x2F;…<br>  　　　　};<br>  　　　　return {<br>  　　　　　　m1 : m1,<br>  　　　　　　m2 : m2<br>  　　　　};<br>  　　})();<br>（待完善）</li>\n<li>AMD（Modules&#x2F;Asynchronous-Definition）、CMD（Common Module Definition）规范区别？<br>AMD 规范在这里：<a href=\"https://github.com/amdjs/amdjs-api/wiki/AMD\">https://github.com/amdjs/amdjs-api/wiki/AMD</a><br>CMD 规范在这里：<a href=\"https://github.com/seajs/seajs/issues/242\">https://github.com/seajs/seajs/issues/242</a><br>Asynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。</li>\n</ul>\n<p> 区别：</p>\n<pre><code>1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.\n2. CMD 推崇依赖就近，AMD 推崇依赖前置。看代码：\n</code></pre>\n<p>&#x2F;&#x2F; CMD<br>define(function(require, exports, module) {<br>    var a &#x3D; require(‘.&#x2F;a’)<br>    a.doSomething()<br>    &#x2F;&#x2F; 此处略去 100 行<br>    var b &#x3D; require(‘.&#x2F;b’) &#x2F;&#x2F; 依赖可以就近书写<br>    b.doSomething()<br>    &#x2F;&#x2F; …<br>})</p>\n<p>&#x2F;&#x2F; AMD 默认推荐<br>define([‘.&#x2F;a’, ‘.&#x2F;b’], function(a, b) { &#x2F;&#x2F; 依赖必须一开始就写好<br>    a.doSomething()<br>    &#x2F;&#x2F; 此处略去 100 行<br>    b.doSomething()<br>    &#x2F;&#x2F; …<br>})</p>\n<ul>\n<li><p>requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）</p>\n</li>\n<li><p>谈一谈你对ECMAScript6的了解？</p>\n</li>\n<li><p>ECMAScript6 怎么写class么，为什么会出现class这种东西?</p>\n</li>\n<li><p>异步加载JS的方式有哪些？<br>(1) defer，只支持IE</p>\n<p>(2) async：</p>\n<p>(3) 创建script，插入到DOM中，加载完毕后callBack</p>\n</li>\n<li><p>documen.write和 innerHTML的区别<br>document.write只能重绘整个页面</p>\n</li>\n</ul>\n<p>innerHTML可以重绘页面的一部分</p>\n<ul>\n<li><p>DOM操作——怎样添加、移除、移动、复制、创建和查找节点?<br>（1）创建新节点<br>createDocumentFragment()    &#x2F;&#x2F;创建一个DOM片段<br>createElement()   &#x2F;&#x2F;创建一个具体的元素<br>createTextNode()   &#x2F;&#x2F;创建一个文本节点<br>（2）添加、移除、替换、插入<br>appendChild()<br>removeChild()<br>replaceChild()<br>insertBefore() &#x2F;&#x2F;在已有的子节点前插入一个新的子节点<br>（3）查找<br>getElementsByTagName()    &#x2F;&#x2F;通过标签名称<br>getElementsByName()    &#x2F;&#x2F;通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)<br>getElementById()    &#x2F;&#x2F;通过元素Id，唯一性</p>\n</li>\n<li><p>.call() 和 .apply() 的区别？<br>例子中用 add 来替换 sub，add.call(sub,3,1) &#x3D;&#x3D; add(3,1) ，所以运行结果为：alert(4);</p>\n<p>注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。</p>\n<p>  function add(a,b)<br>  {<br>  alert(a+b);<br>  }</p>\n<p>  function sub(a,b)<br>  {<br>  alert(a-b);<br>  }</p>\n<p>  add.call(sub,3,1);</p>\n</li>\n<li><p>数组和对象有哪些原生方法，列举一下？</p>\n</li>\n<li><p>JS 怎么实现一个类。怎么实例化这个类</p>\n</li>\n<li><p>JavaScript中的作用域与变量声明提升？</p>\n</li>\n<li><p>如何编写高性能的Javascript？</p>\n</li>\n<li><p>那些操作会造成内存泄漏？</p>\n</li>\n<li><p>JQuery的源码看过吗？能不能简单概况一下它的实现原理？</p>\n</li>\n<li><p>jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？</p>\n</li>\n<li><p>jquery中如何将数组转化为json字符串，然后再转化回来？</p>\n</li>\n<li><p>jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？</p>\n</li>\n<li><p>jquery.extend 与 jquery.fn.extend的区别？</p>\n</li>\n<li><p>jQuery 的队列是如何实现的？队列可以用在哪些地方？</p>\n</li>\n<li><p>谈一下Jquery中的bind(),live(),delegate(),on()的区别？</p>\n</li>\n<li><p>JQuery一个对象可以同时绑定多个事件，这是如何实现的？</p>\n</li>\n<li><p>是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？</p>\n</li>\n<li><p>jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）</p>\n</li>\n<li><p>针对 jQuery性能的优化方法？</p>\n</li>\n<li><p>Jquery与jQuery UI 有啥区别？<br>*jQuery是一个js库，主要提供的功能是选择器，属性修改和事件绑定等等。</p>\n</li>\n</ul>\n<p>*jQuery UI则是在jQuery的基础上，利用jQuery的扩展性，设计的插件。<br> 提供了一些常用的界面元素，诸如对话框、拖动行为、改变大小行为等等</p>\n<ul>\n<li><p>JQuery的源码看过吗？能不能简单说一下它的实现原理？</p>\n</li>\n<li><p>jquery 中如何将数组转化为json字符串，然后再转化回来？<br>jQuery中没有提供这个功能，所以你需要先编写两个jQuery的扩展：<br>  $.fn.stringifyArray &#x3D; function(array) {<br>  return JSON.stringify(array)<br>  }</p>\n<p>  $.fn.parseArray &#x3D; function(array) {<br>  return JSON.parse(array)<br>  }</p>\n<p>  然后调用：<br>  $(“”).stringifyArray(array)</p>\n</li>\n<li><p>jQuery和Zepto的区别？各自的使用场景？</p>\n</li>\n<li><p>针对 jQuery 的优化方法？<br>*基于Class的选择性的性能相对于Id选择器开销很大，因为需遍历所有DOM元素。</p>\n</li>\n</ul>\n<p>*频繁操作的DOM，先缓存起来再操作。用Jquery的链式调用更好。<br> 比如：var str&#x3D;$(“a”).attr(“href”);</p>\n<p>*for (var i &#x3D; size; i &lt; arr.length; i++) {}<br> for 循环每一次循环都查找了数组 (arr) 的.length 属性，在开始循环的时候设置一个变量来存储这个数字，可以让循环跑得更快：<br> for (var i &#x3D; size, length &#x3D; arr.length; i &lt; length; i++) {}</p>\n<ul>\n<li>Zepto的点透问题如何解决？</li>\n<li>jQueryUI如何自定义组件?</li>\n<li>需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？</li>\n<li>如何判断当前脚本运行在浏览器还是node环境中？（阿里）<br>通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中</li>\n<li>移动端最小触控区域是多大？</li>\n<li>jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?</li>\n<li>把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？</li>\n<li>移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）</li>\n<li>知道各种JS框架(Angular, Backbone, Ember, React, Meteor, Knockout…)么? 能讲出他们各自的优点和缺点么?</li>\n<li>Underscore 对哪些 JS 原生对象进行了扩展以及提供了哪些好用的函数方法？</li>\n<li>解释JavaScript中的作用域与变量声明提升？</li>\n<li>那些操作会造成内存泄漏？<br>内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。<br>垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。</li>\n</ul>\n<p>setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。<br>闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）</p>\n<ul>\n<li><p>JQuery一个对象可以同时绑定多个事件，这是如何实现的？</p>\n</li>\n<li><p>Node.js的适用场景？</p>\n</li>\n<li><p>(如果会用node)知道route, middleware, cluster, nodemon, pm2, server-side rendering么?</p>\n</li>\n<li><p>解释一下 Backbone 的 MVC 实现方式？</p>\n</li>\n<li><p>什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?</p>\n</li>\n<li><p>知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?</p>\n</li>\n<li><p>如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?</p>\n</li>\n<li><p>前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?</p>\n</li>\n<li><p>简述一下 Handlebars 的基本用法？</p>\n</li>\n<li><p>简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？</p>\n</li>\n<li><p>用js实现千位分隔符?(来源：前端农民工，提示：正则+replace)<br>function commafy(num) {<br>   num &#x3D; num + ‘’;<br>   var reg &#x3D; &#x2F;(-?d+)(d{3})&#x2F;;</p>\n<p>  if(reg.test(num)){<br>   num &#x3D; num.replace(reg, ‘$1,$2’);<br>  }<br>  return num;</p>\n</li>\n</ul>\n<p>}</p>\n<ul>\n<li>检测浏览器版本版本有哪些方式？<br>功能检测、userAgent特征检测</li>\n</ul>\n<p>比如：navigator.userAgent<br>&#x2F;&#x2F;“Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit&#x2F;537.36<br>  (KHTML, like Gecko) Chrome&#x2F;41.0.2272.101 Safari&#x2F;537.36”</p>\n<ul>\n<li><p>What is a Polyfill?<br>polyfill 是“在旧版浏览器上复制标准 API 的 JavaScript 补充”,可以动态地加载 JavaScript 代码或库，在不支持这些标准 API 的浏览器中模拟它们。<br>例如，geolocation（地理位置）polyfill 可以在 navigator 对象上添加全局的 geolocation 对象，还能添加 getCurrentPosition 函数以及“坐标”回调对象，<br>所有这些都是 W3C 地理位置 API 定义的对象和函数。因为 polyfill 模拟标准 API，所以能够以一种面向所有浏览器未来的方式针对这些 API 进行开发，<br>一旦对这些 API 的支持变成绝对大多数，则可以方便地去掉 polyfill，无需做任何额外工作。</p>\n</li>\n<li><p>做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？<br>比如： html5shiv、Geolocation、Placeholder </p>\n</li>\n<li><p>我们给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件，会先执行冒泡还是捕获？</p>\n</li>\n<li><p>Object.is() 与原来的比较操作符“ &#x3D;&#x3D;&#x3D;”、“ &#x3D;&#x3D;”的区别？<br>两等号判等，会在比较时进行类型转换；<br>三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）；</p>\n</li>\n</ul>\n<p>Object.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，<br>但 Object.is(NaN, NaN) 会返回 true.</p>\n<p>Object.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。</p>\n<ul>\n<li><p>react-router 路由系统的实现原理？</p>\n</li>\n<li><p>React中如何解决第三方类库的问题?</p>\n</li>\n<li><p>原来公司工作流程是怎么样的，如何与其他人协作的？如何夸部门合作的？</p>\n</li>\n<li><p>你遇到过比较难的技术问题是？你是如何解决的？</p>\n</li>\n<li><p>设计模式 知道什么是singleton, factory, strategy, decrator么?</p>\n</li>\n<li><p>常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？</p>\n</li>\n<li><p>页面重构怎么操作？<br>网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。<br>也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。</p>\n</li>\n</ul>\n<p>对于传统的网站来说重构通常是：</p>\n<p>表格(table)布局改为DIV+CSS<br>使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)<br>对于移动平台的优化<br>针对于SEO进行优化<br>深层次的网站重构应该考虑的方面</p>\n<p>减少代码间的耦合<br>让代码保持弹性<br>严格按规范编写代码<br>设计可扩展的API<br>代替旧有的框架、语言(如VB)<br>增强用户体验<br>通常来说对于速度的优化也包含在重构中</p>\n<p>压缩JS、CSS、image等前端资源(通常是由服务器来解决)<br>程序的性能优化(如数据读写)<br>采用CDN来加速资源加载<br>对于JS DOM的优化<br>HTTP服务器的文件缓存</p>\n<ul>\n<li><p>列举IE与其他浏览器不一样的特性？<br>1、事件不同之处：</p>\n<p>  触发事件的元素被认为是目标（target）。而在 IE 中，目标包含在 event 对象的 srcElement 属性；</p>\n<p>  获取字符代码、如果按键代表一个字符（shift、ctrl、alt除外），IE 的 keyCode 会返回字符代码（Unicode），DOM 中按键的代码和字符是分离的，要获取字符代码，需要使用 charCode 属性；</p>\n<p>  阻止某个事件的默认行为，IE 中阻止某个事件的默认行为，必须将 returnValue 属性设置为 false，Mozilla 中，需要调用 preventDefault() 方法；</p>\n<p>  停止事件冒泡，IE 中阻止事件进一步冒泡，需要设置 cancelBubble 为 true，Mozzilla 中，需要调用 stopPropagation()；</p>\n</li>\n<li><p>99%的网站都需要被重构是那本书上写的？<br>网站重构：应用web标准进行设计（第2版）</p>\n</li>\n<li><p>什么叫优雅降级和渐进增强？<br>优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。<br>如：border-shadow</p>\n</li>\n</ul>\n<p>渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。<br>如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验；</p>\n<ul>\n<li>是否了解公钥加密和私钥加密。<br>一般情况下是指私钥用于对数据进行签名，公钥用于对签名进行验证;<br>HTTP网站在浏览器端用公钥加密敏感数据，然后在服务器端再用私钥解密。</li>\n<li>WEB应用从服务器主动推送Data到客户端有那些方式？<br>html5提供的Websocket<br>不可见的iframe<br>WebSocket通过Flash<br>XHR长时间连接<br>XHR Multipart Streaming<script>标签的长时间连接(可跨域)</li>\n<li>对Node的优点和缺点提出了自己的看法？<br>*（优点）因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，<br>因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。<br>此外，与Node代理服务器交互的客户端代码是由javascript语言编写的，<br>因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。</li>\n</ul>\n<p>*（缺点）Node是一个相对新的开源项目，所以不太稳定，它总是一直在变，<br>  而且缺少足够多的第三方库支持。看起来，就像是Ruby&#x2F;Rails当年的样子。</p>\n<ul>\n<li><p>你有用过哪些前端性能优化的方法？<br>（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。</p>\n<p>（2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数</p>\n<p>（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。</p>\n<p>（4） 当需要设置的样式很多时设置className而不是直接操作style。</p>\n<p>（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。</p>\n<p>（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。</p>\n<p>（7） 图片预加载，将样式表放在顶部，将脚本放在底部  加上时间戳。</p>\n<p>（8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。<br>对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。</p>\n</li>\n<li><p>http状态码有那些？分别代表是什么意思？<br>  简单版<br>  [<br>  100  Continue   继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息<br>  200  OK         正常返回信息<br>  201  Created    请求成功并且服务器创建了新的资源<br>  202  Accepted   服务器已接受请求，但尚未处理<br>  301  Moved Permanently  请求的网页已永久移动到新位置。<br>  302 Found       临时性重定向。<br>  303 See Other   临时性重定向，且总是使用 GET 请求新的 URI。<br>  304  Not Modified 自从上次请求后，请求的网页未修改过。<br><br>  400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。<br>  401 Unauthorized 请求未授权。<br>  403 Forbidden   禁止访问。<br>  404 Not Found   找不到如何与 URI 相匹配的资源。<br><br>  500 Internal Server Error  最常见的服务器端错误。<br>  503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。<br>  ]</p>\n<p>完整版<br>1**(信息类)：表示接收到请求并且继续处理<br>  100——客户必须继续发出请求<br>  101——客户要求服务器根据请求转换HTTP协议版本</p>\n<p>2**(响应成功)：表示动作被成功接收、理解和接受<br>  200——表明该请求被成功地完成，所请求的资源发送回客户端<br>  201——提示知道新文件的URL<br>  202——接受和处理、但处理未完成<br>  203——返回信息不确定或不完整<br>  204——请求收到，但返回信息为空<br>  205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件<br>  206——服务器已经完成了部分用户的GET请求</p>\n<p>3**(重定向类)：为了完成指定的动作，必须接受进一步处理<br>  300——请求的资源可在多处得到<br>  301——本网页被永久性转移到另一个URL<br>  302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。<br>  303——建议客户访问其他URL或访问方式<br>  304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用<br>  305——请求的资源必须从服务器指定的地址得到<br>  306——前一版本HTTP中使用的代码，现行版本中不再使用<br>  307——申明请求的资源临时性删除</p>\n<p>4**(客户端错误类)：请求包含错误语法或不能正确执行<br>  400——客户端请求有语法错误，不能被服务器所理解<br>  401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用<br>  HTTP 401.1 - 未授权：登录失败<br>  　　HTTP 401.2 - 未授权：服务器配置问题导致登录失败<br>  　　HTTP 401.3 - ACL 禁止访问资源<br>  　　HTTP 401.4 - 未授权：授权被筛选器拒绝<br>  HTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败<br>  402——保留有效ChargeTo头响应<br>  403——禁止访问，服务器收到请求，但是拒绝提供服务<br>  HTTP 403.1 禁止访问：禁止可执行访问<br>  　　HTTP 403.2 - 禁止访问：禁止读访问<br>  　　HTTP 403.3 - 禁止访问：禁止写访问<br>  　　HTTP 403.4 - 禁止访问：要求 SSL<br>  　　HTTP 403.5 - 禁止访问：要求 SSL 128<br>  　　HTTP 403.6 - 禁止访问：IP 地址被拒绝<br>  　　HTTP 403.7 - 禁止访问：要求客户证书<br>  　　HTTP 403.8 - 禁止访问：禁止站点访问<br>  　　HTTP 403.9 - 禁止访问：连接的用户过多<br>  　　HTTP 403.10 - 禁止访问：配置无效<br>  　　HTTP 403.11 - 禁止访问：密码更改<br>  　　HTTP 403.12 - 禁止访问：映射器拒绝访问<br>  　　HTTP 403.13 - 禁止访问：客户证书已被吊销<br>  　　HTTP 403.15 - 禁止访问：客户访问许可过多<br>  　　HTTP 403.16 - 禁止访问：客户证书不可信或者无效<br>  HTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效<br>  404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL<br>  405——用户在Request-Line字段定义的方法不允许<br>  406——根据用户发送的Accept拖，请求资源不可访问<br>  407——类似401，用户必须首先在代理服务器上得到授权<br>  408——客户端没有在用户指定的饿时间内完成请求<br>  409——对当前资源状态，请求不能完成<br>  410——服务器上不再有此资源且无进一步的参考地址<br>  411——服务器拒绝用户定义的Content-Length属性请求<br>  412——一个或多个请求头字段在当前请求中错误<br>  413——请求的资源大于服务器允许的大小<br>  414——请求的资源URL长于服务器允许的长度<br>  415——请求资源不支持请求项目格式<br>  416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段<br>  417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。</p>\n<p>5**(服务端错误类)：服务器不能正确执行一个正确的请求<br>  HTTP 500 - 服务器遇到错误，无法完成请求<br>  　　HTTP 500.100 - 内部服务器错误 - ASP 错误<br>  　　HTTP 500-11 服务器关闭<br>  　　HTTP 500-12 应用程序重新启动<br>  　　HTTP 500-13 - 服务器太忙<br>  　　HTTP 500-14 - 应用程序无效<br>  　　HTTP 500-15 - 不允许请求 global.asa<br>  　　Error 501 - 未实现<br>HTTP 502 - 网关错误<br>HTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常</p>\n</li>\n<li><p>一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）<br>注：这题胜在区分度高，知识点覆盖广，再不懂的人，也能答出几句，<br>而高手可以根据自己擅长的领域自由发挥，从URL规范、HTTP协议、DNS、CDN、数据库查询、<br>到浏览器流式解析、CSS规则构建、layout、paint、onload&#x2F;domready、JS执行、JS API绑定等等；</p>\n<p>详细版：<br>  1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;<br>  2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;<br>  3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;<br>  4、进行HTTP协议会话，客户端发送报头(请求报头);<br>  5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;<br>  6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;<br>  7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;<br>  8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;<br>  9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;<br>  10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。</p>\n<p>简洁版：<br>  浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；<br>  服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；<br>  浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；<br>  载入解析到的资源文件，渲染页面，完成。</p>\n</li>\n<li><p>部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？</p>\n</li>\n<li><p>从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?</p>\n</li>\n<li><p>除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？</p>\n</li>\n<li><p>你用的得心应手用的熟练地编辑器&amp;开发环境是什么样子？<br>Sublime Text 3 + 相关插件编写前端代码<br>Google chrome 、Mozilla Firefox浏览器 +firebug 兼容测试和预览页面UI、动画效果和交互功能<br>Node.js+Gulp<br>git 用于版本控制和Code Review</p>\n</li>\n<li><p>对前端工程师这个职位是怎么样理解的？它的前景会怎么样？<br>前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。<br>1、实现界面交互<br>2、提升用户体验<br>3、有了Node.js，前端可以实现服务端的一些事情</p>\n</li>\n</ul>\n<p>前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，</p>\n<p>参与项目，快速高质量完成实现效果图，精确到1px；</p>\n<p>与团队成员，UI设计，产品经理的沟通；</p>\n<p>做好的页面结构，页面重构和用户体验；</p>\n<p>处理hack，兼容、写出优美的代码格式；</p>\n<p>针对服务器的优化、拥抱最新前端技术。</p>\n<ul>\n<li>你怎么看待Web App 、hybrid App、Native App？</li>\n<li>你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）</li>\n<li>你对加班的看法？<br>加班就像借钱，原则应当是——救急不救穷</li>\n<li>平时如何管理你的项目？<br>先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；</li>\n</ul>\n<p>编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；</p>\n<p>标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；</p>\n<p>页面进行标注（例如 页面 模块 开始和结束）；</p>\n<p>CSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；</p>\n<p>JS 分文件夹存放 命名以该JS功能为准的英文翻译。</p>\n<p>图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理</p>\n<ul>\n<li>如何设计突发大规模并发架构？</li>\n<li>当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？</li>\n<li>说说最近最流行的一些东西吧？常去哪些网站？<br>  ES6\\WebAssembly\\Node\\MVVM\\Web Components\\React\\React Native\\Webpack 组件化</li>\n<li>知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?</li>\n<li>移动端（Android IOS）怎么做好用户体验?<br>清晰的视觉纵线、<br>信息的分组、极致的减法、<br>利用选择代替输入、<br>标签及文字的排布方式、<br>依靠明文确认密码、<br>合理的键盘利用、</li>\n<li>简单描述一下你做过的移动APP项目研发流程？</li>\n<li>你在现在的团队处于什么样的角色，起到了什么明显的作用？</li>\n<li>你认为怎样才是全端工程师（Full Stack developer）？</li>\n<li>介绍一个你最得意的作品吧？</li>\n<li>你有自己的技术博客吗，用了哪些技术？</li>\n<li>对前端安全有什么看法？</li>\n<li>是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？</li>\n<li>项目中遇到国哪些印象深刻的技术难题，具体是什么问题，怎么解决？。</li>\n<li>最近在学什么东西？</li>\n<li>你的优点是什么？缺点是什么？</li>\n<li>如何管理前端团队?</li>\n<li>最近在学什么？能谈谈你未来3，5年给自己的规划吗？</li>\n</ul>\n<ol>\n<li><p>极客标签：     <a href=\"http://www.gbtags.com/\">http://www.gbtags.com/</a></p>\n</li>\n<li><p>码农周刊：     <a href=\"http://weekly.manong.io/issues/\">http://weekly.manong.io/issues/</a></p>\n</li>\n<li><p>前端周刊：     <a href=\"http://www.feweekly.com/issues\">http://www.feweekly.com/issues</a></p>\n</li>\n<li><p>慕课网：       <a href=\"http://www.imooc.com/\">http://www.imooc.com/</a></p>\n</li>\n<li><p>div.io：         <a href=\"http://div.io/\">http://div.io</a></p>\n</li>\n<li><p>Hacker News： <a href=\"https://news.ycombinator.com/news\">https://news.ycombinator.com/news</a></p>\n</li>\n<li><p>InfoQ：       <a href=\"http://www.infoq.com/\">http://www.infoq.com/</a></p>\n</li>\n<li><p>w3cplus：     <a href=\"http://www.w3cplus.com/\">http://www.w3cplus.com/</a></p>\n</li>\n<li><p>Stack Overflow： <a href=\"http://stackoverflow.com/\">http://stackoverflow.com/</a></p>\n</li>\n</ol>\n<p>10.w3school：    <a href=\"http://www.w3school.com.cn/\">http://www.w3school.com.cn/</a></p>\n<p>11.mozilla：     <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a></p>\n<ol>\n<li>jQuery 基本原理</li>\n<li>JavaScript 秘密花园</li>\n<li>CSS参考手册</li>\n<li>JavaScript 标准参考教程</li>\n<li>ECMAScript 6入门</li>\n</ol>\n<p>爱机车、爱骑行、爱旅行、爱摄影、爱阅读的前端开发攻城师。</p>\n<p>我的微博：<a href=\"http://weibo.com/920802999\">http://weibo.com/920802999</a></p>\n<ul>\n<li>Desktop version</li>\n</ul>\n</script></li></ul>"},{"title":"开源vue项目合集","date":"2018-03-21T07:30:02.000Z","_content":"\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/><meta name=\"exporter-version\" content=\"Evernote Mac 9.6.9 (470983)\"/><meta name=\"author\" content=\"huizi77xl@sina.com\"/><meta name=\"created\" content=\"2023-05-28 10:31:35 +0000\"/><meta name=\"source\" content=\"desktop.mac\"/><meta name=\"updated\" content=\"2023-05-28 10:32:08 +0000\"/><title>vue开源项目收集</title></head><body style=\"font-size: 14px;\"><div><br/></div><div><br/></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">awesome-github-vue 是由</span><a href=\"http://www.opendigg.com/\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">整理并维护的Vue相关开源项目库集合。我们会定期同步</span><a href=\"http://www.opendigg.com/tags/front-vue\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">上的项目到这里，也欢迎各位</span><a href=\"https://github.com/opendigg/opending-share-projects\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">提交项目</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">给我们。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">如果收录的项目有错误，可以通过</span><a href=\"https://github.com/opendigg/awesome-github-vue/issues\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">issue</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">内容来自转载\n</span></div><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">内容\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#UI%E7%BB%84%E4%BB%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">UI组件</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">开发框架</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%AE%9E%E7%94%A8%E5%BA%93\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">实用库</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E6%9C%8D%E5%8A%A1%E7%AB%AF\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">服务端</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">辅助工具</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">应用实例</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#Demo%E7%A4%BA%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Demo示例</a></div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">UI组件\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/element\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element</a> ★10420 - 饿了么出品的Vue2的web UI工具套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/airyland/vux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vux</a> ★7139 - 基于Vue和WeUI的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iview/iview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview</a> ★5164 - 基于 Vuejs 的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/mint-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-ui</a> ★5082 - Vue 2的移动UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JosephusPaye/Keen-UI\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Keen-UI</a> ★2483 - 轻量级的基本UI组件合集</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/marcosmoura/vue-material\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material</a> ★2476 - 通过Vue Material和Vue 2建立精美的app应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/museui/muse-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">muse-ui</a> ★2154 - 三端样式一致的响应式 UI 库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuetifyjs/vuetify\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuetify</a> ★1941 - 为移动而生的Vue JS 2组件框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vonic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vonic</a> ★1601 - 快速构建移动端单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/eme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eme</a> ★1431 - 优雅的Markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vue-multiselect\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multiselect</a> ★1265 - Vue.js选择框解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ratiw/vue-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-table</a> ★870 - 简化数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueCircleMenu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueCircleMenu</a> ★793 - 漂亮的vue圆环菜单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chat</a> ★769 - vuejs和vuex及webpack的聊天示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zulko/eagle.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eagle.js</a> ★758 - hacker的幻灯片演示框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/taylorchen709/vueAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueAdmin</a> ★749 - 基于vuejs2和element的简单的管理员模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/luojilab/radon-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">radon-ui</a> ★658 - 快速开发产品的Vue组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pi0/bootstrap-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">bootstrap-vue</a> ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MopTym/vue-waterfall\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waterfall</a> ★639 - Vue.js的瀑布布局组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenz24/vue-blu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blu</a> ★623 - 帮助你轻松创建web应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.Draggable</a> ★623 - 实现拖放和视图模型数组同步</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-carbon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carbon</a> ★621 - 基于 vue 开发MD风格的移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FE-Driver/vue-beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-beauty</a> ★616 - 由vue和ant design创建的优美UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-scroll</a> ★578 - VueJS的无限滚动指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome-swiper</a> ★577 - vue.js触摸滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-syntax-highlight\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-syntax-highlight</a> ★574 - Sublime Text语法高亮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jinzhe/vue-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-calendar</a> ★474 - 日期选择插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-amap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-amap</a> ★404 - 基于Vue 2和高德地图的地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartjs</a> ★388 - vue中的Chartjs的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-swipe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swipe</a> ★388 - VueJS触摸滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-echarts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-echarts</a> ★367 - VueJS的ECharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★354 - 日历和日期选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zhangdroid/Gokotta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Gokotta</a> ★332 - 简单的音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/markcook\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">markcook</a> ★322 - 好看的markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sagalbot/vue-sortable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-sortable</a> ★308 - 轻松添加拖拽排序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-maps</a> ★293 - 带有双向数据绑定Google地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-quill-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill-editor</a> ★268 - 基于Quill适用于Vue2的富文本编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-progressbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressbar</a> ★266 - vue轻量级进度条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-picture-input</a> ★254 - 移动友好的图片文件输入组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeachScript/vue-infinite-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-loading</a> ★251 - VueJS的无限滚动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lian-yue/vue-upload-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-upload-component</a> ★239 - Vuejs文件上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-trend\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trend</a> ★235 - 简单优雅的星光线条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vue-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroller</a> ★233 - Vonic UI的功能性组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TahaSh/vue-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-paginate</a> ★222 - 分页数据的简约VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-video-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video-player</a> ★215 - VueJS视频及直播播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueStar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueStar</a> ★214 - 带星星动画的vue点赞按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datetime-picker</a> ★207 - 日期时间选择控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-core-image-upload</a> ★200 - 轻量级的vue上传插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-tables-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tables-2</a> ★195 - 显示数据的bootstrap样式网格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★190 - 基于vue.js的全日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icai/vue2-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-calendar</a> ★187 - 支持lunar和日期事件的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/rubik\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rubik</a> ★183 - 基于Vuejs2的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/charliekassel/vuejs-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-datepicker</a> ★179 - vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-mugen-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mugen-scroll</a> ★179 - 无限滚动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/DataVisualization\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DataVisualization</a> ★178 - 数据可视化</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-loadmore\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-loadmore</a> ★176 - VueJS的双向下拉刷新组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-virtual-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-virtual-scroller</a> ★175 - 带任意数目数据的顺畅的滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeakTai/vue-html5-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-html5-editor</a> ★163 - html5所见即所得编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hifarer/Vueditor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vueditor</a> ★157 - 所见即所得的编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/warpcgd/vue-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider</a> ★138 - vue 滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-msgbox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-msgbox</a> ★134 - vuejs的消息框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-slide\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slide</a> ★133 - vue轻量级滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-and-drop-list</a> ★127 - 创建排序列表的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Astray-git/vue-dragula\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragula</a> ★126 - 使拖放变得简单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JALBAA/vue-lazyload-img\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload-img</a> ★126 - 移动优化的vue图片懒加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rowanwins/vue-dropzone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropzone</a> ★124 - 用于文件上传的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/coderdiaz/vue-datasource\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datasource</a> ★121 - 创建VueJS动态表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/njleonzhang/vue-data-tables\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-tables</a> ★116 - VueJS2数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wlada/vue-carousel-3d\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carousel-3d</a> ★114 - VueJS的3D轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuwe/vuwe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuwe</a> ★113 - 基于微信WeUI所开发的专用于Vue2的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weilao/vue-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swiper</a> ★113 - 易于使用的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressive-image</a> ★111 - Vue的渐进图像加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NightCatSama/vue-slider-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider-component</a> ★109 - 在vue1和vue2中使用滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hchstera/vue-charts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-charts</a> ★109 - 轻松渲染一个图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewDadaFE/vue-impression\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-impression</a> ★104 - 移动Vuejs2 UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-region-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-region-picker</a> ★96 - 选择中国的省份市和地区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/santiblanko/vue-instant\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-instant</a> ★95 - 轻松创建自动提示的自定义搜索控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/vue-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-images</a> ★94 - 显示一组图片的lightbox组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cngu/vue-typer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typer</a> ★92 - 模拟用户输入选择和删除文本的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loading</a> ★92 - 元素中加载block的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-dragging\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragging</a> ★91 - 使元素可以拖拽</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/F-loat/vue-simplemde\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-simplemde</a> ★90 - VueJS的Markdown编辑器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/galenyuan/vue-datatable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datatable</a> ★89 - 使用Vuejs创建的DataTableView</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ydcss/vue-ydui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ydui</a> ★86 - 基于Vue2的移动端和微信UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-crop-upload</a> ★82 - vue图片剪裁上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-loading-bar</a> ★82 - 最简单的仿Youtube加载条视图</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-tooltip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tooltip</a> ★80 - 带绑定信息提示的提示工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LucienLee/vue-data-grid\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-grid</a> ★78 - VueJS复杂桌面交互示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weizhenye/vue-highcharts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-highcharts</a> ★78 - HighCharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/microzz/vue-music-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-player</a> ★77 - Vuejs写一个音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weifeiyue/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★76 - 漂亮的Vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-video\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video</a> ★75 - Vue.js的HTML5视频播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MMF-FE/vue-svgicon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svgicon</a> ★72 - 创建svg图标组件的工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Dafrok/vue-baidu-map\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-baidu-map</a> ★70 - 基于 Vue 2的百度地图组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-touch-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-ripple</a> ★69 - vuejs的触摸ripple组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-toast-mobile</a> ★68 - VueJS的toast插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-scrollbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollbar</a> ★64 - 最简单的滚动区域组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phoenixwong/vue2-timepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-timepicker</a> ★63 - 下拉时间选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-quill\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill</a> ★61 - vue组件构建quill编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Bubblings/vue-date-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-date-picker</a> ★61 - VueJS日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Kocisov/coffeebreak\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">coffeebreak</a> ★61 - 实时编辑CSS组件工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bkzl/vue-float-label\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-float-label</a> ★58 - VueJS浮动标签模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/vue-google-signin-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-signin-button</a> ★58 - 导入谷歌登录按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenjiahan/vodal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vodal</a> ★57 - 动画的vue模态</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lithiumjake/vue-placeholders\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-placeholders</a> ★57 - 处理占位符图片和乱码</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-social-sharing</a> ★53 - 社交分享组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/davidroyer/vue2-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-editor</a> ★53 - HTML编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moip/awesome-mask\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">awesome-mask</a> ★49 - 拥有独一无二mask的表单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shhdgit/vue-easy-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-slider</a> ★49 - Vue 2.x的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Ginhing/vue-tagsinput\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tagsinput</a> ★44 - 基于VueJS的标签组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/waynecz/vue-img-inputer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-inputer</a> ★40 - 基于Vue2的图片输入框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lokyoung/vuejs-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-paginate</a> ★39 - 分页VueJS组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/staskjs/vue-slick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slick</a> ★39 - 实现流畅轮播框的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">datepicker</a> ★38 - 基于flatpickr的时间选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yunyi1895/vue-music-master\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-master</a> ★38 - vue手机端网页音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★37 - vue FullCalendar封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-chart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chart</a> ★37 - 强大的高速的vue图表解析</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tianyong90/we-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">we-vue</a> ★36 - Vue2及weui1开发的组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/handsontable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">handsontable</a> ★36 - 网页表格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-radial-progress</a> ★35 - Vue.js放射性进度条组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fangyongbao/cubeex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cubeex</a> ★35 - 包含一套完整的移动UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-popup-mixin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-popup-mixin</a> ★35 - 用于管理弹出框的遮盖层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/loujiayu/vue-material-design\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material-design</a> ★34 - Vue MD风格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bbonnin/vue-morris\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-morris</a> ★33 - Vuejs组件封装Morrisjs库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-table</a> ★33 - 可排序可检索的表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GeoffZhu/vue-event-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-event-calendar</a> ★32 - 简单小巧的事件日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-form-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-form-2</a> ★30 - 全面的HTML表单管理的解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/legeneek/vue-image-clip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-clip</a> ★29 - 基于vue的图像剪辑组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-touch-keyboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-keyboard</a> ★28 - VueJS虚拟键盘组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bajian/vue-pull-to-refresh\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pull-to-refresh</a> ★28 - Vue2的上拉下拉</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-side-nav\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-side-nav</a> ★28 - 响应式的侧边导航</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ripple</a> ★28 - 制作谷歌MD风格涟漪效果的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-indicator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-indicator</a> ★27 - VueJS移动加载指示器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/darrynten/vue-lazy-background-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-background-images</a> ★25 - 懒加载背景组件的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">chartjs</a> ★24 - Vue Bulma的chartjs组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ankane/vue-chartkick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartkick</a> ★24 - VueJS一行代码实现优美图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/suguangwen/vue-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroll</a> ★24 - vue滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/blue0728/vue-area\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-area</a> ★23 - 省市区三级联动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lisiyizu/vue-ztree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ztree</a> ★23 - 用 vue 写的树层级组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alexqdjay/vue-tabs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tabs</a> ★22 - 多tab页轻型框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker-simple</a> ★21 - 基于vue的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shiye515/vue-m-carousel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-m-carousel</a> ★21 - vue 移动端轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/aweiu/vue-verify-pop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-verify-pop</a> ★20 - 带气泡提示的vue校验插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-waves\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waves</a> ★20 - waves的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xinxingyu/vue-city\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-city</a> ★15 - 城市选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-parallax\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-parallax</a> ★15 - 整洁的视觉效果</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JackGit/vue-img-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-loader</a> ★14 - 图片加载UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-smoothscroll</a> ★13 - smoothscroll的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eduardostuart/vue-typewriter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typewriter</a> ★13 - vue组件类型</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sinchang/vue-laypage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-laypage</a> ★12 - 简单的VueJS分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weibangtuo/vue-tree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tree</a> ★12 - vue树视图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Treri/vue-ios-alertview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ios-alertview</a> ★8 - iOS7+ 风格的alertview服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/savokiss/vue-cascading-address\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cascading-address</a> ★8 - vue地区选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ibufu/dd-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">dd-vue-component</a> ★7 - 订单来了的公共组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeseason/paco-ui-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">paco-ui-vue</a> ★7 - PACOUI的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/doodlewind/vue-cmap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cmap</a> ★6 - Vue China map可视化组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/steven5538/vue-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-button</a> ★4 - Vue按钮组件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">开发框架\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue.js</a> ★47739 - 流行的轻量高效的前端组件化方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fundon/vue-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-admin</a> ★3528 - Vue管理面板框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/quasarframework/quasar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">quasar</a> ★1599 - 响应式网站和混合移动应用程序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/electron-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">electron-vue</a> ★1454 - Electron及VueJS快速启动样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vuepack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuepack</a> ★1395 - 现代VueJS启动器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/N3-components/N3-components\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">N3-components</a> ★642 - 快速构建页面和应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/petervmeijgaard/vue-2.0-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-2.0-boilerplate</a> ★263 - Vue2单页应用样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hanan198501/vue-spa-template\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-spa-template</a> ★256 - 前后端分离后的单页应用开发</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nolimits4web/Framework7-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-Vue</a> ★233 - VueJS与Framework7结合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-stack-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-stack-2.0</a> ★152 - Vue2项目样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangxg2016/vue-bulma\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bulma</a> ★147 - 轻量级高性能MVVM Admin UI框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rodzzlessa24/vue-webgulp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-webgulp</a> ★103 - 仿VueJS Vue loader示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/erguotou520/vue-fullstack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullstack</a> ★96 - 实时的用户友好的后台系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shenghy/jspangAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jspangAdmin</a> ★74 - 基于Vue2的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Metnew/vue-element-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-element-starter</a> ★41 - vue启动页</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">实用库\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vuex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex</a> ★6414 - 专为 Vue.js 应用程序开发的状态管理模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-validator</a> ★1655 - vue的验证器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loader</a> ★1540 - Vue.js 针对Webpack的组件装载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-lazyload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload</a> ★873 - 用于懒加载的Vue模块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vuelidate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuelidate</a> ★851 - 简单轻量级的基于模块的Vue.js验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kazupon/vue-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-i18n</a> ★754 - VueJS的多语言切换插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zerqu/qingcheng\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">qingcheng</a> ★684 - qingcheng主题</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-desktop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-desktop</a> ★470 - 创建管理面板网站的UI库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Socket.io\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Socketio</a> ★368 - VueJS的socketio实现</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-awesome\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome</a> ★321 - VueJS字体Awesome组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ktquez/vue-head\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-head</a> ★306 - head标签的meta信息操作</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/declandewet/vue-meta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-meta</a> ★292 - 管理app的meta信息</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/meteor-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue-component</a> ★283 - vue和meteor整合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-axios\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios</a> ★268 - 将axios整合到VueJS的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/vue-flatpickr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-flatpickr</a> ★204 - 封装Flatpickr的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eddyerburgh/avoriaz\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">avoriaz</a> ★152 - VueJS测试实用工具库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-timeago\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-timeago</a> ★140 - VueJS的时间前组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhouzhuojie/meteor-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue</a> ★130 - VueJS和Meteor的桥接</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cenkai88/vue-svg-icon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svg-icon</a> ★116 - vue2的可变彩色svg图标方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/simplesmiler/vue-focus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-focus</a> ★111 - 可重用VueJS组件的焦点指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/haydenbbickerton/vue-animate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-animate</a> ★92 - 跨浏览器CSS3动画库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-modal</a> ★88 - vue的Bootstrap样式组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lmk123/vue-framework7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-framework7</a> ★84 - 结合VueJS使用的Framework7组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rigor789/vue-scrollTo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollTo</a> ★81 - 滚动到元素的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vuep\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuep</a> ★81 - 用实时编辑和预览来渲染Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lynzz/element-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element-admin</a> ★76 - 支持 vuecli 的 Element UI 的后台模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-password-strength-meter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-password-strength-meter</a> ★71 - 交互式密码强度计</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sopamo/vue-online\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-online</a> ★71 - reactive的在线和离线组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-render</a> ★70 - 用于Vue组件的延迟渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xiaokaike/vue-clipboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-clipboard</a> ★68 - VueJS的剪贴板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xtongs/vue-recyclist\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-recyclist</a> ★65 - vuejs无限滚动列表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kartsims/vue-cordova\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cordova</a> ★62 - Cordova的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-events\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-events</a> ★62 - 简化事件的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LinusBorg/portal-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">portal-vue</a> ★60 - 在组件外部渲染DOM</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/vue-electron\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-electron</a> ★57 - 将选择的API封装到Vue对象中的插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/cleave\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cleave</a> ★56 - 基于cleave.js的Cleave组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mlyknown/vue-gesture\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-gesture</a> ★56 - VueJS的手势事件插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iFgR/vue-shortkey\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shortkey</a> ★55 - 应用于Vue.js的Vue-ShortKey 插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-qart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-qart</a> ★53 - 用于qartjs的Vue2指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/vuemit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuemit</a> ★53 - 处理VueJS事件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weinot/vue-router-transition\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-router-transition</a> ★53 - 页面过渡插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-local-storage</a> ★52 - 具有类型支持的Vuejs本地储存插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kaorun343/vue-property-decorator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-property-decorator</a> ★52 - VueJS和属性Decorator</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-websocket\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-websocket</a> ★50 - VueJS的Websocket插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">http-vue-loader</a> ★48 - 从html及js环境加载vue文件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedeux/vuedeux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedeux</a> ★44 - 轻量级开源实用用层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SevenOutman/vue-aplayer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-aplayer</a> ★44 - 便于配置的音乐播放器vue2组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/lazy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">lazy-vue</a> ★42 - 懒加载图片</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yangmingshan/vue-bus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bus</a> ★40 - VueJS的事件总线</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/se-panfilov/vue-notifications\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-notifications</a> ★36 - 非阻塞通知库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ropbla9/vue-reactive-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-reactive-storage</a> ★36 - vue插件的Reactive层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JiriChara/vue-kindergarten\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-kindergarten</a> ★35 - 将kindergarten集成到VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dkfbasel/vuex-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-i18n</a> ★35 - 定位插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ts-loader</a> ★35 - 在Vue装载机检查脚本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-lazy-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-component</a> ★34 - 懒加载组件或者元素的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/AStaroverov/v-media-query\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-media-query</a> ★34 - vue中添加用于配合媒体查询的方法</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-helmet\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-helmet</a> ★34 - HTML标题管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/richardanaya/voir\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">voir</a> ★33 - 保持mutation与视图组件的分离</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-pagination-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pagination-2</a> ★32 - 简单通用的分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-observe-visibility\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-observe-visibility</a> ★32 - 当元素在页面上可见或隐藏时检测</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.resize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.resize</a> ★30 - 检测HTML调整大小事件的vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leonardovilarinho/vue-acl\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-acl</a> ★26 - VueJS访问控制列表插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xanf/vuex-shared-mutations\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-shared-mutations</a> ★26 - 分享某种Vuex mutations</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-drag-zone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-zone</a> ★19 - 适用于Vue2的dom拖动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">modal</a> ★18 - Vue Bulma的modal组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-file-base64\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-file-base64</a> ★18 - 将文件转换为Base64的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/irwansyahwii/Famous-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Famous-Vue</a> ★16 - Famous库的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">leo-vue-validator</a> ★13 - 异步的表单验证组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.ImagesLoaded\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.ImagesLoaded</a> ★13 - 检测图片加载的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-methods-promise\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-methods-promise</a> ★12 - 使vue方法支持promise</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-titlecase\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-titlecase</a> ★12 - 用于字符串titlecased的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Easy-Validator</a> ★11 - 简单的表单验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-zoombox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zoombox</a> ★10 - 一个高级zoombox</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-truncate-filter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-truncate-filter</a> ★9 - 截断字符串的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/syropian/vue-input-autosize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-input-autosize</a> ★7 - 基于内容自动调整文本输入的大小</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phphe/vue-data-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-validator</a> ★4 - Vuejs2的数据验证插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yodfz/vue-lazyloadImg\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyloadImg</a> ★4 - 图片懒加载插件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">服务端\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nuxt/nuxt.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">nuxt.js</a> ★2960 - 用于服务器渲染Vue app的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/danmademe/express-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">express-vue</a> ★174 - 简单的使用服务器端渲染vue.js</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/unvue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">unvue</a> ★105 - 使用简单的通用VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★73 - 非常简单的VueJS服务器端渲染模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★62 - 结合Express使用Vue2服务端渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leaves4j/vue-easy-renderer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-renderer</a> ★29 - Nodejs服务端渲染</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">辅助工具\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MiCottOn/DejaVue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DejaVue</a> ★580 - Vuejs可视化及压力测试</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-play/vue-play\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-play</a> ★477 - 展示Vue组件的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/vscode-VueHelper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vscode-VueHelper</a> ★198 - 目前vscode最好的vue代码提示插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NetanelBasal/vue-generate-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-generate-component</a> ★41 - 轻松生成Vue js组件的CLI工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xwpongithub/vue-multipage-cli\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multipage-cli</a> ★34 - 简单的多页CLI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/VuejsStarterKit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VuejsStarterKit</a> ★27 - vuejs starter套件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">应用实例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/koel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">koel</a> ★7292 - 基于网络的个人音频流媒体服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pagekit/pagekit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">pagekit</a> ★4065 - 轻量级的CMS建站系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/vue-manage-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-manage-system</a> ★1223 - 后台管理系统解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedo/vuedo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedo</a> ★1088 - 博客平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jackhutu/jackblog-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jackblog-vue</a> ★996 - 个人博客系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jcc/PJ%20Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">PJ Blog</a> ★768 - 开源博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★661 - 重写vue版cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ycwalker/CMS-of-Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">CMS-of-Blog</a> ★442 - 博客内容管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mrgodhani/rss-reader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rss-reader</a> ★332 - 简单的rss阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/viko16/vue-ghpages-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ghpages-blog</a> ★220 - 依赖GitHub Pages无需本地生成的静态博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhangxin840/tomato5\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tomato5</a> ★116 - 实时的协作工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wh469012917/swoole-vue-webim\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">swoole-vue-webim</a> ★106 - Web版的聊天应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sapjax/fewords\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">fewords</a> ★55 - 功能极其简单的笔记本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blog</a> ★53 - 使用Vue2.0 和Vuex的vue-blog</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">Demo示例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bailicangdu/vue2-elm\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-elm</a> ★4389 - 重写饿了么webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shinygang/Vue-cnodejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-cnodejs</a> ★2226 - 基于vue重写<a href=\"http://Cnodejs.org\">Cnodejs.org</a>的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">NeteaseCloudWebApp</a> ★1294 - 高仿网易云音乐的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihu-daily</a> ★905 - 知乎日报 with Vuejs</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/useryangtao/vue-wechat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-wechat</a> ★816 - vue.js开发微信app界面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-demo</a> ★773 - 从零构建vue2 + vue-router + vuex 开发环境</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eleme</a> ★671 - 高仿饿了么app商家详情</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kenberkeley/vue-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo</a> ★634 - vue简易留言板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/codecasts/spa-starter-kit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">spa-starter-kit</a> ★536 - 单页应用启动套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sioxas/vue-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music</a> ★527 - Vue 音乐搜索播放</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhengguorong/maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">maizuo</a> ★525 - vue/vuex/redux仿卖座网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-Meizi</a> ★449 - vue最新实战项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiakeqi/douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">douban</a> ★409 - 模仿豆瓣前端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yatessss/zhihudaily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihudaily-vue</a> ★395 - 知乎日报web版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueDemo_Sell_Eleme</a> ★377 - Vue2高仿饿了么外卖平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhaohaodang/vue-WeChat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-WeChat</a> ★361 - 基于Vue2高仿微信App的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lavyun/vue-demo-kugou\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-kugou</a> ★359 - vuejs仿写酷狗音乐webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/andylei18/vue-shopping\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shopping</a> ★350 - 蘑菇街移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.0-taopiaopiao</a> ★287 - vue2.0与express构建淘票票页面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-leancloud-blog</a> ★253 - 一个前后端完全分离的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">node-vue-server-webpack</a> ★244 - Node.js+Vue.js+webpack快速开发框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wendaosanshou/mi-by-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mi-by-vue</a> ★240 - VueJS仿小米官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TIGERB/easy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">easy-vue</a> ★239 - 使用Vue实现简易web</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue2.x-douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-douban</a> ★234 - Vue2实现简易豆瓣电影webApp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hzzly/xyy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">xyy-vue</a> ★210 - 大学生交流平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/okoala/vue-fis3\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fis3</a> ★205 - 流行开源工具集成demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-maizuo</a> ★195 - 使用Vue2全家桶仿制卖座电影</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-axios-github\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios-github</a> ★195 - 登录拦截登出功能</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ShanaMaid/vue-163-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-163-music</a> ★179 - vue仿网易云音乐客户端版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-adminLte-vue-router</a> ★177 - vue和adminLte整合应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily</a> ★175 - 知乎日报 Web 版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dmtrbrl/tmdb-app\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tmdb-app</a> ★159 - TMDbVueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu-Daily-Vue.js</a> ★145 - Vuejs单页网页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/notepad\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">notepad</a> ★138 - 本地存储的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/walleeeee/daily-zhihu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">daily-zhihu</a> ★127 - 基于Vue2的知乎日报单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhixuanziben/gouyan-movie-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gouyan-movie-vue</a> ★122 - 基于vue的在线电影影讯网站</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rokups/hello-vue-django\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">hello-vue-django</a> ★121 - 使用带有Django的vuejs的样板项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/vue-express-mongodb\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-express-mongodb</a> ★116 - 简单的前后端分离案例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CommanderXL/x-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">x-blog</a> ★109 - 开源的个人blog项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wszgxa/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★108 - vue单页应用demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-mini-shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mini-shop</a> ★107 - VueJS在线商店</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/secreter/websocket_chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">websocket_chat</a> ★101 - 基于vue和websocket的多人在线聊天室</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/RalfZhang/Vdo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vdo</a> ★96 - VueJS与MD重构豆瓣</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beidan/photoShare\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">photoShare</a> ★94 - 基于图片分享的社交平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/elva2596/vueBlog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueBlog</a> ★87 - 前后端分离博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily-2.0</a> ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beauty-enjoy/beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">beauty</a> ★81 - 豆瓣美女clone</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/qxl1231/generator-loopback-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">generator-loopback-vue</a> ★80 - 典型前后端分离项目模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hql123/vue-ruby-china\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ruby-china</a> ★74 - VueJS框架搭建的rubychina平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-koa-demo</a> ★72 - 使用Vue2和Koa1的全栈demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu_Daily</a> ★70 - 基于Vue和Nodejs的Web单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-Cnode</a> ★63 - 基于vue全家桶的Cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/houbx/webApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">webApp</a> ★57 - Vue2的移动端webApp音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/peng1992/houtai\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">houtai</a> ★52 - 基于vue和Element的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wenye123/vue-trip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trip</a> ★52 - vue2做的出行webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SidKwok/github-explorer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">github-explorer</a> ★50 - 寻找最有趣的GitHub库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shaqihe/life-app-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">life-app-vue</a> ★49 - 使用vue2完成多功能集合到小webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nswbmw/vue-bushishiren\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bushishiren</a> ★47 - 不是诗人应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr-boilerplate</a> ★47 - 精简版的ofvue-hackernews-2</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monkeyWangs/doubanMovie\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">doubanMovie</a> ★41 - 豆瓣电影展示</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cli-multipage-bootstrap</a> ★41 - 将vue官方在线示例整合到组件中</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QRL909109/ios7-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">ios7-vue</a> ★40 - 使用vue2.0 vue-router vuex模拟ios7</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/odranoelBR/vue-quasar-admin-example\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quasar-admin-example</a> ★39 - 将Quasar和VueJS应用于SPA项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BubblyPoker/cnode-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cnode-vue</a> ★39 - 基于vue和vue-router构建的cnodejs web网站SPA</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vanishcode/iview2-management-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview2-management-system</a> ★38 - 后台管理系统解决方案简单示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tyllo/Framework7-VueJS\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-VueJS</a> ★38 - 使用移动框架的示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-xd/seeMusic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">seeMusic</a> ★36 - 跨平台云音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beautifulBoys/vue-XiaoMi-Shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-XiaoMi-Shop</a> ★34 - 高仿小米商城的项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiananle/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★34 - 用 Vue 做的 CNode 官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GitaiQAQ/HyaReader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">HyaReader</a> ★34 - 移动友好的阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pluto1114/vue-music163\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music163</a> ★30 - 音乐VueJS项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily</a> ★29 - 轻松查看知乎日报内容</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">sls-vuex2-demo</a> ★26 - vuex2商城购物车demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Damonlw/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★22 - 使用cNode社区提供的接口</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xandeer/gank\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gank</a> ★21 - gankio资源的阅读应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moonou/zhihu-daily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily-vue</a> ★21 - 知乎日报</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/soulcm/vue-cnode-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode-mobile</a> ★21 - 搭建cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ITCNZ/vue-dropload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Todos_Vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Todos_Vuejs</a> ★19 - vuejs2搭建的极简的todolist</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vuejs-SalePlatform</a> ★18 - vuejs搭建的售卖平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-starter</a> ★18 - VueJs项目的简单启动页</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Halfeld/v-notes\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-notes</a> ★17 - 简单美观的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewsNIng/vue-h5plus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-h5plus</a> ★15 - 前卫的vue及html5plus跨平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CaiYiLiang/simply-calculator-vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">simply-calculator-vuejs</a> ★12 - 用VueJS实现简易计算器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/youknowznm/vue-memo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-memo</a> ★11 - 用 vue写的记事本应用</div></li></ul><div/></body></html>","source":"_posts/kaiyuan.md","raw":"---\ntitle: 开源vue项目合集\ndate: 2018-03-21 15:30:02\ntags: \n- vue\ncategories:\n- vue\n---\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/><meta name=\"exporter-version\" content=\"Evernote Mac 9.6.9 (470983)\"/><meta name=\"author\" content=\"huizi77xl@sina.com\"/><meta name=\"created\" content=\"2023-05-28 10:31:35 +0000\"/><meta name=\"source\" content=\"desktop.mac\"/><meta name=\"updated\" content=\"2023-05-28 10:32:08 +0000\"/><title>vue开源项目收集</title></head><body style=\"font-size: 14px;\"><div><br/></div><div><br/></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">awesome-github-vue 是由</span><a href=\"http://www.opendigg.com/\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">整理并维护的Vue相关开源项目库集合。我们会定期同步</span><a href=\"http://www.opendigg.com/tags/front-vue\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">上的项目到这里，也欢迎各位</span><a href=\"https://github.com/opendigg/opending-share-projects\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">提交项目</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">给我们。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">如果收录的项目有错误，可以通过</span><a href=\"https://github.com/opendigg/awesome-github-vue/issues\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">issue</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">内容来自转载\n</span></div><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">内容\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#UI%E7%BB%84%E4%BB%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">UI组件</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">开发框架</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%AE%9E%E7%94%A8%E5%BA%93\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">实用库</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E6%9C%8D%E5%8A%A1%E7%AB%AF\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">服务端</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">辅助工具</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">应用实例</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#Demo%E7%A4%BA%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Demo示例</a></div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">UI组件\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/element\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element</a> ★10420 - 饿了么出品的Vue2的web UI工具套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/airyland/vux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vux</a> ★7139 - 基于Vue和WeUI的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iview/iview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview</a> ★5164 - 基于 Vuejs 的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/mint-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-ui</a> ★5082 - Vue 2的移动UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JosephusPaye/Keen-UI\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Keen-UI</a> ★2483 - 轻量级的基本UI组件合集</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/marcosmoura/vue-material\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material</a> ★2476 - 通过Vue Material和Vue 2建立精美的app应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/museui/muse-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">muse-ui</a> ★2154 - 三端样式一致的响应式 UI 库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuetifyjs/vuetify\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuetify</a> ★1941 - 为移动而生的Vue JS 2组件框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vonic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vonic</a> ★1601 - 快速构建移动端单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/eme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eme</a> ★1431 - 优雅的Markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vue-multiselect\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multiselect</a> ★1265 - Vue.js选择框解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ratiw/vue-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-table</a> ★870 - 简化数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueCircleMenu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueCircleMenu</a> ★793 - 漂亮的vue圆环菜单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chat</a> ★769 - vuejs和vuex及webpack的聊天示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zulko/eagle.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eagle.js</a> ★758 - hacker的幻灯片演示框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/taylorchen709/vueAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueAdmin</a> ★749 - 基于vuejs2和element的简单的管理员模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/luojilab/radon-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">radon-ui</a> ★658 - 快速开发产品的Vue组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pi0/bootstrap-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">bootstrap-vue</a> ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MopTym/vue-waterfall\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waterfall</a> ★639 - Vue.js的瀑布布局组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenz24/vue-blu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blu</a> ★623 - 帮助你轻松创建web应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.Draggable</a> ★623 - 实现拖放和视图模型数组同步</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-carbon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carbon</a> ★621 - 基于 vue 开发MD风格的移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FE-Driver/vue-beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-beauty</a> ★616 - 由vue和ant design创建的优美UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-scroll</a> ★578 - VueJS的无限滚动指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome-swiper</a> ★577 - vue.js触摸滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-syntax-highlight\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-syntax-highlight</a> ★574 - Sublime Text语法高亮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jinzhe/vue-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-calendar</a> ★474 - 日期选择插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-amap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-amap</a> ★404 - 基于Vue 2和高德地图的地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartjs</a> ★388 - vue中的Chartjs的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-swipe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swipe</a> ★388 - VueJS触摸滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-echarts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-echarts</a> ★367 - VueJS的ECharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★354 - 日历和日期选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zhangdroid/Gokotta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Gokotta</a> ★332 - 简单的音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/markcook\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">markcook</a> ★322 - 好看的markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sagalbot/vue-sortable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-sortable</a> ★308 - 轻松添加拖拽排序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-maps</a> ★293 - 带有双向数据绑定Google地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-quill-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill-editor</a> ★268 - 基于Quill适用于Vue2的富文本编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-progressbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressbar</a> ★266 - vue轻量级进度条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-picture-input</a> ★254 - 移动友好的图片文件输入组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeachScript/vue-infinite-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-loading</a> ★251 - VueJS的无限滚动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lian-yue/vue-upload-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-upload-component</a> ★239 - Vuejs文件上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-trend\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trend</a> ★235 - 简单优雅的星光线条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vue-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroller</a> ★233 - Vonic UI的功能性组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TahaSh/vue-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-paginate</a> ★222 - 分页数据的简约VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-video-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video-player</a> ★215 - VueJS视频及直播播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueStar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueStar</a> ★214 - 带星星动画的vue点赞按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datetime-picker</a> ★207 - 日期时间选择控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-core-image-upload</a> ★200 - 轻量级的vue上传插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-tables-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tables-2</a> ★195 - 显示数据的bootstrap样式网格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★190 - 基于vue.js的全日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icai/vue2-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-calendar</a> ★187 - 支持lunar和日期事件的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/rubik\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rubik</a> ★183 - 基于Vuejs2的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/charliekassel/vuejs-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-datepicker</a> ★179 - vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-mugen-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mugen-scroll</a> ★179 - 无限滚动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/DataVisualization\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DataVisualization</a> ★178 - 数据可视化</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-loadmore\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-loadmore</a> ★176 - VueJS的双向下拉刷新组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-virtual-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-virtual-scroller</a> ★175 - 带任意数目数据的顺畅的滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeakTai/vue-html5-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-html5-editor</a> ★163 - html5所见即所得编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hifarer/Vueditor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vueditor</a> ★157 - 所见即所得的编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/warpcgd/vue-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider</a> ★138 - vue 滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-msgbox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-msgbox</a> ★134 - vuejs的消息框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-slide\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slide</a> ★133 - vue轻量级滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-and-drop-list</a> ★127 - 创建排序列表的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Astray-git/vue-dragula\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragula</a> ★126 - 使拖放变得简单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JALBAA/vue-lazyload-img\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload-img</a> ★126 - 移动优化的vue图片懒加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rowanwins/vue-dropzone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropzone</a> ★124 - 用于文件上传的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/coderdiaz/vue-datasource\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datasource</a> ★121 - 创建VueJS动态表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/njleonzhang/vue-data-tables\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-tables</a> ★116 - VueJS2数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wlada/vue-carousel-3d\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carousel-3d</a> ★114 - VueJS的3D轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuwe/vuwe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuwe</a> ★113 - 基于微信WeUI所开发的专用于Vue2的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weilao/vue-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swiper</a> ★113 - 易于使用的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressive-image</a> ★111 - Vue的渐进图像加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NightCatSama/vue-slider-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider-component</a> ★109 - 在vue1和vue2中使用滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hchstera/vue-charts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-charts</a> ★109 - 轻松渲染一个图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewDadaFE/vue-impression\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-impression</a> ★104 - 移动Vuejs2 UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-region-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-region-picker</a> ★96 - 选择中国的省份市和地区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/santiblanko/vue-instant\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-instant</a> ★95 - 轻松创建自动提示的自定义搜索控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/vue-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-images</a> ★94 - 显示一组图片的lightbox组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cngu/vue-typer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typer</a> ★92 - 模拟用户输入选择和删除文本的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loading</a> ★92 - 元素中加载block的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-dragging\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragging</a> ★91 - 使元素可以拖拽</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/F-loat/vue-simplemde\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-simplemde</a> ★90 - VueJS的Markdown编辑器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/galenyuan/vue-datatable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datatable</a> ★89 - 使用Vuejs创建的DataTableView</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ydcss/vue-ydui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ydui</a> ★86 - 基于Vue2的移动端和微信UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-crop-upload</a> ★82 - vue图片剪裁上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-loading-bar</a> ★82 - 最简单的仿Youtube加载条视图</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-tooltip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tooltip</a> ★80 - 带绑定信息提示的提示工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LucienLee/vue-data-grid\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-grid</a> ★78 - VueJS复杂桌面交互示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weizhenye/vue-highcharts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-highcharts</a> ★78 - HighCharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/microzz/vue-music-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-player</a> ★77 - Vuejs写一个音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weifeiyue/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★76 - 漂亮的Vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-video\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video</a> ★75 - Vue.js的HTML5视频播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MMF-FE/vue-svgicon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svgicon</a> ★72 - 创建svg图标组件的工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Dafrok/vue-baidu-map\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-baidu-map</a> ★70 - 基于 Vue 2的百度地图组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-touch-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-ripple</a> ★69 - vuejs的触摸ripple组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-toast-mobile</a> ★68 - VueJS的toast插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-scrollbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollbar</a> ★64 - 最简单的滚动区域组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phoenixwong/vue2-timepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-timepicker</a> ★63 - 下拉时间选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-quill\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill</a> ★61 - vue组件构建quill编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Bubblings/vue-date-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-date-picker</a> ★61 - VueJS日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Kocisov/coffeebreak\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">coffeebreak</a> ★61 - 实时编辑CSS组件工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bkzl/vue-float-label\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-float-label</a> ★58 - VueJS浮动标签模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/vue-google-signin-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-signin-button</a> ★58 - 导入谷歌登录按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenjiahan/vodal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vodal</a> ★57 - 动画的vue模态</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lithiumjake/vue-placeholders\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-placeholders</a> ★57 - 处理占位符图片和乱码</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-social-sharing</a> ★53 - 社交分享组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/davidroyer/vue2-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-editor</a> ★53 - HTML编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moip/awesome-mask\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">awesome-mask</a> ★49 - 拥有独一无二mask的表单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shhdgit/vue-easy-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-slider</a> ★49 - Vue 2.x的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Ginhing/vue-tagsinput\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tagsinput</a> ★44 - 基于VueJS的标签组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/waynecz/vue-img-inputer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-inputer</a> ★40 - 基于Vue2的图片输入框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lokyoung/vuejs-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-paginate</a> ★39 - 分页VueJS组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/staskjs/vue-slick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slick</a> ★39 - 实现流畅轮播框的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">datepicker</a> ★38 - 基于flatpickr的时间选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yunyi1895/vue-music-master\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-master</a> ★38 - vue手机端网页音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★37 - vue FullCalendar封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-chart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chart</a> ★37 - 强大的高速的vue图表解析</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tianyong90/we-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">we-vue</a> ★36 - Vue2及weui1开发的组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/handsontable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">handsontable</a> ★36 - 网页表格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-radial-progress</a> ★35 - Vue.js放射性进度条组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fangyongbao/cubeex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cubeex</a> ★35 - 包含一套完整的移动UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-popup-mixin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-popup-mixin</a> ★35 - 用于管理弹出框的遮盖层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/loujiayu/vue-material-design\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material-design</a> ★34 - Vue MD风格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bbonnin/vue-morris\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-morris</a> ★33 - Vuejs组件封装Morrisjs库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-table</a> ★33 - 可排序可检索的表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GeoffZhu/vue-event-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-event-calendar</a> ★32 - 简单小巧的事件日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-form-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-form-2</a> ★30 - 全面的HTML表单管理的解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/legeneek/vue-image-clip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-clip</a> ★29 - 基于vue的图像剪辑组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-touch-keyboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-keyboard</a> ★28 - VueJS虚拟键盘组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bajian/vue-pull-to-refresh\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pull-to-refresh</a> ★28 - Vue2的上拉下拉</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-side-nav\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-side-nav</a> ★28 - 响应式的侧边导航</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ripple</a> ★28 - 制作谷歌MD风格涟漪效果的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-indicator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-indicator</a> ★27 - VueJS移动加载指示器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/darrynten/vue-lazy-background-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-background-images</a> ★25 - 懒加载背景组件的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">chartjs</a> ★24 - Vue Bulma的chartjs组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ankane/vue-chartkick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartkick</a> ★24 - VueJS一行代码实现优美图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/suguangwen/vue-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroll</a> ★24 - vue滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/blue0728/vue-area\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-area</a> ★23 - 省市区三级联动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lisiyizu/vue-ztree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ztree</a> ★23 - 用 vue 写的树层级组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alexqdjay/vue-tabs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tabs</a> ★22 - 多tab页轻型框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker-simple</a> ★21 - 基于vue的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shiye515/vue-m-carousel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-m-carousel</a> ★21 - vue 移动端轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/aweiu/vue-verify-pop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-verify-pop</a> ★20 - 带气泡提示的vue校验插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-waves\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waves</a> ★20 - waves的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xinxingyu/vue-city\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-city</a> ★15 - 城市选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-parallax\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-parallax</a> ★15 - 整洁的视觉效果</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JackGit/vue-img-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-loader</a> ★14 - 图片加载UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-smoothscroll</a> ★13 - smoothscroll的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eduardostuart/vue-typewriter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typewriter</a> ★13 - vue组件类型</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sinchang/vue-laypage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-laypage</a> ★12 - 简单的VueJS分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weibangtuo/vue-tree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tree</a> ★12 - vue树视图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Treri/vue-ios-alertview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ios-alertview</a> ★8 - iOS7+ 风格的alertview服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/savokiss/vue-cascading-address\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cascading-address</a> ★8 - vue地区选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ibufu/dd-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">dd-vue-component</a> ★7 - 订单来了的公共组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeseason/paco-ui-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">paco-ui-vue</a> ★7 - PACOUI的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/doodlewind/vue-cmap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cmap</a> ★6 - Vue China map可视化组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/steven5538/vue-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-button</a> ★4 - Vue按钮组件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">开发框架\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue.js</a> ★47739 - 流行的轻量高效的前端组件化方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fundon/vue-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-admin</a> ★3528 - Vue管理面板框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/quasarframework/quasar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">quasar</a> ★1599 - 响应式网站和混合移动应用程序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/electron-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">electron-vue</a> ★1454 - Electron及VueJS快速启动样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vuepack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuepack</a> ★1395 - 现代VueJS启动器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/N3-components/N3-components\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">N3-components</a> ★642 - 快速构建页面和应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/petervmeijgaard/vue-2.0-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-2.0-boilerplate</a> ★263 - Vue2单页应用样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hanan198501/vue-spa-template\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-spa-template</a> ★256 - 前后端分离后的单页应用开发</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nolimits4web/Framework7-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-Vue</a> ★233 - VueJS与Framework7结合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-stack-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-stack-2.0</a> ★152 - Vue2项目样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangxg2016/vue-bulma\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bulma</a> ★147 - 轻量级高性能MVVM Admin UI框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rodzzlessa24/vue-webgulp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-webgulp</a> ★103 - 仿VueJS Vue loader示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/erguotou520/vue-fullstack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullstack</a> ★96 - 实时的用户友好的后台系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shenghy/jspangAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jspangAdmin</a> ★74 - 基于Vue2的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Metnew/vue-element-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-element-starter</a> ★41 - vue启动页</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">实用库\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vuex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex</a> ★6414 - 专为 Vue.js 应用程序开发的状态管理模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-validator</a> ★1655 - vue的验证器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loader</a> ★1540 - Vue.js 针对Webpack的组件装载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-lazyload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload</a> ★873 - 用于懒加载的Vue模块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vuelidate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuelidate</a> ★851 - 简单轻量级的基于模块的Vue.js验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kazupon/vue-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-i18n</a> ★754 - VueJS的多语言切换插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zerqu/qingcheng\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">qingcheng</a> ★684 - qingcheng主题</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-desktop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-desktop</a> ★470 - 创建管理面板网站的UI库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Socket.io\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Socketio</a> ★368 - VueJS的socketio实现</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-awesome\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome</a> ★321 - VueJS字体Awesome组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ktquez/vue-head\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-head</a> ★306 - head标签的meta信息操作</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/declandewet/vue-meta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-meta</a> ★292 - 管理app的meta信息</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/meteor-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue-component</a> ★283 - vue和meteor整合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-axios\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios</a> ★268 - 将axios整合到VueJS的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/vue-flatpickr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-flatpickr</a> ★204 - 封装Flatpickr的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eddyerburgh/avoriaz\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">avoriaz</a> ★152 - VueJS测试实用工具库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-timeago\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-timeago</a> ★140 - VueJS的时间前组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhouzhuojie/meteor-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue</a> ★130 - VueJS和Meteor的桥接</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cenkai88/vue-svg-icon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svg-icon</a> ★116 - vue2的可变彩色svg图标方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/simplesmiler/vue-focus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-focus</a> ★111 - 可重用VueJS组件的焦点指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/haydenbbickerton/vue-animate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-animate</a> ★92 - 跨浏览器CSS3动画库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-modal</a> ★88 - vue的Bootstrap样式组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lmk123/vue-framework7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-framework7</a> ★84 - 结合VueJS使用的Framework7组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rigor789/vue-scrollTo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollTo</a> ★81 - 滚动到元素的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vuep\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuep</a> ★81 - 用实时编辑和预览来渲染Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lynzz/element-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element-admin</a> ★76 - 支持 vuecli 的 Element UI 的后台模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-password-strength-meter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-password-strength-meter</a> ★71 - 交互式密码强度计</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sopamo/vue-online\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-online</a> ★71 - reactive的在线和离线组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-render</a> ★70 - 用于Vue组件的延迟渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xiaokaike/vue-clipboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-clipboard</a> ★68 - VueJS的剪贴板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xtongs/vue-recyclist\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-recyclist</a> ★65 - vuejs无限滚动列表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kartsims/vue-cordova\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cordova</a> ★62 - Cordova的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-events\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-events</a> ★62 - 简化事件的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LinusBorg/portal-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">portal-vue</a> ★60 - 在组件外部渲染DOM</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/vue-electron\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-electron</a> ★57 - 将选择的API封装到Vue对象中的插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/cleave\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cleave</a> ★56 - 基于cleave.js的Cleave组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mlyknown/vue-gesture\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-gesture</a> ★56 - VueJS的手势事件插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iFgR/vue-shortkey\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shortkey</a> ★55 - 应用于Vue.js的Vue-ShortKey 插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-qart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-qart</a> ★53 - 用于qartjs的Vue2指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/vuemit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuemit</a> ★53 - 处理VueJS事件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weinot/vue-router-transition\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-router-transition</a> ★53 - 页面过渡插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-local-storage</a> ★52 - 具有类型支持的Vuejs本地储存插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kaorun343/vue-property-decorator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-property-decorator</a> ★52 - VueJS和属性Decorator</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-websocket\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-websocket</a> ★50 - VueJS的Websocket插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">http-vue-loader</a> ★48 - 从html及js环境加载vue文件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedeux/vuedeux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedeux</a> ★44 - 轻量级开源实用用层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SevenOutman/vue-aplayer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-aplayer</a> ★44 - 便于配置的音乐播放器vue2组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/lazy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">lazy-vue</a> ★42 - 懒加载图片</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yangmingshan/vue-bus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bus</a> ★40 - VueJS的事件总线</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/se-panfilov/vue-notifications\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-notifications</a> ★36 - 非阻塞通知库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ropbla9/vue-reactive-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-reactive-storage</a> ★36 - vue插件的Reactive层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JiriChara/vue-kindergarten\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-kindergarten</a> ★35 - 将kindergarten集成到VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dkfbasel/vuex-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-i18n</a> ★35 - 定位插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ts-loader</a> ★35 - 在Vue装载机检查脚本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-lazy-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-component</a> ★34 - 懒加载组件或者元素的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/AStaroverov/v-media-query\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-media-query</a> ★34 - vue中添加用于配合媒体查询的方法</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-helmet\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-helmet</a> ★34 - HTML标题管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/richardanaya/voir\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">voir</a> ★33 - 保持mutation与视图组件的分离</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-pagination-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pagination-2</a> ★32 - 简单通用的分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-observe-visibility\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-observe-visibility</a> ★32 - 当元素在页面上可见或隐藏时检测</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.resize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.resize</a> ★30 - 检测HTML调整大小事件的vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leonardovilarinho/vue-acl\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-acl</a> ★26 - VueJS访问控制列表插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xanf/vuex-shared-mutations\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-shared-mutations</a> ★26 - 分享某种Vuex mutations</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-drag-zone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-zone</a> ★19 - 适用于Vue2的dom拖动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">modal</a> ★18 - Vue Bulma的modal组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-file-base64\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-file-base64</a> ★18 - 将文件转换为Base64的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/irwansyahwii/Famous-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Famous-Vue</a> ★16 - Famous库的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">leo-vue-validator</a> ★13 - 异步的表单验证组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.ImagesLoaded\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.ImagesLoaded</a> ★13 - 检测图片加载的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-methods-promise\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-methods-promise</a> ★12 - 使vue方法支持promise</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-titlecase\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-titlecase</a> ★12 - 用于字符串titlecased的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Easy-Validator</a> ★11 - 简单的表单验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-zoombox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zoombox</a> ★10 - 一个高级zoombox</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-truncate-filter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-truncate-filter</a> ★9 - 截断字符串的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/syropian/vue-input-autosize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-input-autosize</a> ★7 - 基于内容自动调整文本输入的大小</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phphe/vue-data-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-validator</a> ★4 - Vuejs2的数据验证插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yodfz/vue-lazyloadImg\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyloadImg</a> ★4 - 图片懒加载插件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">服务端\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nuxt/nuxt.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">nuxt.js</a> ★2960 - 用于服务器渲染Vue app的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/danmademe/express-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">express-vue</a> ★174 - 简单的使用服务器端渲染vue.js</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/unvue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">unvue</a> ★105 - 使用简单的通用VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★73 - 非常简单的VueJS服务器端渲染模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★62 - 结合Express使用Vue2服务端渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leaves4j/vue-easy-renderer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-renderer</a> ★29 - Nodejs服务端渲染</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">辅助工具\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MiCottOn/DejaVue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DejaVue</a> ★580 - Vuejs可视化及压力测试</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-play/vue-play\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-play</a> ★477 - 展示Vue组件的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/vscode-VueHelper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vscode-VueHelper</a> ★198 - 目前vscode最好的vue代码提示插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NetanelBasal/vue-generate-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-generate-component</a> ★41 - 轻松生成Vue js组件的CLI工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xwpongithub/vue-multipage-cli\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multipage-cli</a> ★34 - 简单的多页CLI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/VuejsStarterKit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VuejsStarterKit</a> ★27 - vuejs starter套件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">应用实例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/koel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">koel</a> ★7292 - 基于网络的个人音频流媒体服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pagekit/pagekit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">pagekit</a> ★4065 - 轻量级的CMS建站系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/vue-manage-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-manage-system</a> ★1223 - 后台管理系统解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedo/vuedo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedo</a> ★1088 - 博客平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jackhutu/jackblog-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jackblog-vue</a> ★996 - 个人博客系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jcc/PJ%20Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">PJ Blog</a> ★768 - 开源博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★661 - 重写vue版cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ycwalker/CMS-of-Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">CMS-of-Blog</a> ★442 - 博客内容管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mrgodhani/rss-reader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rss-reader</a> ★332 - 简单的rss阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/viko16/vue-ghpages-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ghpages-blog</a> ★220 - 依赖GitHub Pages无需本地生成的静态博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhangxin840/tomato5\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tomato5</a> ★116 - 实时的协作工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wh469012917/swoole-vue-webim\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">swoole-vue-webim</a> ★106 - Web版的聊天应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sapjax/fewords\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">fewords</a> ★55 - 功能极其简单的笔记本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blog</a> ★53 - 使用Vue2.0 和Vuex的vue-blog</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">Demo示例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bailicangdu/vue2-elm\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-elm</a> ★4389 - 重写饿了么webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shinygang/Vue-cnodejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-cnodejs</a> ★2226 - 基于vue重写<a href=\"http://Cnodejs.org\">Cnodejs.org</a>的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">NeteaseCloudWebApp</a> ★1294 - 高仿网易云音乐的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihu-daily</a> ★905 - 知乎日报 with Vuejs</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/useryangtao/vue-wechat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-wechat</a> ★816 - vue.js开发微信app界面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-demo</a> ★773 - 从零构建vue2 + vue-router + vuex 开发环境</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eleme</a> ★671 - 高仿饿了么app商家详情</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kenberkeley/vue-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo</a> ★634 - vue简易留言板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/codecasts/spa-starter-kit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">spa-starter-kit</a> ★536 - 单页应用启动套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sioxas/vue-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music</a> ★527 - Vue 音乐搜索播放</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhengguorong/maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">maizuo</a> ★525 - vue/vuex/redux仿卖座网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-Meizi</a> ★449 - vue最新实战项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiakeqi/douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">douban</a> ★409 - 模仿豆瓣前端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yatessss/zhihudaily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihudaily-vue</a> ★395 - 知乎日报web版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueDemo_Sell_Eleme</a> ★377 - Vue2高仿饿了么外卖平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhaohaodang/vue-WeChat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-WeChat</a> ★361 - 基于Vue2高仿微信App的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lavyun/vue-demo-kugou\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-kugou</a> ★359 - vuejs仿写酷狗音乐webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/andylei18/vue-shopping\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shopping</a> ★350 - 蘑菇街移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.0-taopiaopiao</a> ★287 - vue2.0与express构建淘票票页面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-leancloud-blog</a> ★253 - 一个前后端完全分离的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">node-vue-server-webpack</a> ★244 - Node.js+Vue.js+webpack快速开发框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wendaosanshou/mi-by-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mi-by-vue</a> ★240 - VueJS仿小米官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TIGERB/easy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">easy-vue</a> ★239 - 使用Vue实现简易web</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue2.x-douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-douban</a> ★234 - Vue2实现简易豆瓣电影webApp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hzzly/xyy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">xyy-vue</a> ★210 - 大学生交流平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/okoala/vue-fis3\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fis3</a> ★205 - 流行开源工具集成demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-maizuo</a> ★195 - 使用Vue2全家桶仿制卖座电影</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-axios-github\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios-github</a> ★195 - 登录拦截登出功能</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ShanaMaid/vue-163-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-163-music</a> ★179 - vue仿网易云音乐客户端版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-adminLte-vue-router</a> ★177 - vue和adminLte整合应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily</a> ★175 - 知乎日报 Web 版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dmtrbrl/tmdb-app\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tmdb-app</a> ★159 - TMDbVueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu-Daily-Vue.js</a> ★145 - Vuejs单页网页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/notepad\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">notepad</a> ★138 - 本地存储的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/walleeeee/daily-zhihu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">daily-zhihu</a> ★127 - 基于Vue2的知乎日报单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhixuanziben/gouyan-movie-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gouyan-movie-vue</a> ★122 - 基于vue的在线电影影讯网站</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rokups/hello-vue-django\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">hello-vue-django</a> ★121 - 使用带有Django的vuejs的样板项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/vue-express-mongodb\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-express-mongodb</a> ★116 - 简单的前后端分离案例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CommanderXL/x-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">x-blog</a> ★109 - 开源的个人blog项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wszgxa/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★108 - vue单页应用demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-mini-shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mini-shop</a> ★107 - VueJS在线商店</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/secreter/websocket_chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">websocket_chat</a> ★101 - 基于vue和websocket的多人在线聊天室</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/RalfZhang/Vdo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vdo</a> ★96 - VueJS与MD重构豆瓣</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beidan/photoShare\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">photoShare</a> ★94 - 基于图片分享的社交平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/elva2596/vueBlog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueBlog</a> ★87 - 前后端分离博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily-2.0</a> ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beauty-enjoy/beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">beauty</a> ★81 - 豆瓣美女clone</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/qxl1231/generator-loopback-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">generator-loopback-vue</a> ★80 - 典型前后端分离项目模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hql123/vue-ruby-china\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ruby-china</a> ★74 - VueJS框架搭建的rubychina平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-koa-demo</a> ★72 - 使用Vue2和Koa1的全栈demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu_Daily</a> ★70 - 基于Vue和Nodejs的Web单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-Cnode</a> ★63 - 基于vue全家桶的Cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/houbx/webApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">webApp</a> ★57 - Vue2的移动端webApp音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/peng1992/houtai\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">houtai</a> ★52 - 基于vue和Element的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wenye123/vue-trip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trip</a> ★52 - vue2做的出行webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SidKwok/github-explorer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">github-explorer</a> ★50 - 寻找最有趣的GitHub库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shaqihe/life-app-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">life-app-vue</a> ★49 - 使用vue2完成多功能集合到小webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nswbmw/vue-bushishiren\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bushishiren</a> ★47 - 不是诗人应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr-boilerplate</a> ★47 - 精简版的ofvue-hackernews-2</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monkeyWangs/doubanMovie\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">doubanMovie</a> ★41 - 豆瓣电影展示</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cli-multipage-bootstrap</a> ★41 - 将vue官方在线示例整合到组件中</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QRL909109/ios7-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">ios7-vue</a> ★40 - 使用vue2.0 vue-router vuex模拟ios7</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/odranoelBR/vue-quasar-admin-example\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quasar-admin-example</a> ★39 - 将Quasar和VueJS应用于SPA项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BubblyPoker/cnode-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cnode-vue</a> ★39 - 基于vue和vue-router构建的cnodejs web网站SPA</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vanishcode/iview2-management-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview2-management-system</a> ★38 - 后台管理系统解决方案简单示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tyllo/Framework7-VueJS\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-VueJS</a> ★38 - 使用移动框架的示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-xd/seeMusic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">seeMusic</a> ★36 - 跨平台云音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beautifulBoys/vue-XiaoMi-Shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-XiaoMi-Shop</a> ★34 - 高仿小米商城的项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiananle/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★34 - 用 Vue 做的 CNode 官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GitaiQAQ/HyaReader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">HyaReader</a> ★34 - 移动友好的阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pluto1114/vue-music163\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music163</a> ★30 - 音乐VueJS项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily</a> ★29 - 轻松查看知乎日报内容</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">sls-vuex2-demo</a> ★26 - vuex2商城购物车demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Damonlw/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★22 - 使用cNode社区提供的接口</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xandeer/gank\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gank</a> ★21 - gankio资源的阅读应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moonou/zhihu-daily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily-vue</a> ★21 - 知乎日报</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/soulcm/vue-cnode-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode-mobile</a> ★21 - 搭建cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ITCNZ/vue-dropload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Todos_Vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Todos_Vuejs</a> ★19 - vuejs2搭建的极简的todolist</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vuejs-SalePlatform</a> ★18 - vuejs搭建的售卖平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-starter</a> ★18 - VueJs项目的简单启动页</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Halfeld/v-notes\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-notes</a> ★17 - 简单美观的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewsNIng/vue-h5plus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-h5plus</a> ★15 - 前卫的vue及html5plus跨平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CaiYiLiang/simply-calculator-vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">simply-calculator-vuejs</a> ★12 - 用VueJS实现简易计算器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/youknowznm/vue-memo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-memo</a> ★11 - 用 vue写的记事本应用</div></li></ul><div/></body></html>","slug":"kaiyuan","published":1,"updated":"2023-05-30T03:52:46.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli9sa42u001kjza5a27x8xad","content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"exporter-version\" content=\"Evernote Mac 9.6.9 (470983)\"><meta name=\"author\" content=\"huizi77xl@sina.com\"><meta name=\"created\" content=\"2023-05-28 10:31:35 +0000\"><meta name=\"source\" content=\"desktop.mac\"><meta name=\"updated\" content=\"2023-05-28 10:32:08 +0000\"><title>vue开源项目收集</title></head><body style=\"font-size: 14px;\"><div><br></div><div><br></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">awesome-github-vue 是由</span><a href=\"http://www.opendigg.com/\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">整理并维护的Vue相关开源项目库集合。我们会定期同步</span><a href=\"http://www.opendigg.com/tags/front-vue\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">上的项目到这里，也欢迎各位</span><a href=\"https://github.com/opendigg/opending-share-projects\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">提交项目</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">给我们。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">如果收录的项目有错误，可以通过</span><a href=\"https://github.com/opendigg/awesome-github-vue/issues\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">issue</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">内容来自转载\n</span></div><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">内容\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#UI%E7%BB%84%E4%BB%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">UI组件</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">开发框架</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%AE%9E%E7%94%A8%E5%BA%93\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">实用库</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E6%9C%8D%E5%8A%A1%E7%AB%AF\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">服务端</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">辅助工具</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">应用实例</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#Demo%E7%A4%BA%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Demo示例</a></div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">UI组件\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/element\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element</a> ★10420 - 饿了么出品的Vue2的web UI工具套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/airyland/vux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vux</a> ★7139 - 基于Vue和WeUI的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iview/iview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview</a> ★5164 - 基于 Vuejs 的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/mint-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-ui</a> ★5082 - Vue 2的移动UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JosephusPaye/Keen-UI\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Keen-UI</a> ★2483 - 轻量级的基本UI组件合集</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/marcosmoura/vue-material\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material</a> ★2476 - 通过Vue Material和Vue 2建立精美的app应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/museui/muse-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">muse-ui</a> ★2154 - 三端样式一致的响应式 UI 库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuetifyjs/vuetify\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuetify</a> ★1941 - 为移动而生的Vue JS 2组件框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vonic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vonic</a> ★1601 - 快速构建移动端单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/eme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eme</a> ★1431 - 优雅的Markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vue-multiselect\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multiselect</a> ★1265 - Vue.js选择框解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ratiw/vue-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-table</a> ★870 - 简化数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueCircleMenu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueCircleMenu</a> ★793 - 漂亮的vue圆环菜单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chat</a> ★769 - vuejs和vuex及webpack的聊天示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zulko/eagle.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eagle.js</a> ★758 - hacker的幻灯片演示框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/taylorchen709/vueAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueAdmin</a> ★749 - 基于vuejs2和element的简单的管理员模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/luojilab/radon-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">radon-ui</a> ★658 - 快速开发产品的Vue组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pi0/bootstrap-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">bootstrap-vue</a> ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MopTym/vue-waterfall\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waterfall</a> ★639 - Vue.js的瀑布布局组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenz24/vue-blu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blu</a> ★623 - 帮助你轻松创建web应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.Draggable</a> ★623 - 实现拖放和视图模型数组同步</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-carbon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carbon</a> ★621 - 基于 vue 开发MD风格的移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FE-Driver/vue-beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-beauty</a> ★616 - 由vue和ant design创建的优美UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-scroll</a> ★578 - VueJS的无限滚动指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome-swiper</a> ★577 - vue.js触摸滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-syntax-highlight\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-syntax-highlight</a> ★574 - Sublime Text语法高亮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jinzhe/vue-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-calendar</a> ★474 - 日期选择插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-amap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-amap</a> ★404 - 基于Vue 2和高德地图的地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartjs</a> ★388 - vue中的Chartjs的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-swipe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swipe</a> ★388 - VueJS触摸滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-echarts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-echarts</a> ★367 - VueJS的ECharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★354 - 日历和日期选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zhangdroid/Gokotta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Gokotta</a> ★332 - 简单的音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/markcook\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">markcook</a> ★322 - 好看的markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sagalbot/vue-sortable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-sortable</a> ★308 - 轻松添加拖拽排序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-maps</a> ★293 - 带有双向数据绑定Google地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-quill-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill-editor</a> ★268 - 基于Quill适用于Vue2的富文本编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-progressbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressbar</a> ★266 - vue轻量级进度条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-picture-input</a> ★254 - 移动友好的图片文件输入组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeachScript/vue-infinite-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-loading</a> ★251 - VueJS的无限滚动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lian-yue/vue-upload-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-upload-component</a> ★239 - Vuejs文件上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-trend\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trend</a> ★235 - 简单优雅的星光线条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vue-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroller</a> ★233 - Vonic UI的功能性组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TahaSh/vue-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-paginate</a> ★222 - 分页数据的简约VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-video-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video-player</a> ★215 - VueJS视频及直播播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueStar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueStar</a> ★214 - 带星星动画的vue点赞按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datetime-picker</a> ★207 - 日期时间选择控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-core-image-upload</a> ★200 - 轻量级的vue上传插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-tables-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tables-2</a> ★195 - 显示数据的bootstrap样式网格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★190 - 基于vue.js的全日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icai/vue2-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-calendar</a> ★187 - 支持lunar和日期事件的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/rubik\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rubik</a> ★183 - 基于Vuejs2的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/charliekassel/vuejs-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-datepicker</a> ★179 - vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-mugen-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mugen-scroll</a> ★179 - 无限滚动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/DataVisualization\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DataVisualization</a> ★178 - 数据可视化</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-loadmore\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-loadmore</a> ★176 - VueJS的双向下拉刷新组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-virtual-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-virtual-scroller</a> ★175 - 带任意数目数据的顺畅的滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeakTai/vue-html5-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-html5-editor</a> ★163 - html5所见即所得编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hifarer/Vueditor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vueditor</a> ★157 - 所见即所得的编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/warpcgd/vue-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider</a> ★138 - vue 滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-msgbox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-msgbox</a> ★134 - vuejs的消息框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-slide\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slide</a> ★133 - vue轻量级滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-and-drop-list</a> ★127 - 创建排序列表的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Astray-git/vue-dragula\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragula</a> ★126 - 使拖放变得简单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JALBAA/vue-lazyload-img\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload-img</a> ★126 - 移动优化的vue图片懒加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rowanwins/vue-dropzone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropzone</a> ★124 - 用于文件上传的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/coderdiaz/vue-datasource\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datasource</a> ★121 - 创建VueJS动态表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/njleonzhang/vue-data-tables\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-tables</a> ★116 - VueJS2数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wlada/vue-carousel-3d\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carousel-3d</a> ★114 - VueJS的3D轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuwe/vuwe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuwe</a> ★113 - 基于微信WeUI所开发的专用于Vue2的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weilao/vue-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swiper</a> ★113 - 易于使用的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressive-image</a> ★111 - Vue的渐进图像加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NightCatSama/vue-slider-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider-component</a> ★109 - 在vue1和vue2中使用滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hchstera/vue-charts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-charts</a> ★109 - 轻松渲染一个图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewDadaFE/vue-impression\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-impression</a> ★104 - 移动Vuejs2 UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-region-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-region-picker</a> ★96 - 选择中国的省份市和地区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/santiblanko/vue-instant\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-instant</a> ★95 - 轻松创建自动提示的自定义搜索控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/vue-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-images</a> ★94 - 显示一组图片的lightbox组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cngu/vue-typer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typer</a> ★92 - 模拟用户输入选择和删除文本的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loading</a> ★92 - 元素中加载block的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-dragging\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragging</a> ★91 - 使元素可以拖拽</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/F-loat/vue-simplemde\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-simplemde</a> ★90 - VueJS的Markdown编辑器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/galenyuan/vue-datatable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datatable</a> ★89 - 使用Vuejs创建的DataTableView</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ydcss/vue-ydui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ydui</a> ★86 - 基于Vue2的移动端和微信UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-crop-upload</a> ★82 - vue图片剪裁上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-loading-bar</a> ★82 - 最简单的仿Youtube加载条视图</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-tooltip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tooltip</a> ★80 - 带绑定信息提示的提示工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LucienLee/vue-data-grid\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-grid</a> ★78 - VueJS复杂桌面交互示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weizhenye/vue-highcharts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-highcharts</a> ★78 - HighCharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/microzz/vue-music-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-player</a> ★77 - Vuejs写一个音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weifeiyue/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★76 - 漂亮的Vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-video\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video</a> ★75 - Vue.js的HTML5视频播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MMF-FE/vue-svgicon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svgicon</a> ★72 - 创建svg图标组件的工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Dafrok/vue-baidu-map\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-baidu-map</a> ★70 - 基于 Vue 2的百度地图组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-touch-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-ripple</a> ★69 - vuejs的触摸ripple组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-toast-mobile</a> ★68 - VueJS的toast插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-scrollbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollbar</a> ★64 - 最简单的滚动区域组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phoenixwong/vue2-timepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-timepicker</a> ★63 - 下拉时间选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-quill\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill</a> ★61 - vue组件构建quill编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Bubblings/vue-date-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-date-picker</a> ★61 - VueJS日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Kocisov/coffeebreak\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">coffeebreak</a> ★61 - 实时编辑CSS组件工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bkzl/vue-float-label\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-float-label</a> ★58 - VueJS浮动标签模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/vue-google-signin-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-signin-button</a> ★58 - 导入谷歌登录按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenjiahan/vodal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vodal</a> ★57 - 动画的vue模态</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lithiumjake/vue-placeholders\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-placeholders</a> ★57 - 处理占位符图片和乱码</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-social-sharing</a> ★53 - 社交分享组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/davidroyer/vue2-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-editor</a> ★53 - HTML编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moip/awesome-mask\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">awesome-mask</a> ★49 - 拥有独一无二mask的表单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shhdgit/vue-easy-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-slider</a> ★49 - Vue 2.x的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Ginhing/vue-tagsinput\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tagsinput</a> ★44 - 基于VueJS的标签组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/waynecz/vue-img-inputer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-inputer</a> ★40 - 基于Vue2的图片输入框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lokyoung/vuejs-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-paginate</a> ★39 - 分页VueJS组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/staskjs/vue-slick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slick</a> ★39 - 实现流畅轮播框的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">datepicker</a> ★38 - 基于flatpickr的时间选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yunyi1895/vue-music-master\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-master</a> ★38 - vue手机端网页音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★37 - vue FullCalendar封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-chart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chart</a> ★37 - 强大的高速的vue图表解析</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tianyong90/we-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">we-vue</a> ★36 - Vue2及weui1开发的组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/handsontable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">handsontable</a> ★36 - 网页表格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-radial-progress</a> ★35 - Vue.js放射性进度条组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fangyongbao/cubeex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cubeex</a> ★35 - 包含一套完整的移动UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-popup-mixin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-popup-mixin</a> ★35 - 用于管理弹出框的遮盖层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/loujiayu/vue-material-design\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material-design</a> ★34 - Vue MD风格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bbonnin/vue-morris\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-morris</a> ★33 - Vuejs组件封装Morrisjs库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-table</a> ★33 - 可排序可检索的表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GeoffZhu/vue-event-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-event-calendar</a> ★32 - 简单小巧的事件日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-form-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-form-2</a> ★30 - 全面的HTML表单管理的解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/legeneek/vue-image-clip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-clip</a> ★29 - 基于vue的图像剪辑组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-touch-keyboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-keyboard</a> ★28 - VueJS虚拟键盘组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bajian/vue-pull-to-refresh\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pull-to-refresh</a> ★28 - Vue2的上拉下拉</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-side-nav\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-side-nav</a> ★28 - 响应式的侧边导航</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ripple</a> ★28 - 制作谷歌MD风格涟漪效果的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-indicator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-indicator</a> ★27 - VueJS移动加载指示器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/darrynten/vue-lazy-background-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-background-images</a> ★25 - 懒加载背景组件的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">chartjs</a> ★24 - Vue Bulma的chartjs组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ankane/vue-chartkick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartkick</a> ★24 - VueJS一行代码实现优美图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/suguangwen/vue-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroll</a> ★24 - vue滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/blue0728/vue-area\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-area</a> ★23 - 省市区三级联动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lisiyizu/vue-ztree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ztree</a> ★23 - 用 vue 写的树层级组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alexqdjay/vue-tabs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tabs</a> ★22 - 多tab页轻型框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker-simple</a> ★21 - 基于vue的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shiye515/vue-m-carousel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-m-carousel</a> ★21 - vue 移动端轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/aweiu/vue-verify-pop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-verify-pop</a> ★20 - 带气泡提示的vue校验插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-waves\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waves</a> ★20 - waves的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xinxingyu/vue-city\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-city</a> ★15 - 城市选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-parallax\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-parallax</a> ★15 - 整洁的视觉效果</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JackGit/vue-img-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-loader</a> ★14 - 图片加载UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-smoothscroll</a> ★13 - smoothscroll的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eduardostuart/vue-typewriter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typewriter</a> ★13 - vue组件类型</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sinchang/vue-laypage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-laypage</a> ★12 - 简单的VueJS分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weibangtuo/vue-tree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tree</a> ★12 - vue树视图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Treri/vue-ios-alertview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ios-alertview</a> ★8 - iOS7+ 风格的alertview服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/savokiss/vue-cascading-address\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cascading-address</a> ★8 - vue地区选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ibufu/dd-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">dd-vue-component</a> ★7 - 订单来了的公共组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeseason/paco-ui-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">paco-ui-vue</a> ★7 - PACOUI的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/doodlewind/vue-cmap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cmap</a> ★6 - Vue China map可视化组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/steven5538/vue-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-button</a> ★4 - Vue按钮组件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">开发框架\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue.js</a> ★47739 - 流行的轻量高效的前端组件化方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fundon/vue-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-admin</a> ★3528 - Vue管理面板框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/quasarframework/quasar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">quasar</a> ★1599 - 响应式网站和混合移动应用程序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/electron-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">electron-vue</a> ★1454 - Electron及VueJS快速启动样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vuepack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuepack</a> ★1395 - 现代VueJS启动器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/N3-components/N3-components\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">N3-components</a> ★642 - 快速构建页面和应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/petervmeijgaard/vue-2.0-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-2.0-boilerplate</a> ★263 - Vue2单页应用样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hanan198501/vue-spa-template\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-spa-template</a> ★256 - 前后端分离后的单页应用开发</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nolimits4web/Framework7-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-Vue</a> ★233 - VueJS与Framework7结合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-stack-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-stack-2.0</a> ★152 - Vue2项目样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangxg2016/vue-bulma\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bulma</a> ★147 - 轻量级高性能MVVM Admin UI框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rodzzlessa24/vue-webgulp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-webgulp</a> ★103 - 仿VueJS Vue loader示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/erguotou520/vue-fullstack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullstack</a> ★96 - 实时的用户友好的后台系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shenghy/jspangAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jspangAdmin</a> ★74 - 基于Vue2的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Metnew/vue-element-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-element-starter</a> ★41 - vue启动页</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">实用库\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vuex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex</a> ★6414 - 专为 Vue.js 应用程序开发的状态管理模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-validator</a> ★1655 - vue的验证器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loader</a> ★1540 - Vue.js 针对Webpack的组件装载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-lazyload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload</a> ★873 - 用于懒加载的Vue模块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vuelidate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuelidate</a> ★851 - 简单轻量级的基于模块的Vue.js验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kazupon/vue-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-i18n</a> ★754 - VueJS的多语言切换插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zerqu/qingcheng\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">qingcheng</a> ★684 - qingcheng主题</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-desktop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-desktop</a> ★470 - 创建管理面板网站的UI库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Socket.io\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Socketio</a> ★368 - VueJS的socketio实现</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-awesome\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome</a> ★321 - VueJS字体Awesome组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ktquez/vue-head\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-head</a> ★306 - head标签的meta信息操作</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/declandewet/vue-meta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-meta</a> ★292 - 管理app的meta信息</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/meteor-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue-component</a> ★283 - vue和meteor整合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-axios\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios</a> ★268 - 将axios整合到VueJS的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/vue-flatpickr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-flatpickr</a> ★204 - 封装Flatpickr的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eddyerburgh/avoriaz\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">avoriaz</a> ★152 - VueJS测试实用工具库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-timeago\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-timeago</a> ★140 - VueJS的时间前组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhouzhuojie/meteor-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue</a> ★130 - VueJS和Meteor的桥接</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cenkai88/vue-svg-icon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svg-icon</a> ★116 - vue2的可变彩色svg图标方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/simplesmiler/vue-focus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-focus</a> ★111 - 可重用VueJS组件的焦点指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/haydenbbickerton/vue-animate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-animate</a> ★92 - 跨浏览器CSS3动画库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-modal</a> ★88 - vue的Bootstrap样式组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lmk123/vue-framework7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-framework7</a> ★84 - 结合VueJS使用的Framework7组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rigor789/vue-scrollTo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollTo</a> ★81 - 滚动到元素的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vuep\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuep</a> ★81 - 用实时编辑和预览来渲染Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lynzz/element-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element-admin</a> ★76 - 支持 vuecli 的 Element UI 的后台模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-password-strength-meter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-password-strength-meter</a> ★71 - 交互式密码强度计</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sopamo/vue-online\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-online</a> ★71 - reactive的在线和离线组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-render</a> ★70 - 用于Vue组件的延迟渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xiaokaike/vue-clipboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-clipboard</a> ★68 - VueJS的剪贴板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xtongs/vue-recyclist\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-recyclist</a> ★65 - vuejs无限滚动列表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kartsims/vue-cordova\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cordova</a> ★62 - Cordova的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-events\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-events</a> ★62 - 简化事件的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LinusBorg/portal-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">portal-vue</a> ★60 - 在组件外部渲染DOM</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/vue-electron\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-electron</a> ★57 - 将选择的API封装到Vue对象中的插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/cleave\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cleave</a> ★56 - 基于cleave.js的Cleave组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mlyknown/vue-gesture\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-gesture</a> ★56 - VueJS的手势事件插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iFgR/vue-shortkey\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shortkey</a> ★55 - 应用于Vue.js的Vue-ShortKey 插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-qart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-qart</a> ★53 - 用于qartjs的Vue2指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/vuemit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuemit</a> ★53 - 处理VueJS事件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weinot/vue-router-transition\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-router-transition</a> ★53 - 页面过渡插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-local-storage</a> ★52 - 具有类型支持的Vuejs本地储存插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kaorun343/vue-property-decorator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-property-decorator</a> ★52 - VueJS和属性Decorator</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-websocket\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-websocket</a> ★50 - VueJS的Websocket插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">http-vue-loader</a> ★48 - 从html及js环境加载vue文件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedeux/vuedeux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedeux</a> ★44 - 轻量级开源实用用层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SevenOutman/vue-aplayer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-aplayer</a> ★44 - 便于配置的音乐播放器vue2组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/lazy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">lazy-vue</a> ★42 - 懒加载图片</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yangmingshan/vue-bus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bus</a> ★40 - VueJS的事件总线</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/se-panfilov/vue-notifications\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-notifications</a> ★36 - 非阻塞通知库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ropbla9/vue-reactive-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-reactive-storage</a> ★36 - vue插件的Reactive层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JiriChara/vue-kindergarten\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-kindergarten</a> ★35 - 将kindergarten集成到VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dkfbasel/vuex-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-i18n</a> ★35 - 定位插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ts-loader</a> ★35 - 在Vue装载机检查脚本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-lazy-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-component</a> ★34 - 懒加载组件或者元素的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/AStaroverov/v-media-query\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-media-query</a> ★34 - vue中添加用于配合媒体查询的方法</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-helmet\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-helmet</a> ★34 - HTML标题管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/richardanaya/voir\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">voir</a> ★33 - 保持mutation与视图组件的分离</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-pagination-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pagination-2</a> ★32 - 简单通用的分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-observe-visibility\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-observe-visibility</a> ★32 - 当元素在页面上可见或隐藏时检测</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.resize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.resize</a> ★30 - 检测HTML调整大小事件的vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leonardovilarinho/vue-acl\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-acl</a> ★26 - VueJS访问控制列表插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xanf/vuex-shared-mutations\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-shared-mutations</a> ★26 - 分享某种Vuex mutations</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-drag-zone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-zone</a> ★19 - 适用于Vue2的dom拖动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">modal</a> ★18 - Vue Bulma的modal组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-file-base64\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-file-base64</a> ★18 - 将文件转换为Base64的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/irwansyahwii/Famous-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Famous-Vue</a> ★16 - Famous库的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">leo-vue-validator</a> ★13 - 异步的表单验证组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.ImagesLoaded\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.ImagesLoaded</a> ★13 - 检测图片加载的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-methods-promise\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-methods-promise</a> ★12 - 使vue方法支持promise</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-titlecase\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-titlecase</a> ★12 - 用于字符串titlecased的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Easy-Validator</a> ★11 - 简单的表单验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-zoombox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zoombox</a> ★10 - 一个高级zoombox</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-truncate-filter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-truncate-filter</a> ★9 - 截断字符串的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/syropian/vue-input-autosize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-input-autosize</a> ★7 - 基于内容自动调整文本输入的大小</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phphe/vue-data-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-validator</a> ★4 - Vuejs2的数据验证插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yodfz/vue-lazyloadImg\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyloadImg</a> ★4 - 图片懒加载插件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">服务端\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nuxt/nuxt.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">nuxt.js</a> ★2960 - 用于服务器渲染Vue app的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/danmademe/express-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">express-vue</a> ★174 - 简单的使用服务器端渲染vue.js</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/unvue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">unvue</a> ★105 - 使用简单的通用VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★73 - 非常简单的VueJS服务器端渲染模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★62 - 结合Express使用Vue2服务端渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leaves4j/vue-easy-renderer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-renderer</a> ★29 - Nodejs服务端渲染</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">辅助工具\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MiCottOn/DejaVue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DejaVue</a> ★580 - Vuejs可视化及压力测试</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-play/vue-play\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-play</a> ★477 - 展示Vue组件的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/vscode-VueHelper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vscode-VueHelper</a> ★198 - 目前vscode最好的vue代码提示插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NetanelBasal/vue-generate-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-generate-component</a> ★41 - 轻松生成Vue js组件的CLI工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xwpongithub/vue-multipage-cli\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multipage-cli</a> ★34 - 简单的多页CLI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/VuejsStarterKit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VuejsStarterKit</a> ★27 - vuejs starter套件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">应用实例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/koel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">koel</a> ★7292 - 基于网络的个人音频流媒体服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pagekit/pagekit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">pagekit</a> ★4065 - 轻量级的CMS建站系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/vue-manage-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-manage-system</a> ★1223 - 后台管理系统解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedo/vuedo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedo</a> ★1088 - 博客平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jackhutu/jackblog-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jackblog-vue</a> ★996 - 个人博客系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jcc/PJ%20Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">PJ Blog</a> ★768 - 开源博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★661 - 重写vue版cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ycwalker/CMS-of-Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">CMS-of-Blog</a> ★442 - 博客内容管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mrgodhani/rss-reader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rss-reader</a> ★332 - 简单的rss阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/viko16/vue-ghpages-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ghpages-blog</a> ★220 - 依赖GitHub Pages无需本地生成的静态博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhangxin840/tomato5\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tomato5</a> ★116 - 实时的协作工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wh469012917/swoole-vue-webim\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">swoole-vue-webim</a> ★106 - Web版的聊天应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sapjax/fewords\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">fewords</a> ★55 - 功能极其简单的笔记本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blog</a> ★53 - 使用Vue2.0 和Vuex的vue-blog</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">Demo示例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bailicangdu/vue2-elm\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-elm</a> ★4389 - 重写饿了么webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shinygang/Vue-cnodejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-cnodejs</a> ★2226 - 基于vue重写<a href=\"http://Cnodejs.org\">Cnodejs.org</a>的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">NeteaseCloudWebApp</a> ★1294 - 高仿网易云音乐的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihu-daily</a> ★905 - 知乎日报 with Vuejs</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/useryangtao/vue-wechat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-wechat</a> ★816 - vue.js开发微信app界面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-demo</a> ★773 - 从零构建vue2 + vue-router + vuex 开发环境</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eleme</a> ★671 - 高仿饿了么app商家详情</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kenberkeley/vue-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo</a> ★634 - vue简易留言板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/codecasts/spa-starter-kit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">spa-starter-kit</a> ★536 - 单页应用启动套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sioxas/vue-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music</a> ★527 - Vue 音乐搜索播放</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhengguorong/maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">maizuo</a> ★525 - vue/vuex/redux仿卖座网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-Meizi</a> ★449 - vue最新实战项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiakeqi/douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">douban</a> ★409 - 模仿豆瓣前端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yatessss/zhihudaily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihudaily-vue</a> ★395 - 知乎日报web版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueDemo_Sell_Eleme</a> ★377 - Vue2高仿饿了么外卖平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhaohaodang/vue-WeChat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-WeChat</a> ★361 - 基于Vue2高仿微信App的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lavyun/vue-demo-kugou\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-kugou</a> ★359 - vuejs仿写酷狗音乐webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/andylei18/vue-shopping\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shopping</a> ★350 - 蘑菇街移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.0-taopiaopiao</a> ★287 - vue2.0与express构建淘票票页面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-leancloud-blog</a> ★253 - 一个前后端完全分离的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">node-vue-server-webpack</a> ★244 - Node.js+Vue.js+webpack快速开发框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wendaosanshou/mi-by-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mi-by-vue</a> ★240 - VueJS仿小米官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TIGERB/easy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">easy-vue</a> ★239 - 使用Vue实现简易web</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue2.x-douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-douban</a> ★234 - Vue2实现简易豆瓣电影webApp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hzzly/xyy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">xyy-vue</a> ★210 - 大学生交流平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/okoala/vue-fis3\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fis3</a> ★205 - 流行开源工具集成demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-maizuo</a> ★195 - 使用Vue2全家桶仿制卖座电影</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-axios-github\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios-github</a> ★195 - 登录拦截登出功能</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ShanaMaid/vue-163-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-163-music</a> ★179 - vue仿网易云音乐客户端版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-adminLte-vue-router</a> ★177 - vue和adminLte整合应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily</a> ★175 - 知乎日报 Web 版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dmtrbrl/tmdb-app\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tmdb-app</a> ★159 - TMDbVueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu-Daily-Vue.js</a> ★145 - Vuejs单页网页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/notepad\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">notepad</a> ★138 - 本地存储的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/walleeeee/daily-zhihu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">daily-zhihu</a> ★127 - 基于Vue2的知乎日报单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhixuanziben/gouyan-movie-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gouyan-movie-vue</a> ★122 - 基于vue的在线电影影讯网站</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rokups/hello-vue-django\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">hello-vue-django</a> ★121 - 使用带有Django的vuejs的样板项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/vue-express-mongodb\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-express-mongodb</a> ★116 - 简单的前后端分离案例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CommanderXL/x-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">x-blog</a> ★109 - 开源的个人blog项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wszgxa/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★108 - vue单页应用demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-mini-shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mini-shop</a> ★107 - VueJS在线商店</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/secreter/websocket_chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">websocket_chat</a> ★101 - 基于vue和websocket的多人在线聊天室</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/RalfZhang/Vdo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vdo</a> ★96 - VueJS与MD重构豆瓣</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beidan/photoShare\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">photoShare</a> ★94 - 基于图片分享的社交平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/elva2596/vueBlog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueBlog</a> ★87 - 前后端分离博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily-2.0</a> ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beauty-enjoy/beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">beauty</a> ★81 - 豆瓣美女clone</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/qxl1231/generator-loopback-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">generator-loopback-vue</a> ★80 - 典型前后端分离项目模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hql123/vue-ruby-china\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ruby-china</a> ★74 - VueJS框架搭建的rubychina平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-koa-demo</a> ★72 - 使用Vue2和Koa1的全栈demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu_Daily</a> ★70 - 基于Vue和Nodejs的Web单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-Cnode</a> ★63 - 基于vue全家桶的Cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/houbx/webApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">webApp</a> ★57 - Vue2的移动端webApp音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/peng1992/houtai\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">houtai</a> ★52 - 基于vue和Element的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wenye123/vue-trip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trip</a> ★52 - vue2做的出行webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SidKwok/github-explorer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">github-explorer</a> ★50 - 寻找最有趣的GitHub库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shaqihe/life-app-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">life-app-vue</a> ★49 - 使用vue2完成多功能集合到小webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nswbmw/vue-bushishiren\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bushishiren</a> ★47 - 不是诗人应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr-boilerplate</a> ★47 - 精简版的ofvue-hackernews-2</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monkeyWangs/doubanMovie\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">doubanMovie</a> ★41 - 豆瓣电影展示</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cli-multipage-bootstrap</a> ★41 - 将vue官方在线示例整合到组件中</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QRL909109/ios7-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">ios7-vue</a> ★40 - 使用vue2.0 vue-router vuex模拟ios7</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/odranoelBR/vue-quasar-admin-example\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quasar-admin-example</a> ★39 - 将Quasar和VueJS应用于SPA项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BubblyPoker/cnode-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cnode-vue</a> ★39 - 基于vue和vue-router构建的cnodejs web网站SPA</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vanishcode/iview2-management-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview2-management-system</a> ★38 - 后台管理系统解决方案简单示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tyllo/Framework7-VueJS\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-VueJS</a> ★38 - 使用移动框架的示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-xd/seeMusic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">seeMusic</a> ★36 - 跨平台云音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beautifulBoys/vue-XiaoMi-Shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-XiaoMi-Shop</a> ★34 - 高仿小米商城的项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiananle/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★34 - 用 Vue 做的 CNode 官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GitaiQAQ/HyaReader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">HyaReader</a> ★34 - 移动友好的阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pluto1114/vue-music163\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music163</a> ★30 - 音乐VueJS项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily</a> ★29 - 轻松查看知乎日报内容</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">sls-vuex2-demo</a> ★26 - vuex2商城购物车demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Damonlw/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★22 - 使用cNode社区提供的接口</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xandeer/gank\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gank</a> ★21 - gankio资源的阅读应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moonou/zhihu-daily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily-vue</a> ★21 - 知乎日报</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/soulcm/vue-cnode-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode-mobile</a> ★21 - 搭建cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ITCNZ/vue-dropload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Todos_Vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Todos_Vuejs</a> ★19 - vuejs2搭建的极简的todolist</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vuejs-SalePlatform</a> ★18 - vuejs搭建的售卖平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-starter</a> ★18 - VueJs项目的简单启动页</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Halfeld/v-notes\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-notes</a> ★17 - 简单美观的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewsNIng/vue-h5plus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-h5plus</a> ★15 - 前卫的vue及html5plus跨平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CaiYiLiang/simply-calculator-vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">simply-calculator-vuejs</a> ★12 - 用VueJS实现简易计算器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/youknowznm/vue-memo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-memo</a> ★11 - 用 vue写的记事本应用</div></li></ul><div></div></body></html>","site":{"data":{}},"excerpt":"","more":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"exporter-version\" content=\"Evernote Mac 9.6.9 (470983)\"><meta name=\"author\" content=\"huizi77xl@sina.com\"><meta name=\"created\" content=\"2023-05-28 10:31:35 +0000\"><meta name=\"source\" content=\"desktop.mac\"><meta name=\"updated\" content=\"2023-05-28 10:32:08 +0000\"><title>vue开源项目收集</title></head><body style=\"font-size: 14px;\"><div><br></div><div><br></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">awesome-github-vue 是由</span><a href=\"http://www.opendigg.com/\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">整理并维护的Vue相关开源项目库集合。我们会定期同步</span><a href=\"http://www.opendigg.com/tags/front-vue\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">OpenDigg</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">上的项目到这里，也欢迎各位</span><a href=\"https://github.com/opendigg/opending-share-projects\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">提交项目</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">给我们。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">如果收录的项目有错误，可以通过</span><a href=\"https://github.com/opendigg/awesome-github-vue/issues\" style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;-en-paragraph:true;\">issue</a><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。\n</span></div><div style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em;\"><span style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);-en-paragraph:true;\">内容来自转载\n</span></div><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">内容\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#UI%E7%BB%84%E4%BB%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">UI组件</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">开发框架</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%AE%9E%E7%94%A8%E5%BA%93\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">实用库</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E6%9C%8D%E5%8A%A1%E7%AB%AF\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">服务端</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">辅助工具</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">应用实例</a></div></li><li style=\"list-style: circle;\"><div><a href=\"https://jellyhui.github.io/2017/06/27/%E5%BC%80%E6%BA%90vue%E9%A1%B9%E7%9B%AE/#Demo%E7%A4%BA%E4%BE%8B\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Demo示例</a></div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">UI组件\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/element\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element</a> ★10420 - 饿了么出品的Vue2的web UI工具套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/airyland/vux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vux</a> ★7139 - 基于Vue和WeUI的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iview/iview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview</a> ★5164 - 基于 Vuejs 的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/mint-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-ui</a> ★5082 - Vue 2的移动UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JosephusPaye/Keen-UI\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Keen-UI</a> ★2483 - 轻量级的基本UI组件合集</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/marcosmoura/vue-material\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material</a> ★2476 - 通过Vue Material和Vue 2建立精美的app应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/museui/muse-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">muse-ui</a> ★2154 - 三端样式一致的响应式 UI 库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuetifyjs/vuetify\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuetify</a> ★1941 - 为移动而生的Vue JS 2组件框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vonic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vonic</a> ★1601 - 快速构建移动端单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/eme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eme</a> ★1431 - 优雅的Markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vue-multiselect\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multiselect</a> ★1265 - Vue.js选择框解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ratiw/vue-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-table</a> ★870 - 简化数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueCircleMenu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueCircleMenu</a> ★793 - 漂亮的vue圆环菜单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chat</a> ★769 - vuejs和vuex及webpack的聊天示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zulko/eagle.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eagle.js</a> ★758 - hacker的幻灯片演示框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/taylorchen709/vueAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueAdmin</a> ★749 - 基于vuejs2和element的简单的管理员模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/luojilab/radon-ui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">radon-ui</a> ★658 - 快速开发产品的Vue组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pi0/bootstrap-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">bootstrap-vue</a> ★650 - 应用于Vuejs2的Twitter的Bootstrap 4组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MopTym/vue-waterfall\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waterfall</a> ★639 - Vue.js的瀑布布局组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenz24/vue-blu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blu</a> ★623 - 帮助你轻松创建web应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.Draggable</a> ★623 - 实现拖放和视图模型数组同步</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-carbon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carbon</a> ★621 - 基于 vue 开发MD风格的移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FE-Driver/vue-beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-beauty</a> ★616 - 由vue和ant design创建的优美UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-scroll</a> ★578 - VueJS的无限滚动指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome-swiper</a> ★577 - vue.js触摸滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-syntax-highlight\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-syntax-highlight</a> ★574 - Sublime Text语法高亮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jinzhe/vue-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-calendar</a> ★474 - 日期选择插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-amap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-amap</a> ★404 - 基于Vue 2和高德地图的地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartjs</a> ★388 - vue中的Chartjs的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-swipe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swipe</a> ★388 - VueJS触摸滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-echarts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-echarts</a> ★367 - VueJS的ECharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★354 - 日历和日期选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Zhangdroid/Gokotta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Gokotta</a> ★332 - 简单的音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/markcook\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">markcook</a> ★322 - 好看的markdown编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sagalbot/vue-sortable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-sortable</a> ★308 - 轻松添加拖拽排序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-maps</a> ★293 - 带有双向数据绑定Google地图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-quill-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill-editor</a> ★268 - 基于Quill适用于Vue2的富文本编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-progressbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressbar</a> ★266 - vue轻量级进度条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-picture-input</a> ★254 - 移动友好的图片文件输入组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeachScript/vue-infinite-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-infinite-loading</a> ★251 - VueJS的无限滚动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lian-yue/vue-upload-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-upload-component</a> ★239 - Vuejs文件上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-trend\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trend</a> ★235 - 简单优雅的星光线条</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangdahoo/vue-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroller</a> ★233 - Vonic UI的功能性组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TahaSh/vue-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-paginate</a> ★222 - 分页数据的简约VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-video-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video-player</a> ★215 - VueJS视频及直播播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/VueStar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueStar</a> ★214 - 带星星动画的vue点赞按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datetime-picker</a> ★207 - 日期时间选择控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-core-image-upload</a> ★200 - 轻量级的vue上传插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-tables-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tables-2</a> ★195 - 显示数据的bootstrap样式网格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★190 - 基于vue.js的全日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icai/vue2-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-calendar</a> ★187 - 支持lunar和日期事件的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/rubik\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rubik</a> ★183 - 基于Vuejs2的开源 UI 组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/charliekassel/vuejs-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-datepicker</a> ★179 - vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-mugen-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mugen-scroll</a> ★179 - 无限滚动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/DataVisualization\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DataVisualization</a> ★178 - 数据可视化</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-loadmore\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-loadmore</a> ★176 - VueJS的双向下拉刷新组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-virtual-scroller\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-virtual-scroller</a> ★175 - 带任意数目数据的顺畅的滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/PeakTai/vue-html5-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-html5-editor</a> ★163 - html5所见即所得编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hifarer/Vueditor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vueditor</a> ★157 - 所见即所得的编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/warpcgd/vue-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider</a> ★138 - vue 滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-msgbox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-msgbox</a> ★134 - vuejs的消息框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-slide\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slide</a> ★133 - vue轻量级滑动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-and-drop-list</a> ★127 - 创建排序列表的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Astray-git/vue-dragula\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragula</a> ★126 - 使拖放变得简单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JALBAA/vue-lazyload-img\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload-img</a> ★126 - 移动优化的vue图片懒加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rowanwins/vue-dropzone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropzone</a> ★124 - 用于文件上传的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/coderdiaz/vue-datasource\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datasource</a> ★121 - 创建VueJS动态表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/njleonzhang/vue-data-tables\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-tables</a> ★116 - VueJS2数据表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Wlada/vue-carousel-3d\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-carousel-3d</a> ★114 - VueJS的3D轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuwe/vuwe\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuwe</a> ★113 - 基于微信WeUI所开发的专用于Vue2的组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weilao/vue-swiper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-swiper</a> ★113 - 易于使用的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-progressive-image</a> ★111 - Vue的渐进图像加载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NightCatSama/vue-slider-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slider-component</a> ★109 - 在vue1和vue2中使用滑块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hchstera/vue-charts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-charts</a> ★109 - 轻松渲染一个图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewDadaFE/vue-impression\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-impression</a> ★104 - 移动Vuejs2 UI元素</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vue-region-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-region-picker</a> ★96 - 选择中国的省份市和地区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/santiblanko/vue-instant\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-instant</a> ★95 - 轻松创建自动提示的自定义搜索控件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/vue-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-images</a> ★94 - 显示一组图片的lightbox组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cngu/vue-typer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typer</a> ★92 - 模拟用户输入选择和删除文本的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-loading\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loading</a> ★92 - 元素中加载block的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-dragging\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dragging</a> ★91 - 使元素可以拖拽</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/F-loat/vue-simplemde\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-simplemde</a> ★90 - VueJS的Markdown编辑器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/galenyuan/vue-datatable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datatable</a> ★89 - 使用Vuejs创建的DataTableView</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ydcss/vue-ydui\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ydui</a> ★86 - 基于Vue2的移动端和微信UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-crop-upload</a> ★82 - vue图片剪裁上传组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-loading-bar</a> ★82 - 最简单的仿Youtube加载条视图</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-tooltip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tooltip</a> ★80 - 带绑定信息提示的提示工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LucienLee/vue-data-grid\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-grid</a> ★78 - VueJS复杂桌面交互示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weizhenye/vue-highcharts\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-highcharts</a> ★78 - HighCharts组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/microzz/vue-music-player\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-player</a> ★77 - Vuejs写一个音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weifeiyue/vue-datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker</a> ★76 - 漂亮的Vue日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-video\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-video</a> ★75 - Vue.js的HTML5视频播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MMF-FE/vue-svgicon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svgicon</a> ★72 - 创建svg图标组件的工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Dafrok/vue-baidu-map\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-baidu-map</a> ★70 - 基于 Vue 2的百度地图组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-touch-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-ripple</a> ★69 - vuejs的触摸ripple组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-toast-mobile</a> ★68 - VueJS的toast插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-scrollbar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollbar</a> ★64 - 最简单的滚动区域组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phoenixwong/vue2-timepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-timepicker</a> ★63 - 下拉时间选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-quill\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quill</a> ★61 - vue组件构建quill编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Bubblings/vue-date-picker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-date-picker</a> ★61 - VueJS日期选择器组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Kocisov/coffeebreak\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">coffeebreak</a> ★61 - 实时编辑CSS组件工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bkzl/vue-float-label\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-float-label</a> ★58 - VueJS浮动标签模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/vue-google-signin-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-google-signin-button</a> ★58 - 导入谷歌登录按钮</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/chenjiahan/vodal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vodal</a> ★57 - 动画的vue模态</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lithiumjake/vue-placeholders\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-placeholders</a> ★57 - 处理占位符图片和乱码</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-social-sharing</a> ★53 - 社交分享组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/davidroyer/vue2-editor\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-editor</a> ★53 - HTML编辑器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moip/awesome-mask\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">awesome-mask</a> ★49 - 拥有独一无二mask的表单</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shhdgit/vue-easy-slider\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-slider</a> ★49 - Vue 2.x的滑块组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Ginhing/vue-tagsinput\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tagsinput</a> ★44 - 基于VueJS的标签组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/waynecz/vue-img-inputer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-inputer</a> ★40 - 基于Vue2的图片输入框</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lokyoung/vuejs-paginate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuejs-paginate</a> ★39 - 分页VueJS组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/staskjs/vue-slick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-slick</a> ★39 - 实现流畅轮播框的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/datepicker\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">datepicker</a> ★38 - 基于flatpickr的时间选择组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yunyi1895/vue-music-master\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music-master</a> ★38 - vue手机端网页音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullcalendar</a> ★37 - vue FullCalendar封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-chart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chart</a> ★37 - 强大的高速的vue图表解析</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tianyong90/we-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">we-vue</a> ★36 - Vue2及weui1开发的组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/handsontable\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">handsontable</a> ★36 - 网页表格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-radial-progress</a> ★35 - Vue.js放射性进度条组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fangyongbao/cubeex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cubeex</a> ★35 - 包含一套完整的移动UI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/myronliu347/vue-popup-mixin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-popup-mixin</a> ★35 - 用于管理弹出框的遮盖层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/loujiayu/vue-material-design\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-material-design</a> ★34 - Vue MD风格组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bbonnin/vue-morris\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-morris</a> ★33 - Vuejs组件封装Morrisjs库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-table</a> ★33 - 可排序可检索的表格</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GeoffZhu/vue-event-calendar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-event-calendar</a> ★32 - 简单小巧的事件日历组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-form-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-form-2</a> ★30 - 全面的HTML表单管理的解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/legeneek/vue-image-clip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-image-clip</a> ★29 - 基于vue的图像剪辑组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-touch-keyboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-touch-keyboard</a> ★28 - VueJS虚拟键盘组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bajian/vue-pull-to-refresh\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pull-to-refresh</a> ★28 - Vue2的上拉下拉</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-side-nav\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-side-nav</a> ★28 - 响应式的侧边导航</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-ripple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ripple</a> ★28 - 制作谷歌MD风格涟漪效果的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mint-ui/mint-indicator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mint-indicator</a> ★27 - VueJS移动加载指示器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/darrynten/vue-lazy-background-images\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-background-images</a> ★25 - 懒加载背景组件的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/chartjs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">chartjs</a> ★24 - Vue Bulma的chartjs组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ankane/vue-chartkick\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-chartkick</a> ★24 - VueJS一行代码实现优美图表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/suguangwen/vue-scroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scroll</a> ★24 - vue滚动</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/blue0728/vue-area\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-area</a> ★23 - 省市区三级联动插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lisiyizu/vue-ztree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ztree</a> ★23 - 用 vue 写的树层级组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/alexqdjay/vue-tabs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tabs</a> ★22 - 多tab页轻型框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-datepicker-simple</a> ★21 - 基于vue的日期选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shiye515/vue-m-carousel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-m-carousel</a> ★21 - vue 移动端轮播组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/aweiu/vue-verify-pop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-verify-pop</a> ★20 - 带气泡提示的vue校验插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-waves\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-waves</a> ★20 - waves的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xinxingyu/vue-city\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-city</a> ★15 - 城市选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-parallax\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-parallax</a> ★15 - 整洁的视觉效果</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JackGit/vue-img-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-img-loader</a> ★14 - 图片加载UI组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-smoothscroll</a> ★13 - smoothscroll的VueJS版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eduardostuart/vue-typewriter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-typewriter</a> ★13 - vue组件类型</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sinchang/vue-laypage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-laypage</a> ★12 - 简单的VueJS分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weibangtuo/vue-tree\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-tree</a> ★12 - vue树视图组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Treri/vue-ios-alertview\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ios-alertview</a> ★8 - iOS7+ 风格的alertview服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/savokiss/vue-cascading-address\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cascading-address</a> ★8 - vue地区选择器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ibufu/dd-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">dd-vue-component</a> ★7 - 订单来了的公共组件库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeseason/paco-ui-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">paco-ui-vue</a> ★7 - PACOUI的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/doodlewind/vue-cmap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cmap</a> ★6 - Vue China map可视化组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/steven5538/vue-button\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-button</a> ★4 - Vue按钮组件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">开发框架\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue.js</a> ★47739 - 流行的轻量高效的前端组件化方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fundon/vue-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-admin</a> ★3528 - Vue管理面板框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/quasarframework/quasar\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">quasar</a> ★1599 - 响应式网站和混合移动应用程序</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/electron-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">electron-vue</a> ★1454 - Electron及VueJS快速启动样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vuepack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuepack</a> ★1395 - 现代VueJS启动器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/N3-components/N3-components\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">N3-components</a> ★642 - 快速构建页面和应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/petervmeijgaard/vue-2.0-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-2.0-boilerplate</a> ★263 - Vue2单页应用样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hanan198501/vue-spa-template\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-spa-template</a> ★256 - 前后端分离后的单页应用开发</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nolimits4web/Framework7-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-Vue</a> ★233 - VueJS与Framework7结合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-stack-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-stack-2.0</a> ★152 - Vue2项目样板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wangxg2016/vue-bulma\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bulma</a> ★147 - 轻量级高性能MVVM Admin UI框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rodzzlessa24/vue-webgulp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-webgulp</a> ★103 - 仿VueJS Vue loader示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/erguotou520/vue-fullstack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fullstack</a> ★96 - 实时的用户友好的后台系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shenghy/jspangAdmin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jspangAdmin</a> ★74 - 基于Vue2的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Metnew/vue-element-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-element-starter</a> ★41 - vue启动页</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">实用库\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vuex\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex</a> ★6414 - 专为 Vue.js 应用程序开发的状态管理模式</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-validator</a> ★1655 - vue的验证器插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vuejs/vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-loader</a> ★1540 - Vue.js 针对Webpack的组件装载插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-lazyload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyload</a> ★873 - 用于懒加载的Vue模块</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monterail/vuelidate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuelidate</a> ★851 - 简单轻量级的基于模块的Vue.js验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kazupon/vue-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-i18n</a> ★754 - VueJS的多语言切换插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zerqu/qingcheng\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">qingcheng</a> ★684 - qingcheng主题</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ElemeFE/vue-desktop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-desktop</a> ★470 - 创建管理面板网站的UI库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Socket.io\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Socketio</a> ★368 - VueJS的socketio实现</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Justineo/vue-awesome\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-awesome</a> ★321 - VueJS字体Awesome组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ktquez/vue-head\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-head</a> ★306 - head标签的meta信息操作</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/declandewet/vue-meta\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-meta</a> ★292 - 管理app的meta信息</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/meteor-vue-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue-component</a> ★283 - vue和meteor整合</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-axios\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios</a> ★268 - 将axios整合到VueJS的封装</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jrainlau/vue-flatpickr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-flatpickr</a> ★204 - 封装Flatpickr的Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/eddyerburgh/avoriaz\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">avoriaz</a> ★152 - VueJS测试实用工具库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/vue-timeago\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-timeago</a> ★140 - VueJS的时间前组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhouzhuojie/meteor-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">meteor-vue</a> ★130 - VueJS和Meteor的桥接</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cenkai88/vue-svg-icon\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-svg-icon</a> ★116 - vue2的可变彩色svg图标方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/simplesmiler/vue-focus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-focus</a> ★111 - 可重用VueJS组件的焦点指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/haydenbbickerton/vue-animate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-animate</a> ★92 - 跨浏览器CSS3动画库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bootstrap-modal</a> ★88 - vue的Bootstrap样式组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lmk123/vue-framework7\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-framework7</a> ★84 - 结合VueJS使用的Framework7组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rigor789/vue-scrollTo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-scrollTo</a> ★81 - 滚动到元素的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QingWei-Li/vuep\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuep</a> ★81 - 用实时编辑和预览来渲染Vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lynzz/element-admin\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">element-admin</a> ★76 - 支持 vuecli 的 Element UI 的后台模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/apertureless/vue-password-strength-meter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-password-strength-meter</a> ★71 - 交互式密码强度计</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sopamo/vue-online\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-online</a> ★71 - reactive的在线和离线组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-render</a> ★70 - 用于Vue组件的延迟渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xiaokaike/vue-clipboard\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-clipboard</a> ★68 - VueJS的剪贴板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xtongs/vue-recyclist\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-recyclist</a> ★65 - vuejs无限滚动列表</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kartsims/vue-cordova\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cordova</a> ★62 - Cordova的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cklmercer/vue-events\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-events</a> ★62 - 简化事件的VueJS插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LinusBorg/portal-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">portal-vue</a> ★60 - 在组件外部渲染DOM</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimulatedGREG/vue-electron\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-electron</a> ★57 - 将选择的API封装到Vue对象中的插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/cleave\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cleave</a> ★56 - 基于cleave.js的Cleave组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mlyknown/vue-gesture\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-gesture</a> ★56 - VueJS的手势事件插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iFgR/vue-shortkey\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shortkey</a> ★55 - 应用于Vue.js的Vue-ShortKey 插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-qart\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-qart</a> ★53 - 用于qartjs的Vue2指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/vuemit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuemit</a> ★53 - 处理VueJS事件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/weinot/vue-router-transition\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-router-transition</a> ★53 - 页面过渡插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-local-storage</a> ★52 - 具有类型支持的Vuejs本地储存插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kaorun343/vue-property-decorator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-property-decorator</a> ★52 - VueJS和属性Decorator</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/icebob/vue-websocket\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-websocket</a> ★50 - VueJS的Websocket插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">http-vue-loader</a> ★48 - 从html及js环境加载vue文件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedeux/vuedeux\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedeux</a> ★44 - 轻量级开源实用用层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SevenOutman/vue-aplayer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-aplayer</a> ★44 - 便于配置的音乐播放器vue2组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/gocanto/lazy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">lazy-vue</a> ★42 - 懒加载图片</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yangmingshan/vue-bus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bus</a> ★40 - VueJS的事件总线</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/se-panfilov/vue-notifications\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-notifications</a> ★36 - 非阻塞通知库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ropbla9/vue-reactive-storage\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-reactive-storage</a> ★36 - vue插件的Reactive层</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/JiriChara/vue-kindergarten\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-kindergarten</a> ★35 - 将kindergarten集成到VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dkfbasel/vuex-i18n\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-i18n</a> ★35 - 定位插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ts-loader</a> ★35 - 在Vue装载机检查脚本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Coffcer/vue-lazy-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazy-component</a> ★34 - 懒加载组件或者元素的Vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/AStaroverov/v-media-query\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-media-query</a> ★34 - vue中添加用于配合媒体查询的方法</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/miaolz123/vue-helmet\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-helmet</a> ★34 - HTML标题管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/richardanaya/voir\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">voir</a> ★33 - 保持mutation与视图组件的分离</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/matfish2/vue-pagination-2\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-pagination-2</a> ★32 - 简单通用的分页组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Akryum/vue-observe-visibility\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-observe-visibility</a> ★32 - 当元素在页面上可见或隐藏时检测</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.resize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.resize</a> ★30 - 检测HTML调整大小事件的vue指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leonardovilarinho/vue-acl\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-acl</a> ★26 - VueJS访问控制列表插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xanf/vuex-shared-mutations\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuex-shared-mutations</a> ★26 - 分享某种Vuex mutations</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-drag-zone\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-drag-zone</a> ★19 - 适用于Vue2的dom拖动组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-bulma/modal\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">modal</a> ★18 - Vue Bulma的modal组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-file-base64\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-file-base64</a> ★18 - 将文件转换为Base64的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/irwansyahwii/Famous-Vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Famous-Vue</a> ★16 - Famous库的vue组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">leo-vue-validator</a> ★13 - 异步的表单验证组件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/David-Desmaisons/Vue.ImagesLoaded\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue.ImagesLoaded</a> ★13 - 检测图片加载的VueJS指令</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-methods-promise\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-methods-promise</a> ★12 - 使vue方法支持promise</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Haixing-Hu/vue-titlecase\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-titlecase</a> ★12 - 用于字符串titlecased的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-Easy-Validator</a> ★11 - 简单的表单验证</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-comps/vue-zoombox\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zoombox</a> ★10 - 一个高级zoombox</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/imcvampire/vue-truncate-filter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-truncate-filter</a> ★9 - 截断字符串的VueJS过滤器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/syropian/vue-input-autosize\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-input-autosize</a> ★7 - 基于内容自动调整文本输入的大小</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phphe/vue-data-validator\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-data-validator</a> ★4 - Vuejs2的数据验证插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yodfz/vue-lazyloadImg\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-lazyloadImg</a> ★4 - 图片懒加载插件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">服务端\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nuxt/nuxt.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">nuxt.js</a> ★2960 - 用于服务器渲染Vue app的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/danmademe/express-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">express-vue</a> ★174 - 简单的使用服务器端渲染vue.js</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/egoist/unvue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">unvue</a> ★105 - 使用简单的通用VueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ccforward/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★73 - 非常简单的VueJS服务器端渲染模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-ssr\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr</a> ★62 - 结合Express使用Vue2服务端渲染</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/leaves4j/vue-easy-renderer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-easy-renderer</a> ★29 - Nodejs服务端渲染</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">辅助工具\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MiCottOn/DejaVue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">DejaVue</a> ★580 - Vuejs可视化及压力测试</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vue-play/vue-play\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-play</a> ★477 - 展示Vue组件的最小化框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/OYsun/vscode-VueHelper\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vscode-VueHelper</a> ★198 - 目前vscode最好的vue代码提示插件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NetanelBasal/vue-generate-component\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-generate-component</a> ★41 - 轻松生成Vue js组件的CLI工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xwpongithub/vue-multipage-cli\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-multipage-cli</a> ★34 - 简单的多页CLI</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/MetinSeylan/VuejsStarterKit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VuejsStarterKit</a> ★27 - vuejs starter套件</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">应用实例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/phanan/koel\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">koel</a> ★7292 - 基于网络的个人音频流媒体服务</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pagekit/pagekit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">pagekit</a> ★4065 - 轻量级的CMS建站系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/vue-manage-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-manage-system</a> ★1223 - 后台管理系统解决方案</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Vuedo/vuedo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vuedo</a> ★1088 - 博客平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jackhutu/jackblog-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">jackblog-vue</a> ★996 - 个人博客系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jcc/PJ%20Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">PJ Blog</a> ★768 - 开源博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★661 - 重写vue版cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ycwalker/CMS-of-Blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">CMS-of-Blog</a> ★442 - 博客内容管理器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/mrgodhani/rss-reader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">rss-reader</a> ★332 - 简单的rss阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/viko16/vue-ghpages-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ghpages-blog</a> ★220 - 依赖GitHub Pages无需本地生成的静态博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhangxin840/tomato5\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tomato5</a> ★116 - 实时的协作工具</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wh469012917/swoole-vue-webim\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">swoole-vue-webim</a> ★106 - Web版的聊天应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sapjax/fewords\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">fewords</a> ★55 - 功能极其简单的笔记本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/surmon-china/vue-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-blog</a> ★53 - 使用Vue2.0 和Vuex的vue-blog</div></li></ul><h1 style=\"font-size: 22px; padding: 0px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 22px; font-weight: bold; line-height: 1.5; font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(85, 85, 85); font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\">Demo示例\n</span></h1><ul style=\"color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><li style=\"list-style: circle;\"><div><a href=\"https://github.com/bailicangdu/vue2-elm\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-elm</a> ★4389 - 重写饿了么webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shinygang/Vue-cnodejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vue-cnodejs</a> ★2226 - 基于vue重写<a href=\"http://Cnodejs.org\">Cnodejs.org</a>的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">NeteaseCloudWebApp</a> ★1294 - 高仿网易云音乐的webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihu-daily</a> ★905 - 知乎日报 with Vuejs</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/useryangtao/vue-wechat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-wechat</a> ★816 - vue.js开发微信app界面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lzxb/vue2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2-demo</a> ★773 - 从零构建vue2 + vue-router + vuex 开发环境</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">eleme</a> ★671 - 高仿饿了么app商家详情</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/kenberkeley/vue-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo</a> ★634 - vue简易留言板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/codecasts/spa-starter-kit\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">spa-starter-kit</a> ★536 - 单页应用启动套件</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Sioxas/vue-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music</a> ★527 - Vue 音乐搜索播放</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhengguorong/maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">maizuo</a> ★525 - vue/vuex/redux仿卖座网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-Meizi</a> ★449 - vue最新实战项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiakeqi/douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">douban</a> ★409 - 模仿豆瓣前端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yatessss/zhihudaily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihudaily-vue</a> ★395 - 知乎日报web版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">VueDemo_Sell_Eleme</a> ★377 - Vue2高仿饿了么外卖平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhaohaodang/vue-WeChat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-WeChat</a> ★361 - 基于Vue2高仿微信App的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lavyun/vue-demo-kugou\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-kugou</a> ★359 - vuejs仿写酷狗音乐webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/andylei18/vue-shopping\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-shopping</a> ★350 - 蘑菇街移动端</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.0-taopiaopiao</a> ★287 - vue2.0与express构建淘票票页面</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-leancloud-blog</a> ★253 - 一个前后端完全分离的单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">node-vue-server-webpack</a> ★244 - Node.js+Vue.js+webpack快速开发框架</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wendaosanshou/mi-by-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">mi-by-vue</a> ★240 - VueJS仿小米官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/TIGERB/easy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">easy-vue</a> ★239 - 使用Vue实现简易web</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue2.x-douban\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-douban</a> ★234 - Vue2实现简易豆瓣电影webApp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hzzly/xyy-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">xyy-vue</a> ★210 - 大学生交流平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/okoala/vue-fis3\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-fis3</a> ★205 - 流行开源工具集成demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-demo-maizuo</a> ★195 - 使用Vue2全家桶仿制卖座电影</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/superman66/vue-axios-github\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-axios-github</a> ★195 - 登录拦截登出功能</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ShanaMaid/vue-163-music\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-163-music</a> ★179 - vue仿网易云音乐客户端版</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-adminLte-vue-router</a> ★177 - vue和adminLte整合应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily</a> ★175 - 知乎日报 Web 版本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/dmtrbrl/tmdb-app\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">tmdb-app</a> ★159 - TMDbVueJS应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu-Daily-Vue.js</a> ★145 - Vuejs单页网页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/lin-xin/notepad\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">notepad</a> ★138 - 本地存储的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/walleeeee/daily-zhihu\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">daily-zhihu</a> ★127 - 基于Vue2的知乎日报单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhixuanziben/gouyan-movie-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gouyan-movie-vue</a> ★122 - 基于vue的在线电影影讯网站</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/rokups/hello-vue-django\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">hello-vue-django</a> ★121 - 使用带有Django的vuejs的样板项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/vue-express-mongodb\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-express-mongodb</a> ★116 - 简单的前后端分离案例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CommanderXL/x-blog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">x-blog</a> ★109 - 开源的个人blog项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wszgxa/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★108 - vue单页应用demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-mini-shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-mini-shop</a> ★107 - VueJS在线商店</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/secreter/websocket_chat\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">websocket_chat</a> ★101 - 基于vue和websocket的多人在线聊天室</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/RalfZhang/Vdo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vdo</a> ★96 - VueJS与MD重构豆瓣</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beidan/photoShare\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">photoShare</a> ★94 - 基于图片分享的社交平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/elva2596/vueBlog\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vueBlog</a> ★87 - 前后端分离博客</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-zhihudaily-2.0</a> ★85 - 使用Vue2.0+vue-router+vuex创建的zhihudaily</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beauty-enjoy/beauty\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">beauty</a> ★81 - 豆瓣美女clone</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/qxl1231/generator-loopback-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">generator-loopback-vue</a> ★80 - 典型前后端分离项目模板</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/hql123/vue-ruby-china\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ruby-china</a> ★74 - VueJS框架搭建的rubychina平台</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-koa-demo</a> ★72 - 使用Vue2和Koa1的全栈demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Zhihu_Daily</a> ★70 - 基于Vue和Nodejs的Web单页应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue2.x-Cnode</a> ★63 - 基于vue全家桶的Cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/houbx/webApp\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">webApp</a> ★57 - Vue2的移动端webApp音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/peng1992/houtai\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">houtai</a> ★52 - 基于vue和Element的后台管理系统</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/wenye123/vue-trip\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-trip</a> ★52 - vue2做的出行webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/SidKwok/github-explorer\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">github-explorer</a> ★50 - 寻找最有趣的GitHub库</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/shaqihe/life-app-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">life-app-vue</a> ★49 - 使用vue2完成多功能集合到小webapp</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/nswbmw/vue-bushishiren\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-bushishiren</a> ★47 - 不是诗人应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-ssr-boilerplate</a> ★47 - 精简版的ofvue-hackernews-2</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/monkeyWangs/doubanMovie\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">doubanMovie</a> ★41 - 豆瓣电影展示</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cli-multipage-bootstrap</a> ★41 - 将vue官方在线示例整合到组件中</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/QRL909109/ios7-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">ios7-vue</a> ★40 - 使用vue2.0 vue-router vuex模拟ios7</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/odranoelBR/vue-quasar-admin-example\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-quasar-admin-example</a> ★39 - 将Quasar和VueJS应用于SPA项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BubblyPoker/cnode-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">cnode-vue</a> ★39 - 基于vue和vue-router构建的cnodejs web网站SPA</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/vanishcode/iview2-management-system\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">iview2-management-system</a> ★38 - 后台管理系统解决方案简单示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/tyllo/Framework7-VueJS\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Framework7-VueJS</a> ★38 - 使用移动框架的示例</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Alex-xd/seeMusic\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">seeMusic</a> ★36 - 跨平台云音乐播放器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/beautifulBoys/vue-XiaoMi-Shop\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-XiaoMi-Shop</a> ★34 - 高仿小米商城的项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/jiananle/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★34 - 用 Vue 做的 CNode 官网</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/GitaiQAQ/HyaReader\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">HyaReader</a> ★34 - 移动友好的阅读器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/pluto1114/vue-music163\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-music163</a> ★30 - 音乐VueJS项目</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xrr2016/zhihu-daily\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily</a> ★29 - 轻松查看知乎日报内容</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">sls-vuex2-demo</a> ★26 - vuex2商城购物车demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Damonlw/vue-cnode\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode</a> ★22 - 使用cNode社区提供的接口</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/xandeer/gank\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">gank</a> ★21 - gankio资源的阅读应用</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/moonou/zhihu-daily-vue\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">zhihu-daily-vue</a> ★21 - 知乎日报</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/soulcm/vue-cnode-mobile\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-cnode-mobile</a> ★21 - 搭建cnode社区</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/ITCNZ/vue-dropload\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Todos_Vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Todos_Vuejs</a> ★19 - vuejs2搭建的极简的todolist</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">Vuejs-SalePlatform</a> ★18 - vuejs搭建的售卖平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/BosNaufal/vue-starter\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-starter</a> ★18 - VueJs项目的简单启动页</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/Halfeld/v-notes\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">v-notes</a> ★17 - 简单美观的记事本</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/NewsNIng/vue-h5plus\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-h5plus</a> ★15 - 前卫的vue及html5plus跨平台demo</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/CaiYiLiang/simply-calculator-vuejs\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">simply-calculator-vuejs</a> ★12 - 用VueJS实现简易计算器</div></li><li style=\"list-style: circle;\"><div><a href=\"https://github.com/youknowznm/vue-memo\" style=\"color: rgb(85, 85, 85); border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;\">vue-memo</a> ★11 - 用 vue写的记事本应用</div></li></ul><div></div></body></html>"},{"title":"考研写作文部分","date":"2023-06-01T02:40:24.000Z","_content":"\n### 考试安排\n    时间： 每年12月底全国研究生统考\n###   考试内容\n    逻辑 + 数学 + 写作 + 英语\n    逻辑 => 论证逻辑 + 推理逻辑\n    数学 => 算术 + 应用 + 代数 + 几何 + 数据分析 \n    英语 => 完形填空 + 阅读 + 翻译 + 小作文 + 大作文\n    写作 => 逻辑论证文 + 大论文\n\n\n### 写作题 \n ##### 论说文评分标准（出自大纲）：\n    1. 论文证据有效分析（满分30分）\n        评分依据15+15的方式给分。简单的说，15分是结构内容分，15分是表达文采分。考生能够正确指出文章中的三个缺陷并加以适当的分析即可得到15分结构内容分。剩下的15分则是按照考生对文章中缺陷点的论证程度、文章结构与语言表达来给分的，具体来说又分以下几个得分档：一类卷(12～15分)：论证或反驳有力，结构严谨，条理清楚，语言精练流畅。 　　二类卷(8～11分)：论证或反驳较为有力，结构尚完整，条理较清楚，语句较通顺，有少量语病。 　　三类卷(4～7分)：有论证或反驳，结构不够完整，语言欠连贯，较多语病，分析评论缺乏说服力。 　　四类卷(0～3分)：明显偏离题意，内容空洞，条理不清，语句严重不通。\n    2. 论说文（满分35分）\n        论说文是综合评分法，按照文章的内容、结构、语言三项综合评分。一类卷(30～35分)：立意深刻，中心突出，结构完整，行文流畅。二类卷(24～29分)：中心明确，结构较完整，层次较清楚，语句通顺。　三类卷(18～23分)：中心基本明确，结构尚完整，语句较通顺，有少量语病。四类卷(10～17分)：中心不太明确，结构不够完整，语句不通顺，有较多语病。　五类卷(10分以下)：偏离题意，结构残缺，层次混乱，语句严重不通。另外，漏拟题目扣2分，每3个错别字扣1分，重复的不计，扣满2分为止。\n\n\n\n        提到写作，我们的印象中好像都是写作文。但199的写作其实也是在考逻辑，与我们往常的作文不同，不讲究文笔而非常讲求逻辑。写作有大小作文之分，大作文是写一篇论说文，700字左右；小作文是论证有效性分析，也就是题目会给你一段有缺陷的材料，要求我们论证某些漏洞的有效性，600字左右。在这一块，逻辑+论据才是正确的。而论据也就是我们常说的要积累的素材。但不是直接把素材事例摆上去就行，不仅要概括素材，更重要的是要把它用成论据，要用事例证明你的观点。素材积累的话，《人民日报评论》、《红辣椒评论》这些可以常看看，喜马拉雅上《鬼才会背长素材》这个节目也可以听听，还可以关注管理类联考相关的公众号，他们经常会推送写作相关的素材以及写作方法，像友课管理类联考。坚持几个月行文一定有质的改变；但写作中逻辑性才是最重要的，一味堆积素材堆不出高分。素材也不必一味求多，一篇素材要能从多个角度进行分析，这样消化好的素材一篇顶十篇。小作文可以说是非常规矩的，总结出来就混淆概念、因果不当、以偏概全等几种错误，找到了漏洞，然后逐个分析，拿个基本分问题不大，小作文也是有模板可以套的，多练习就能掌握它的套路了，这是当时老师给我们总结的模板，大家前期可以尝试套模板练练。\n\n论说大作文，根据近些年的趋势来看，现在主要是自命题作文，题干会给我们一段材料，让我们根据材料自拟题目，写一篇与材料相关的论说文。有点类似于高中的议论文，但二者并不等同。高中议论文考査的主要还是你的文字功底，它属于“语文''的范畴；而论说文更强调说理，它属于“论证\"的范畴。拿到材料，我们首先要做的就是审题，判断要写的文章观点型还是关系型论说文；第二步就是立意，选择我们写作的方向，确定中心大意，这两个步骤决定我们的文章写的准不准、是否跑题。其次我们要在心中列一个大概的提纲，用来确定写作结构、用什么样的论说素材。\n\n\n### 基础学习时间\n### 夯实基础\n### 查漏补缺\n### 真题冲刺","source":"_posts/考研安排.md","raw":"---\ntitle: 考研写作文部分\ndate: 2023-06-1 10:40:24\ntags: \n- 进阶 路上\ncategories:\n- 进阶\n---\n\n### 考试安排\n    时间： 每年12月底全国研究生统考\n###   考试内容\n    逻辑 + 数学 + 写作 + 英语\n    逻辑 => 论证逻辑 + 推理逻辑\n    数学 => 算术 + 应用 + 代数 + 几何 + 数据分析 \n    英语 => 完形填空 + 阅读 + 翻译 + 小作文 + 大作文\n    写作 => 逻辑论证文 + 大论文\n\n\n### 写作题 \n ##### 论说文评分标准（出自大纲）：\n    1. 论文证据有效分析（满分30分）\n        评分依据15+15的方式给分。简单的说，15分是结构内容分，15分是表达文采分。考生能够正确指出文章中的三个缺陷并加以适当的分析即可得到15分结构内容分。剩下的15分则是按照考生对文章中缺陷点的论证程度、文章结构与语言表达来给分的，具体来说又分以下几个得分档：一类卷(12～15分)：论证或反驳有力，结构严谨，条理清楚，语言精练流畅。 　　二类卷(8～11分)：论证或反驳较为有力，结构尚完整，条理较清楚，语句较通顺，有少量语病。 　　三类卷(4～7分)：有论证或反驳，结构不够完整，语言欠连贯，较多语病，分析评论缺乏说服力。 　　四类卷(0～3分)：明显偏离题意，内容空洞，条理不清，语句严重不通。\n    2. 论说文（满分35分）\n        论说文是综合评分法，按照文章的内容、结构、语言三项综合评分。一类卷(30～35分)：立意深刻，中心突出，结构完整，行文流畅。二类卷(24～29分)：中心明确，结构较完整，层次较清楚，语句通顺。　三类卷(18～23分)：中心基本明确，结构尚完整，语句较通顺，有少量语病。四类卷(10～17分)：中心不太明确，结构不够完整，语句不通顺，有较多语病。　五类卷(10分以下)：偏离题意，结构残缺，层次混乱，语句严重不通。另外，漏拟题目扣2分，每3个错别字扣1分，重复的不计，扣满2分为止。\n\n\n\n        提到写作，我们的印象中好像都是写作文。但199的写作其实也是在考逻辑，与我们往常的作文不同，不讲究文笔而非常讲求逻辑。写作有大小作文之分，大作文是写一篇论说文，700字左右；小作文是论证有效性分析，也就是题目会给你一段有缺陷的材料，要求我们论证某些漏洞的有效性，600字左右。在这一块，逻辑+论据才是正确的。而论据也就是我们常说的要积累的素材。但不是直接把素材事例摆上去就行，不仅要概括素材，更重要的是要把它用成论据，要用事例证明你的观点。素材积累的话，《人民日报评论》、《红辣椒评论》这些可以常看看，喜马拉雅上《鬼才会背长素材》这个节目也可以听听，还可以关注管理类联考相关的公众号，他们经常会推送写作相关的素材以及写作方法，像友课管理类联考。坚持几个月行文一定有质的改变；但写作中逻辑性才是最重要的，一味堆积素材堆不出高分。素材也不必一味求多，一篇素材要能从多个角度进行分析，这样消化好的素材一篇顶十篇。小作文可以说是非常规矩的，总结出来就混淆概念、因果不当、以偏概全等几种错误，找到了漏洞，然后逐个分析，拿个基本分问题不大，小作文也是有模板可以套的，多练习就能掌握它的套路了，这是当时老师给我们总结的模板，大家前期可以尝试套模板练练。\n\n论说大作文，根据近些年的趋势来看，现在主要是自命题作文，题干会给我们一段材料，让我们根据材料自拟题目，写一篇与材料相关的论说文。有点类似于高中的议论文，但二者并不等同。高中议论文考査的主要还是你的文字功底，它属于“语文''的范畴；而论说文更强调说理，它属于“论证\"的范畴。拿到材料，我们首先要做的就是审题，判断要写的文章观点型还是关系型论说文；第二步就是立意，选择我们写作的方向，确定中心大意，这两个步骤决定我们的文章写的准不准、是否跑题。其次我们要在心中列一个大概的提纲，用来确定写作结构、用什么样的论说素材。\n\n\n### 基础学习时间\n### 夯实基础\n### 查漏补缺\n### 真题冲刺","slug":"考研安排","published":1,"updated":"2023-06-05T14:19:09.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliixubfo0000gta56aqy7w8l","content":"<h3 id=\"考试安排\"><a href=\"#考试安排\" class=\"headerlink\" title=\"考试安排\"></a>考试安排</h3><pre><code>时间： 每年12月底全国研究生统考\n</code></pre>\n<h3 id=\"考试内容\"><a href=\"#考试内容\" class=\"headerlink\" title=\"考试内容\"></a>考试内容</h3><pre><code>逻辑 + 数学 + 写作 + 英语\n逻辑 =&gt; 论证逻辑 + 推理逻辑\n数学 =&gt; 算术 + 应用 + 代数 + 几何 + 数据分析 \n英语 =&gt; 完形填空 + 阅读 + 翻译 + 小作文 + 大作文\n写作 =&gt; 逻辑论证文 + 大论文\n</code></pre>\n<h3 id=\"写作题\"><a href=\"#写作题\" class=\"headerlink\" title=\"写作题\"></a>写作题</h3><h5 id=\"论说文评分标准（出自大纲）：\"><a href=\"#论说文评分标准（出自大纲）：\" class=\"headerlink\" title=\"论说文评分标准（出自大纲）：\"></a>论说文评分标准（出自大纲）：</h5><pre><code>1. 论文证据有效分析（满分30分）\n    评分依据15+15的方式给分。简单的说，15分是结构内容分，15分是表达文采分。考生能够正确指出文章中的三个缺陷并加以适当的分析即可得到15分结构内容分。剩下的15分则是按照考生对文章中缺陷点的论证程度、文章结构与语言表达来给分的，具体来说又分以下几个得分档：一类卷(12～15分)：论证或反驳有力，结构严谨，条理清楚，语言精练流畅。 　　二类卷(8～11分)：论证或反驳较为有力，结构尚完整，条理较清楚，语句较通顺，有少量语病。 　　三类卷(4～7分)：有论证或反驳，结构不够完整，语言欠连贯，较多语病，分析评论缺乏说服力。 　　四类卷(0～3分)：明显偏离题意，内容空洞，条理不清，语句严重不通。\n2. 论说文（满分35分）\n    论说文是综合评分法，按照文章的内容、结构、语言三项综合评分。一类卷(30～35分)：立意深刻，中心突出，结构完整，行文流畅。二类卷(24～29分)：中心明确，结构较完整，层次较清楚，语句通顺。　三类卷(18～23分)：中心基本明确，结构尚完整，语句较通顺，有少量语病。四类卷(10～17分)：中心不太明确，结构不够完整，语句不通顺，有较多语病。　五类卷(10分以下)：偏离题意，结构残缺，层次混乱，语句严重不通。另外，漏拟题目扣2分，每3个错别字扣1分，重复的不计，扣满2分为止。\n\n\n\n    提到写作，我们的印象中好像都是写作文。但199的写作其实也是在考逻辑，与我们往常的作文不同，不讲究文笔而非常讲求逻辑。写作有大小作文之分，大作文是写一篇论说文，700字左右；小作文是论证有效性分析，也就是题目会给你一段有缺陷的材料，要求我们论证某些漏洞的有效性，600字左右。在这一块，逻辑+论据才是正确的。而论据也就是我们常说的要积累的素材。但不是直接把素材事例摆上去就行，不仅要概括素材，更重要的是要把它用成论据，要用事例证明你的观点。素材积累的话，《人民日报评论》、《红辣椒评论》这些可以常看看，喜马拉雅上《鬼才会背长素材》这个节目也可以听听，还可以关注管理类联考相关的公众号，他们经常会推送写作相关的素材以及写作方法，像友课管理类联考。坚持几个月行文一定有质的改变；但写作中逻辑性才是最重要的，一味堆积素材堆不出高分。素材也不必一味求多，一篇素材要能从多个角度进行分析，这样消化好的素材一篇顶十篇。小作文可以说是非常规矩的，总结出来就混淆概念、因果不当、以偏概全等几种错误，找到了漏洞，然后逐个分析，拿个基本分问题不大，小作文也是有模板可以套的，多练习就能掌握它的套路了，这是当时老师给我们总结的模板，大家前期可以尝试套模板练练。\n</code></pre>\n<p>论说大作文，根据近些年的趋势来看，现在主要是自命题作文，题干会给我们一段材料，让我们根据材料自拟题目，写一篇与材料相关的论说文。有点类似于高中的议论文，但二者并不等同。高中议论文考査的主要还是你的文字功底，它属于“语文’’的范畴；而论说文更强调说理，它属于“论证”的范畴。拿到材料，我们首先要做的就是审题，判断要写的文章观点型还是关系型论说文；第二步就是立意，选择我们写作的方向，确定中心大意，这两个步骤决定我们的文章写的准不准、是否跑题。其次我们要在心中列一个大概的提纲，用来确定写作结构、用什么样的论说素材。</p>\n<h3 id=\"基础学习时间\"><a href=\"#基础学习时间\" class=\"headerlink\" title=\"基础学习时间\"></a>基础学习时间</h3><h3 id=\"夯实基础\"><a href=\"#夯实基础\" class=\"headerlink\" title=\"夯实基础\"></a>夯实基础</h3><h3 id=\"查漏补缺\"><a href=\"#查漏补缺\" class=\"headerlink\" title=\"查漏补缺\"></a>查漏补缺</h3><h3 id=\"真题冲刺\"><a href=\"#真题冲刺\" class=\"headerlink\" title=\"真题冲刺\"></a>真题冲刺</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"考试安排\"><a href=\"#考试安排\" class=\"headerlink\" title=\"考试安排\"></a>考试安排</h3><pre><code>时间： 每年12月底全国研究生统考\n</code></pre>\n<h3 id=\"考试内容\"><a href=\"#考试内容\" class=\"headerlink\" title=\"考试内容\"></a>考试内容</h3><pre><code>逻辑 + 数学 + 写作 + 英语\n逻辑 =&gt; 论证逻辑 + 推理逻辑\n数学 =&gt; 算术 + 应用 + 代数 + 几何 + 数据分析 \n英语 =&gt; 完形填空 + 阅读 + 翻译 + 小作文 + 大作文\n写作 =&gt; 逻辑论证文 + 大论文\n</code></pre>\n<h3 id=\"写作题\"><a href=\"#写作题\" class=\"headerlink\" title=\"写作题\"></a>写作题</h3><h5 id=\"论说文评分标准（出自大纲）：\"><a href=\"#论说文评分标准（出自大纲）：\" class=\"headerlink\" title=\"论说文评分标准（出自大纲）：\"></a>论说文评分标准（出自大纲）：</h5><pre><code>1. 论文证据有效分析（满分30分）\n    评分依据15+15的方式给分。简单的说，15分是结构内容分，15分是表达文采分。考生能够正确指出文章中的三个缺陷并加以适当的分析即可得到15分结构内容分。剩下的15分则是按照考生对文章中缺陷点的论证程度、文章结构与语言表达来给分的，具体来说又分以下几个得分档：一类卷(12～15分)：论证或反驳有力，结构严谨，条理清楚，语言精练流畅。 　　二类卷(8～11分)：论证或反驳较为有力，结构尚完整，条理较清楚，语句较通顺，有少量语病。 　　三类卷(4～7分)：有论证或反驳，结构不够完整，语言欠连贯，较多语病，分析评论缺乏说服力。 　　四类卷(0～3分)：明显偏离题意，内容空洞，条理不清，语句严重不通。\n2. 论说文（满分35分）\n    论说文是综合评分法，按照文章的内容、结构、语言三项综合评分。一类卷(30～35分)：立意深刻，中心突出，结构完整，行文流畅。二类卷(24～29分)：中心明确，结构较完整，层次较清楚，语句通顺。　三类卷(18～23分)：中心基本明确，结构尚完整，语句较通顺，有少量语病。四类卷(10～17分)：中心不太明确，结构不够完整，语句不通顺，有较多语病。　五类卷(10分以下)：偏离题意，结构残缺，层次混乱，语句严重不通。另外，漏拟题目扣2分，每3个错别字扣1分，重复的不计，扣满2分为止。\n\n\n\n    提到写作，我们的印象中好像都是写作文。但199的写作其实也是在考逻辑，与我们往常的作文不同，不讲究文笔而非常讲求逻辑。写作有大小作文之分，大作文是写一篇论说文，700字左右；小作文是论证有效性分析，也就是题目会给你一段有缺陷的材料，要求我们论证某些漏洞的有效性，600字左右。在这一块，逻辑+论据才是正确的。而论据也就是我们常说的要积累的素材。但不是直接把素材事例摆上去就行，不仅要概括素材，更重要的是要把它用成论据，要用事例证明你的观点。素材积累的话，《人民日报评论》、《红辣椒评论》这些可以常看看，喜马拉雅上《鬼才会背长素材》这个节目也可以听听，还可以关注管理类联考相关的公众号，他们经常会推送写作相关的素材以及写作方法，像友课管理类联考。坚持几个月行文一定有质的改变；但写作中逻辑性才是最重要的，一味堆积素材堆不出高分。素材也不必一味求多，一篇素材要能从多个角度进行分析，这样消化好的素材一篇顶十篇。小作文可以说是非常规矩的，总结出来就混淆概念、因果不当、以偏概全等几种错误，找到了漏洞，然后逐个分析，拿个基本分问题不大，小作文也是有模板可以套的，多练习就能掌握它的套路了，这是当时老师给我们总结的模板，大家前期可以尝试套模板练练。\n</code></pre>\n<p>论说大作文，根据近些年的趋势来看，现在主要是自命题作文，题干会给我们一段材料，让我们根据材料自拟题目，写一篇与材料相关的论说文。有点类似于高中的议论文，但二者并不等同。高中议论文考査的主要还是你的文字功底，它属于“语文’’的范畴；而论说文更强调说理，它属于“论证”的范畴。拿到材料，我们首先要做的就是审题，判断要写的文章观点型还是关系型论说文；第二步就是立意，选择我们写作的方向，确定中心大意，这两个步骤决定我们的文章写的准不准、是否跑题。其次我们要在心中列一个大概的提纲，用来确定写作结构、用什么样的论说素材。</p>\n<h3 id=\"基础学习时间\"><a href=\"#基础学习时间\" class=\"headerlink\" title=\"基础学习时间\"></a>基础学习时间</h3><h3 id=\"夯实基础\"><a href=\"#夯实基础\" class=\"headerlink\" title=\"夯实基础\"></a>夯实基础</h3><h3 id=\"查漏补缺\"><a href=\"#查漏补缺\" class=\"headerlink\" title=\"查漏补缺\"></a>查漏补缺</h3><h3 id=\"真题冲刺\"><a href=\"#真题冲刺\" class=\"headerlink\" title=\"真题冲刺\"></a>真题冲刺</h3>"}],"PostAsset":[],"PostCategory":[{"post_id":"cli9sa41h0005jza57yenau2z","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41k000djza5f9qdh2rl"},{"post_id":"cli9sa4190000jza56s041mmf","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41m000hjza5ccgnfae3"},{"post_id":"cli9sa41h0006jza54avt71dx","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41n000kjza5drmy5jk8"},{"post_id":"cli9sa41d0001jza5h7rf28ra","category_id":"cli9sa41i0007jza5g9f74v4y","_id":"cli9sa41o000pjza5cmlq8qxc"},{"post_id":"cli9sa41l000gjza5akpx2qw2","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41p000sjza5gobn45kp"},{"post_id":"cli9sa41g0004jza5218u55aa","category_id":"cli9sa41k000ejza56u9k27my","_id":"cli9sa41q000xjza59lrj60x5"},{"post_id":"cli9sa41m000jjza52evz5tt7","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41r000zjza584dg50c9"},{"post_id":"cli9sa41o000ojza55xv82mt7","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41r0011jza5c5ch51sf"},{"post_id":"cli9sa41j000ajza5gkw58v3r","category_id":"cli9sa41n000ljza58dpt0xwx","_id":"cli9sa41r0015jza5498cd7i8"},{"post_id":"cli9sa41p000rjza5bxhk0mp7","category_id":"cli9sa41e0002jza532cv6j1p","_id":"cli9sa41r0016jza582ax43os"},{"post_id":"cli9sa41k000cjza5dfschabd","category_id":"cli9sa41p000ujza5743nhso0","_id":"cli9sa41t0018jza5ftbw45jh"},{"post_id":"cli9sa41q000wjza5gz064qwq","category_id":"cli9sa41r0012jza5cocu8pa7","_id":"cli9sa41t001ajza52lqm4pwu"},{"post_id":"cli9sa41w001ejza51e9f7c8n","category_id":"cli9sa41n000ljza58dpt0xwx","_id":"cli9sa41x001gjza53pd33plu"},{"post_id":"cli9sa42o001hjza5bi9p2up4","category_id":"cli9sa41k000ejza56u9k27my","_id":"cli9sa42p001jjza5afsh3mgu"},{"post_id":"cli9sa42u001kjza5a27x8xad","category_id":"cli9sa41n000ljza58dpt0xwx","_id":"cli9sa42v001mjza5asxu4uvv"},{"post_id":"cliixubfo0000gta56aqy7w8l","category_id":"cli9sa41i0007jza5g9f74v4y","_id":"cliixubfz0002gta57nhqeaah"}],"PostTag":[{"post_id":"cli9sa4190000jza56s041mmf","tag_id":"cli9sa41f0003jza5202lelqw","_id":"cli9sa41j0009jza52dqxh9p4"},{"post_id":"cli9sa41h0006jza54avt71dx","tag_id":"cli9sa41f0003jza5202lelqw","_id":"cli9sa41k000bjza55sk796rz"},{"post_id":"cli9sa41d0001jza5h7rf28ra","tag_id":"cli9sa41i0008jza52pz7gha3","_id":"cli9sa41m000ijza53rfjfdob"},{"post_id":"cli9sa41l000gjza5akpx2qw2","tag_id":"cli9sa41f0003jza5202lelqw","_id":"cli9sa41o000njza5huvfhkul"},{"post_id":"cli9sa41g0004jza5218u55aa","tag_id":"cli9sa41l000fjza53rmu8z55","_id":"cli9sa41p000qjza518ekb5jd"},{"post_id":"cli9sa41o000ojza55xv82mt7","tag_id":"cli9sa41o000mjza5f4hf34ir","_id":"cli9sa41p000tjza593x45c33"},{"post_id":"cli9sa41h0005jza57yenau2z","tag_id":"cli9sa41o000mjza5f4hf34ir","_id":"cli9sa41q000yjza5hfil8l5b"},{"post_id":"cli9sa41p000rjza5bxhk0mp7","tag_id":"cli9sa41o000mjza5f4hf34ir","_id":"cli9sa41r0010jza59l454mm6"},{"post_id":"cli9sa41j000ajza5gkw58v3r","tag_id":"cli9sa41q000vjza5hp0w9zaq","_id":"cli9sa41r0014jza5225p1ftw"},{"post_id":"cli9sa41k000cjza5dfschabd","tag_id":"cli9sa41r0013jza54nfxbmjc","_id":"cli9sa41t0019jza5dislanfq"},{"post_id":"cli9sa41m000jjza52evz5tt7","tag_id":"cli9sa41o000mjza5f4hf34ir","_id":"cli9sa41t001cjza5h2xsdky2"},{"post_id":"cli9sa41q000wjza5gz064qwq","tag_id":"cli9sa41t001bjza561n2dedb","_id":"cli9sa41t001djza5f4kq577h"},{"post_id":"cli9sa41w001ejza51e9f7c8n","tag_id":"cli9sa41q000vjza5hp0w9zaq","_id":"cli9sa41x001fjza51o4l8o9x"},{"post_id":"cli9sa42o001hjza5bi9p2up4","tag_id":"cli9sa41l000fjza53rmu8z55","_id":"cli9sa42p001ijza5eteb5vdl"},{"post_id":"cli9sa42u001kjza5a27x8xad","tag_id":"cli9sa41q000vjza5hp0w9zaq","_id":"cli9sa42v001ljza5cl0u7n94"},{"post_id":"cliixubfo0000gta56aqy7w8l","tag_id":"cliixubfv0001gta5b5bj0jgi","_id":"cliixubfz0003gta5he7p8c7m"}],"Tag":[{"name":"js","_id":"cli9sa41f0003jza5202lelqw"},{"name":"证书","_id":"cli9sa41i0008jza52pz7gha3"},{"name":"面试","_id":"cli9sa41l000fjza53rmu8z55"},{"name":"js | 框架 | 打包工具","_id":"cli9sa41o000mjza5f4hf34ir"},{"name":"vue","_id":"cli9sa41q000vjza5hp0w9zaq"},{"name":"js 面试","_id":"cli9sa41r0013jza54nfxbmjc"},{"name":"路上","_id":"cli9sa41t001bjza561n2dedb"},{"name":"进阶 路上","_id":"cliixubfv0001gta5b5bj0jgi"}]}}